<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "/WEB-INF/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userSql">
	<!-- e-mail 셀렉트 박스 -->
	<select id="getList" resultType="HashMap">
		SELECT * FROM TB_COM_MNGR_AUTHRT A, TB_COM_CD B WHERE A.DEPTNAME = B.CODEID AND B.CODE=#{deptname}
	</select>
<!-- ListAgg(IS_MANAGER,',') within group(order by is_manager) -->
	<select id="getMatch" resultType="HashMap">
		SELECT DISTINCT(C.USERID),C.USERNAME,C.USERNO,C.E_MAIL,C.POSITION_C, PHONE, INPHONE,DEPTCD,DEPTNAME, FDEPTCD
		     , substr(xmlagg(xmlelement(X,',',IS_MANAGER) ORDER BY IS_MANAGER).extract('//text()').getstringval(),2) ISMANAGER
		     , 0 AS TEAM
		FROM (
		    SELECT 'mten' AS EMP_PK_NO , 'mten' AS USERID,'전체관리자' as USERNAME,'mten' AS USERNO,'Y' AS IS_MANAGER,'법무실' AS DEPTNAME,
		           'dlmten@mten.com' AS E_MAIL,'' AS POSITION_C,'6113516' AS DEPTCD, '031-000-0000' AS PHONE, '031-000-0000' AS INPHONE ,'' AS FDEPTCD  from dual
		    UNION ALL 
		    SELECT  '3', '3', '과장권한', '3', 'G', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '4', '4', '소송관리권한', '4', 'C', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '5', '5', '소송접수권한', '5', 'L', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '6', '6', '소송비용권한', '6', 'D', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '7', '7', '소송비용회수권한', '7', 'E', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '8', '8', '자문관리권한', '8', 'J', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '9', '9', '자문접수권한 ', '9', 'M', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '10', '10', '자문팀장권한', '10', 'Q', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '11', '11', '협약관리권한', '11', 'A', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '12', '12', '협약접수권한', '12', 'N', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '13', '13', '협약팀장권한', '13', 'R', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '14', '14', '자문료권한', '14', 'F', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '15', '15', '법률고문담당권한', '15', 'I', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT  '16', '16', '인지대/송달료권한', '16', 'B', '법률지원담당관', '', '', '6113516', '', '', '서울특별시 기획조정실 정책기획관'  FROM DUAL  UNION ALL 
		    SELECT A.EMP_PK_NO,A.EMP_NO,EMP_NM,C.EMP_NO,MNGR_AUTHRT_NM
		         , (
		               SELECT D.DEPT_NM
		               FROM TB_COM_ORGCHT D
		               WHERE A.DEPT_NO = D.DEPT_NO
		           ) AS DEPTNAME <!-- 수정 이렇게 진행해도 되는지 여쭤보기 -->
		         , EML_ADDR,JBGD_NM,A.DEPT_NO, A.WRC_TELNO, A.MBL_TELNO ,UP_DEPT_NM   
		    FROM TB_COM_HRIS A LEFT OUTER JOIN TB_COM_MNGR_AUTHRT C ON A.EMP_NO =C.EMP_NO  
		) c
		WHERE EMP_PK_NO = #{userid}
		GROUP BY C.USERID,C.USERNAME,C.USERNO,C.DEPTNAME,C.E_MAIL,C.POSITION_C,C.DEPTCD, PHONE, INPHONE, FDEPTCD   
	</select>
	
	<select id="getEmpNo" resultType="String">
		SELECT EMP_PK_NO
		FROM TB_COM_CRTF
		WHERE CRTF_SN = #{CRTF_SN}
		  AND CRTF_NM = #{CRTF_NM}
	</select>
	
	<select id="getEmpNo2" resultType="String">
		SELECT EMP_PK_NO
		FROM TB_COM_HRIS
		WHERE EMP_NO = #{EMP_NO}
	</select>
	
	<select id="getGpkiSnCnt" resultType="int">
		SELECT COUNT(*)
		FROM TB_COM_CRTF
		WHERE EMP_PK_NO = #{EMP_PK_NO}
	</select>
	
	<insert id="insertGPKIInfo" parameterType="HashMap">
		INSERT INTO TB_COM_CRTF (
		    EMP_PK_NO
		  , EMP_NO
		  , CRTF_SN
		  , CRTF_NM
		  , WRT_YMD
		) VALUES (
		    #{EMP_PK_NO}
		  , #{EMP_NO}
		  , #{CRTF_SN}
		  , #{CRTF_NM}
		  , to_char(sysdate,'YYYYMMDD')
		)
	</insert>
	
	<update id="updateGPKIInfo" parameterType="HashMap">
		UPDATE TB_COM_CRTF
		SET CRTF_SN = #{CRTF_SN}
		  , CRTF_NM = #{CRTF_NM}
		  , MDFCN_YMD = to_char(sysdate,'YYYYMMDD')
		WHERE EMP_PK_NO = #{EMP_PK_NO}
	</update>
	
	<!-- ListAgg(a1,',') within group(order by a1)-->
	<select id="getGrap" resultType="String">
		select CASE WHEN  count(*)>0 then 'R' end as a1 from tb_lm_rulehistory a  where statecd not in ('5000','6000') and  a.userid like '%'||#{dept}||'%'
	</select>
	<select id="getMatch_nosso" resultType="HashMap">
	     select * from (
             WITH TDATA AS
            ( 
          SELECT '0' as userid,'젼체관리자' as username,'0' as userno,'0' as pwd,'Y' as is_manager,'' as deptname,'' as e_mail,'' as position,'' as codeid,'' as deptcd,'' as nickname FROM DUAL
            UNION ALL 
            SELECT '1','규정관리자','1','1','N','','','','','','' FROM DUAL 
            UNION ALL 
            SELECT '2','사용자','2','2','P','','','','','','' FROM DUAL
            ) select * from TDATA
             union all
             select to_char(a.empid),to_char(a.empname),to_char(a.userid),nvl2(d.pwd,to_char(d.pwd),sys.utl_encode.text_encode(to_char(a.userid), 'KO16KSC5601', 1)),to_char(c.is_manager),to_char(b.deptname),to_char(a.email),to_char((select count(*) from tb_lm_rulehistory where dept = to_char(a.deptseq))),'',to_char(a.deptseq),'' 
             from IFS_TDAEMP a,IFS_TDADEPT b,TB_COM_MNGR_AUTHRT c, tb_lm_emp d where a.deptseq=b.deptseq and a.empid=c.userno(+) and a.empid = d.empno(+)
        ) where userno = #{userid} and pwd = sys.utl_encode.text_encode(#{pwd}, 'KO16KSC5601', 1)
	</select>
	
	<select id="getEmptDept" resultType="String">
		select codeid from TB_COM_CD where code='부서미지정'
	</select>
	
	<select id="getDept" resultType="String">
		select codeid from TB_COM_CD where code=#{code}
	</select>
	
	<insert id="InsertDept" parameterType="HashMap">
		<selectKey keyProperty="CD_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_COM_CD 
			(CD_MNG_NO,CD_LCLSF_ENG_NM,CD_LCLSF_KORN_NM,CD_NM,SORT_SEQ,USE_YN) 
			VALUES
			(#{CD_MNG_NO},'DEPTNAME','부서구분',#{CD_NM},(select max(SORT_SEQ) from TB_COM_CD where CD_LCLSF_ENG_NM='DEPTNAME')+1,'Y')
	</insert>
	
	<!-- 새 사용자 등록 -->
	<insert id="createUser" parameterType="HashMap">
		<selectKey keyProperty="MNGR_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_COM_MNGR_AUTHRT (MNGR_MNG_NO, MNGR_EMP_NM, EMP_NO, MNGR_AUTHRT_NM, MNGR_DEPT_NM,MNGR_DEPT_NO,MNGR_AUTHRT_CD)
		VALUES (#{MNGR_MNG_NO},#{EMP_NM},#{EMP_NO},#{MNGR_AUTHRT_NM},#{DEPT_NM},#{DEPT_NO},#{MNGR_AUTHRT_CD})
	</insert>
	
	<update id="updateUser" parameterType="HashMap">
		UPDATE TB_COM_MNGR_AUTHRT 
		SET MNGR_EMP_NM=#{MNGR_EMP_NM}, EMP_NO=#{EMP_NO}, MNGR_DEPT_NM=#{DEPT_NM}, MNGR_AUTHRT_NM=#{MNGR_AUTHRT_NM},
			MNGR_DEPT_NO=#{DEPT_NO},MNGR_AUTHRT_CD=#{MNGR_AUTHRT_CD}
		WHERE MNGR_MNG_NO=#{MNGR_MNG_NO}
	</update>
	
	<select id="getUserList" resultType="map">
		SELECT EMP_NO ,EMP_NM ,WRC_TELNO,JBTTL_CD
			,(select DEPT_NM from TB_COM_ORGCHT where DEPT_NO = a.DEPT_NO ) as DEPT_NM,DEPT_NO
		FROM TB_COM_HRIS a
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="schTxt != null and schTxt != ''">
				EMP_NM like  '%'||#{schTxt}||'%'
				<if test="DEPT_NO != '' and DEPT_NO != null">
					and DEPT_NO = #{DEPT_NO}
				</if>
			</if>
			<if test="Deptcd != null and Deptcd != ''">
				AND DEPT_NO = #{DEPT_NO}
			</if>
		</trim>
		order by DEPT_NO
	</select>
	
	<select id="userinfo" resultType="map"  >
		SELECT * FROM VW_DLAWUSER where userid = #{usernames}
	</select>
	
	<insert id="setUserDate">
		insert into TB_COM_CNTN_LOG (CNTN_YMD,CNTN_EMP_NO,CNTN_DEPT_NO,CNTN_DEPT_NM) 
		values(to_char(sysdate,'YYYYMMDD'),#{CNTN_EMP_NO},#{CNTN_DEPT_NO},#{CNTN_DEPT_NM})
	</insert>
	
	<select id="setUserCon" resultType="HashMap">
		select (select count(*) from TB_COM_CNTN_LOG where CNTN_YMD=to_date(sysdate,'YYYYMMDD')) as cnt1 , (select count(*) from TB_COM_CNTN_LOG) as cnt2 from dual
	</select>
	
	<select id="getMatch_chkEmpno" resultType="HashMap">
		WITH TDATA AS
            ( 
             select  empname as username, a.userid as userid, empid as empno,  nvl2(b.pwd ,b.pwd,sys.utl_encode.text_encode(a.userid,'KO16KSC5601',1)) as pwd           
                from
                    IFS_TDAEMP a,
                    tb_lm_emp b          
                where
                    a.empid = b.empno(+) 
            ) select * from TDATA
             where empno =  #{empno} 
        and pwd = sys.utl_encode.text_encode( #{pw} , 'KO16KSC5601', 1) 
	</select>
	
	<insert id="insertEmp" parameterType="HashMap">
		MERGE INTO 
            TB_LM_EMP a
        USING 
            (SELECT #{empno} AS empno FROM DUAL) b
        ON (a.empno = b.empno)
        WHEN MATCHED THEN
            UPDATE SET a.pwd = sys.utl_encode.text_encode(#{pwr}, 'KO16KSC5601', 1)
        WHEN NOT MATCHED THEN
            INSERT (EMPNO, PWD)
            VALUES (#{empno}, sys.utl_encode.text_encode(#{pwr}, 'KO16KSC5601', 1))
	</insert>
	
	<select id="getToken" resultType="String">
		select LOGIN_ENCRYPT(#{id},#{pw})as key from dual
	</select>
	
	<select id="getUinfo" resultType="String">
		select LOGIN_DECRYPT(#{key}) as key from dual
	</select>
	
	<select id="getNodes" resultType="HashMap">
		select CD_MNG_NO,CD_LCLSF_ENG_NM,CD_LCLSF_KORN_NM,CD_NM,SORT_SEQ,USE_YN,CD_MNG_NO as "id",CD_NM as "text" ,'dept' as "cls"
		from TB_COM_CD where CD_LCLSF_ENG_NM=#{node} and USE_YN='Y'
		ORDER BY SORT_SEQ
	</select>
	
	<select id="getUser" resultType="HashMap">
		SELECT MNGR_MNG_NO, MNGR_EMP_NM, EMP_NO, MNGR_AUTHRT_NM, MNGR_DEPT_NM,MNGR_AUTHRT_CD,MNGR_DEPT_NO,MNGR_MNG_NO as "id",MNGR_EMP_NM as "text" 
			,decode(MNGR_DEPT_NM,'Y','admin','user') as "cls"
		FROM TB_COM_MNGR_AUTHRT
		WHERE trim(MNGR_AUTHRT_CD) = #{node}
		ORDER BY MNGR_EMP_NM
	</select>
	
	<insert id="createRole" parameterType="HashMap">
		<selectKey keyProperty="CD_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_COM_CD 
			(CD_MNG_NO,CD_LCLSF_ENG_NM,CD_LCLSF_KORN_NM,CD_NM,SORT_SEQ,USE_YN) 
			VALUES
			(#{CD_MNG_NO},#{CD_LCLSF_ENG_NM},#{CD_LCLSF_KORN_NM},#{CD_NM},(select max(SORT_SEQ) from TB_COM_CD where CD_LCLSF_ENG_NM='ROLE')+1,'Y')
	</insert>
	
	<select id="getUserNum" resultType="int">
		SELECT COUNT(MNGR_MNG_NO)
		FROM TB_COM_MNGR_AUTHRT
		WHERE trim(MNGR_AUTHRT_CD) = #{MNGR_AUTHRT_CD}
	</select>
	
	<delete id="deleteRole">
		DELETE FROM TB_COM_CD
		WHERE CD_MNG_NO = #{CD_MNG_NO}
	</delete>
	
	<select id="isUserExist" resultType="int">
		SELECT COUNT(MNGR_MNG_NO) 
		FROM TB_COM_MNGR_AUTHRT
		WHERE EMP_NO = #{EMP_NO}
		<if test="MNGR_AUTHRT_NM != null and MNGR_AUTHRT_NM != ''"> 
			and MNGR_AUTHRT_NM = #{MNGR_AUTHRT_NM}
		</if>
	</select>
	
	<!-- 사용자 이동 -->
	<update id="moveNode">
		UPDATE TB_COM_MNGR_AUTHRT
		SET MNGR_AUTHRT_CD = #{MNGR_AUTHRT_CD}, MNGR_AUTHRT_NM = #{MNGR_AUTHRT_NM}
		WHERE MNGR_MNG_NO = #{MNGR_MNG_NO}
	</update>
	
	<!-- 사용자 삭제 -->
	<delete id="deleteUser">
		DELETE FROM TB_COM_MNGR_AUTHRT
		WHERE MNGR_MNG_NO = #{MNGR_MNG_NO}
	</delete>
	
	<select id="setDeptList" resultType="HashMap">
		SELECT
            ROWNUM  as RNUM, 
            T.DEPT_NO,
            T.UP_DEPT_NO,
            T.DEPT_NM,
            level as LVL 
        FROM 
       TB_COM_ORGCHT T
        WHERE T.USE_YN='Y'
        START WITH 
            T.UP_DEPT_NO = #{root}                  
        CONNECT BY PRIOR T.DEPT_NO=T.UP_DEPT_NO
	</select>
	
	<select id="selectOrg" resultType="HashMap">
		SELECT DEP_CODE,UPR_DEPT_CODE,DEP_CODE_NM,DEP_FULL_NM,DEPT_RANK
			,LPAD('',(LEVEL-1)*2,'')||SYS_CONNECT_BY_PATH(REPLACE(DEP_CODE_NM,' > ',''),' > ')AS PATH   
			,LPAD('',(LEVEL-1)*2,'')||SYS_CONNECT_BY_PATH(REPLACE(DEP_CODE,' > ',''),' > ')AS OGNZ_NO_PATH_CN
        FROM NTIS.V_DEPT_INFO A
        START WITH DEP_CODE = (SELECT MAX(SPRM_DEPT_CODE) FROM NTIS.V_DEPT_INFO)
        CONNECT BY PRIOR DEP_CODE = UPR_DEPT_CODE
        ORDER SIBLINGS BY DEPT_RANK
	</select>
	
	<select id="selectUser" resultType="HashMap">
		SELECT LOGON_ID,USR_NM,ORGIN_BLG_DEP_CODE,ORGIN_BLG_DEP_NM,ORGIN_BLG_DEP_FULL_NM,CLSS_NM,TELNO,HPNO,EMAIL_ADDR,BLG_TEAM_NM FROM NTIS.V_USER_INFO
	</select>
	
	<delete id="deleteTB_COM_ORGCHT">
		delete from TB_COM_ORGCHT
	</delete>
	
	<insert id="insertTB_COM_ORGCHT">
		INSERT INTO
			TB_COM_ORGCHT (
				DEPT_NO,
				UP_DEPT_NO,
				SORT_SEQ,
				DEPT_NM,
				DEPT_GROUP_NM,
				OGNZ_NM_PATH_CN,
				OGNZ_NO_PATH_CN,
				REG_YMD,
				use_yn
			)
		VALUES
			(
				#{DEP_CODE},#{UPR_DEPT_CODE},#{DEPT_RANK},#{DEP_CODE_NM},#{DEP_CODE_NM},#{PATH},#{OGNZ_NO_PATH_CN},to_char(sysdate,'yyyy-mm-dd'),'Y'
			)
	</insert>
	
	<delete id="deleteIms_User">
		delete from TB_COM_HRIS
	</delete>
	
	<insert id="insertIms_User">
		INSERT INTO
			TB_COM_HRIS (
				user_id,user_nm,
				in_hjgu,
				site,
				site_nm,
				o_phone,
				jikgub_cd,
				jikgub_nm,
				jikchk_cd,
				jikchk_nm,
				user_enm,
				mail_id,
				DEPT_NO,
				com_cd,
				com_nm,
				call_cd,
				grd_cd,
				use_yn,
				tmp_yn,
				tmp_st_dt,
				tmp_end_dt,
				mobile
			)
		VALUES
			(
				#{LOGON_ID},#{USR_NM},'','',''
				,#{HPNO},#{ORGIN_BLG_DEP_NM},#{ORGIN_BLG_DEP_FULL_NM},'','',''
				,#{EMAIL_ADDR},#{ORGIN_BLG_DEP_CODE},'',#{BLG_TEAM_NM},#{CLSS_NM},'','','','','',#{TELNO}
			)
	</insert>
	
	
	
	<insert id="insertTB_LM_INSTALLCHK">
		INSERT INTO TB_COM_INSTL_YN (
			IP_ADDR, EMP_NO, INSTL_YN
		) VALUES (
			#{IP_ADDR}, #{EMP_NO}, #{INSTL_YN}
		)
	</insert>
	
	<update id="updateTB_LM_INSTALLCHK1">
		update TB_COM_INSTL_YN set INSTL_YN = #{INSTL_YN} WHERE EMP_NO=#{EMP_NO}
	</update>
	
	<update id="updateTB_LM_INSTALLCHK2">
		update TB_COM_INSTL_YN set INSTL_YN = #{INSTL_YN} WHERE IP_ADDR=#{IP_ADDR}
	</update>
	
	<select id="selectTB_LM_INSTALLCHK1" resultType="int">
		SELECT count(*)
		FROM TB_COM_INSTL_YN
		WHERE EMP_NO=#{EMP_NO}
	</select>
	
	<select id="selectTB_LM_INSTALLCHK2" resultType="int">
		SELECT count(*)
		FROM TB_COM_INSTL_YN
		WHERE IP_ADDR=#{IP_ADDR}
	</select>
	
	<select id="selectTB_LM_INSTALLCHK3" resultType="int">
		SELECT count(*)
		FROM TB_COM_INSTL_YN
		WHERE IP_ADDR=#{IP_ADDR} AND EMP_NO=#{EMP_NO}
	</select>
	
	<delete id="deleteTB_LM_INSTALLCHK1">
		DELETE FROM
		TB_COM_INSTL_YN
		WHERE EMP_NO=#{EMP_NO}
	</delete>
	
	<delete id="deleteTB_LM_INSTALLCHK2">
		DELETE FROM
		TB_COM_INSTL_YN
		WHERE IP_ADDR=#{IP_ADDR}
	</delete>
	
	<select id="selectTB_LM_INSTALLCHK1_1" resultType="String">
		SELECT INSTL_YN
		FROM TB_COM_INSTL_YN
		WHERE EMP_NO=#{EMP_NO}
	</select>
	
	
	<select id="selectTB_LM_INSTALLCHK2_1" resultType="String">
		SELECT distinct(INSTL_YN)
		FROM TB_COM_INSTL_YN
		WHERE IP_ADDR=#{IP_ADDR}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>

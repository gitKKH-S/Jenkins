<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "/WEB-INF/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bylawSql">
	<cache flushInterval="86400000" eviction="LRU"/>
	
	<!-- law_book Insert 제정시-->
	<insert id="lawbookInsert">
		<selectKey keyProperty="BOOKID" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULEHISTORY
		(
			BOOKID,CATID,OBOOKID,ORD,BOOKCODE,REVCD,REVCHA,STATECD,PROMULDT,PROMULNO,
			ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,
			REVREASON,MAINPITH,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,DEPT,USERNAME,USERID,PHONE,BUYN,ACTIONYN,GRADE,homeyn,buchkyn,prelawyn,ALLREVYN,XMLSCHTXT
		)
		VALUES
		(
			#{BOOKID},#{CATID},
			<choose>
			    <when test="OBOOKID == null or OBOOKID == ''">
			        #{BOOKID},
			    </when>
			    <otherwise>
			        #{OBOOKID},
			    </otherwise>
			</choose>
			#{ORD},#{BOOKCODE},#{REVCD},#{REVCHA},#{STATECD},#{PROMULDT},#{PROMULNO},
			#{ABOLISHDT},#{STARTDT},#{ENDDT},#{BOOKCD},#{BOOKSUBCD},#{TITLE},#{UPDT},#{USEYN},#{DELYN},#{OTHERLAW},#{LEGISLATOR},
			#{REVREASON},'',#{OPENYN},#{WORKSTATECD},#{NOFORMYN},#{DEPTNAME},#{LINKURL},#{DEPT},#{USERNAME},#{USERID},#{PHONE},#{BUYN}
			,#{ACTIONYN},#{GRADE},#{HOMEYN},#{BUCHKYN},#{PRELAWYN},#{ALLREVYN},#{XMLSCHTXT}
		)
	</insert>
	
	<update id="updateStep">
		UPDATE TB_LM_RULEHISTORY
		SET statecd=#{STATECD}
		WHERE bookid=#{bookid}
	</update>	
	<!-- TB_LM_RULEHISTORY update -->
	<update id="lawBookUpdate" parameterType="HashMap">
		UPDATE TB_LM_RULEHISTORY SET 
			ORD=#{ORD},BOOKCODE=#{BOOKCODE},REVCD=#{REVCD},REVCHA=#{REVCHA},PROMULDT=#{PROMULDT},PROMULNO=#{PROMULNO},
			ABOLISHDT=#{ABOLISHDT},STARTDT=#{STARTDT},ENDDT=#{ENDDT},BOOKCD=#{BOOKCD},BOOKSUBCD=#{BOOKSUBCD},TITLE=#{TITLE},UPDT=#{UPDT},USEYN=#{USEYN},DELYN=#{DELYN},
			OTHERLAW=#{OTHERLAW},MAINPITH=#{MAINPITH},LEGISLATOR=#{LEGISLATOR},OPENYN=#{OPENYN},WORKSTATECD=#{WORKSTATECD},DEPTNAME=#{DEPTNAME},LINKURL=#{LINKURL}
			,USERNAME=#{USERNAME},USERID=#{USERID},PHONE=#{PHONE},DEPT=#{DEPT},BUYN=#{BUYN},ACTIONYN=#{ACTIONYN},GRADE=#{GRADE},HOMEYN=#{HOMEYN},BUCHKYN=#{BUCHKYN},PRELAWYN=#{PRELAWYN}
		WHERE BOOKID=#{BOOKID}
	</update>
	<!-- 문서정보 변경시 타이틀이 수정되므로 lawbook,lawcat 두개의 테이블에 업데이트를 하기위해 -->
	<update id="lawCatTitle" parameterType="HashMap">
		UPDATE TB_LM_RULECAT SET 
			TITLE=#{TITLE}
		WHERE CATID=(SELECT CATID FROM TB_LM_RULEHISTORY WHERE BOOKID = #{BOOKID})
	</update>
	
	<!-- TB_LM_RULEHISTORY history -->
	<select id="getBookHistory" resultType="HashMap">
		SELECT CATID,REVCD,PROMULDT,BOOKID,REVCHA,STARTDT,STATECD,ENDDT,TITLE,DEPTNAME,NOFORMYN,BOOKCD,BOOKSUBCD,PROMULNO,OBOOKID,BOOKCODE,OTHERLAW,XMLID,BUYN
		FROM TB_LM_RULEHISTORY
		WHERE OBOOKID = #{obookid} ORDER BY REVCHA DESC 		
	</select>
	
	<!-- TB_LM_RULEHISTORY history -->
	<select id="getBookHistoryXML" resultType="HashMap">
		SELECT REVCD,PROMULDT,BOOKID,REVCHA,STARTDT,STATECD,ENDDT,TITLE,DEPTNAME,NOFORMYN,BOOKCD,BOOKSUBCD,PROMULNO,OBOOKID,BOOKCODE,OTHERLAW,USEYN
		FROM TB_LM_RULEHISTORY
		WHERE OBOOKID = #{obookid} ORDER BY REVCHA DESC 		
	</select>
	
	<!-- TB_LM_RULEHISTORY history -->
	<select id="linkAndXml" resultType="HashMap">
		SELECT BOOKID,CATID,OBOOKID,ORD,BOOKCODE,REVCD,REVCHA,STATECD,PROMULDT,PROMULNO
			ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,UPDT,USEYN,DELYN,OTHERLAW
			LEGISLATOR,REVREASON,MAINPITH,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,'BOOK' AS GBN ,XMLDATA
		FROM TB_LM_RULEHISTORY 
		WHERE BOOKID = #{bookid}
	</select>
	
	<!-- revcha 이전에 전부개정된 차수-->
	<select id="GetAllRevCha" resultType="String">
		SELECT NVL(MAX(REVCHA),0) FROM TB_LM_RULEHISTORY 
		WHERE 
			OBOOKID = #{obookid} 
			AND REVCD =#{revcd}  
			<![CDATA[
				AND REVCHA <= #{revcha}
			]]>
	</select>
	<!-- 신구조문대비표 XML 에 연혁 자료가 없다는..-->
	<select id="GetOldNew" resultType="HashMap">
		SELECT 'JE'||a.REVCHA||'CHA'||a.REVCD||'('||a.STARTDT||')' OLDTITLE, b.NEWTITLE FROM  TB_LM_RULEHISTORY a,
		(SELECT 'JE'||REVCHA||'CHA '||REVCD||'('||STARTDT||')' newtitle, revcha, obookid  FROM TB_LM_RULEHISTORY WHERE BOOKID = #{bookid}) b
		WHERE a.OBOOKID=b.obookid AND a.REVCHA=b.revcha-1            
	</select>	
	
	<!-- 링크를 걸기위해 내규 제목 검색 -->
	<select id="GetLink1" resultType="String">
		SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE NOFORMYN ='N' AND STATECD=(select stateid from tb_lm_state where statecd = #{statecd}) AND REPLACE(TITLE,' ','') = #{slaw}
	</select>
	
	<!-- 링크를 걸기위해 법령 제목 검색 -->
	<select id="GetLink2" resultType="String">
		SELECT LAWID FROM TB_LM_LAWKOREA WHERE REPLACE(replace(lawname,'ㆍ','·'),' ','') = REPLACE(#{slaw},' ','')
	</select>
	
	<!-- 법령업데이트를위한 삭제 -->
	<delete id="DeleteLaw">
		DELETE FROM TB_LM_LAWKOREA
	</delete>
	
	<!-- 법령업데이트 -->
	<insert id="InsertLaw">
		INSERT INTO TB_LM_LAWKOREA
		(
			ID,LAWNAME,CS7
		)
		VALUES
		(
			#{id},#{lawname},#{cs7}
		)
	</insert>
	
	<!--현행조회  -->
	<select id="selectBon" resultType="HashMap">
		<![CDATA[
		SELECT 
            a.BOOKID,CATID,OBOOKID,(SELECT ORD FROM TB_LM_RULECAT WHERE CATID = A.CATID) ORD,BOOKCODE,REVCD,REVCHA,STATECD,PROMULDT,PROMULNO,
            ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,a.UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,dept,username,userid,phone,
            replace(REVREASON,'</br>','\n') as REVREASON,replace(MAINPITH,'</br>','\n') as MAINPITH
            ,replace(jenmun,'</br>','\n') as jenmun,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK,BUYN,
            (SELECT PCATID FROM TB_LM_RULECAT WHERE CATID = A.CATID) PCATID,statehistoryid,ACTIONYN,GRADE,homeyn,buchkyn,prelawyn
        FROM TB_LM_RULEHISTORY A, TB_LM_STATEHISTORY B
        WHERE  A.BOOKID = B.BOOKID(+)  
        	and STATEHISTORYID = (
        							select max(STATEHISTORYID) from TB_LM_STATEHISTORY where Bookid=#{bookid}  
        								and stateid = decode(a.statecd,(select stateid from tb_lm_state where statecd='연혁'),(select stateid from tb_lm_state where statecd in(decode(REVCD,'폐지',revcd,'현행'))),a.statecd)
        						 )
        ]]>
	</select>
	<!-- 입안조회 -->
	<select id="selectBon_IBAN" resultType="HashMap">
		SELECT 
			A.BOOKID,CATID,OBOOKID,ORD,BOOKCODE,REVCD,REVCHA,STATECD,PROMULDT,PROMULNO,
			ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,
			REVREASON,MAINPITH,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,A.XMLID,A.BUYN,
			DECODE(A.STATECD,'IBAN',B.XMLIBAN
						,'BUSI',B.XMLBUBMU
						,'IBACC',B.XMLBUBMU
						,'IBVW',B.XMLBUBMU
						,'IBVW2',B.XMLIBAN
						,'ILSI',B.XMLIBAN
						,'IBILC',B.XMLIBAN
						,'SIYO',B.XMLDATA
						,'SIYO2',B.XMLDATA
						,'IBCAN',B.XMLIBAN
						,B.XMLDATA) XMLDATA,
			DECODE(A.STATECD,'IBAN',B.XMLOLDNEWIBAN
						,'BUSI',B.XMLOLDNEWBUBMU
						,'IBACC',B.XMLOLDNEWBUBMU
						,'IBVW',B.XMLOLDNEWBUBMU
						,'IBVW2',B.XMLOLDNEWIBAN
						,'ILSI',B.XMLOLDNEWIBAN
						,'IBILC',B.XMLOLDNEWIBAN
						,'SIYO',B.XMLOLDNEWREVISION
						,'SIYO2',B.XMLOLDNEWREVISION
						,'IBCAN',B.XMLOLDNEWIBAN
						,B.XMLOLDNEWREVISION) XMLOLDNEWREVISION,
			DECODE(A.STATECD,'IBAN',B.XMLIBAN
						,'BUSI',B.XMLBUBMU
						,'IBACC',B.XMLBUBMU
						,'IBVW',B.XMLBUBMU
						,'IBVW2',B.XMLIBAN
						,'ILSI',B.XMLIBAN
						,'IBILC',B.XMLIBAN
						,'SIYO',B.XMLDATA
						,'SIYO2',B.XMLDATA
						,'IBCAN',B.XMLIBAN
						,B.XMLDATA) XMLDATALINK
			,(SELECT PCATID FROM TB_LM_RULECAT WHERE CATID = A.CATID) PCATID
		FROM TB_LM_RULEHISTORY A, TB_LM_SIMSAXMLDATA B
		WHERE A.Bookid=#{bookid}
		  AND A.Bookid=B.Bookid 
	</select>	
	<!-- 연혁정보 -->
	<select id="getHistory" resultType="HashMap">
		SELECT CATID,BOOKID,bookcd,bookcode,BOOKSUBCD,NOFORMYN,TITLE,REVCD,STARTDT,ENDDT,PROMULDT,REVCHA,PROMULNO,(select statecd from tb_lm_state where stateid=a.statecd) as STATECD,OBOOKID,USEYN,a.statecd as stateid
		,(select max(statehistoryid) from tb_lm_statehistory 
			where bookid = a.bookid 
				and stateid=decode(a.statecd,(select stateid from tb_lm_state where statecd='연혁'),(select stateid from tb_lm_state where statecd in(decode(REVCD,'폐지',revcd,'현행'))),a.statecd)) 
				as statehistoryid 
		FROM TB_LM_RULEHISTORY a  
		WHERE OBOOKID = (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE BOOKID=#{bookid})
		ORDER BY REVCHA DESC
	</select>
	
	
	<!-- 개정이유및  주요골자 등록 -->
	<update id="setRevreason">
		UPDATE TB_LM_RULEHISTORY SET
			REVREASON = #{revreason},MAINPITH=#{mainpith}
		WHERE 
			BOOKID=#{bookid}
	</update>
	
	<!-- 전문요약 등록 -->
	<update id="setJenmun">
		UPDATE TB_LM_RULEHISTORY SET
			jenmun = #{jenmun}
		WHERE 
			BOOKID=#{bookid}
	</update>
	
	<!--   replace(replace(CONTENTS,chr(10),''),chr(13),'') -->

	<select id="getStatecd" resultType="String">
		SELECT STATECD FROM TB_LM_RULEHISTORY
		WHERE BOOKID=#{bookid}
	</select>
	
	<select id="getRevreason" resultType="String">
		SELECT REVREASON FROM TB_LM_RULEHISTORY
		WHERE BOOKID=#{bookid}
	</select>	
	
	<!-- 폐지문서생성 -->
	<insert id="setCloseing">
		<selectKey keyProperty="newbookid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULEHISTORY
		(
			BOOKID,CATID,OBOOKID,ORD,BOOKCODE,REVCD,REVCHA,STATECD,PROMULDT,PROMULNO,
			ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,
			REVREASON,MAINPITH,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,XMLID,DEPT,USERNAME,USERID,PHONE,XMLSCHTXT,BUYN,homeyn,buchkyn,prelawyn
		)
		select #{newbookid},#{catid},OBOOKID,ORD,BOOKCODE,#{statecdone},REVCHA+1,#{statecdtwo},#{promuldt},
			#{promulno},ABOLISHDT,#{promuldt},ENDDT,BOOKCD,BOOKSUBCD,TITLE,UPDT,USEYN,DELYN,#{otherlaw},LEGISLATOR,
            #{revreason},#{mainpith},OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,XMLID,DEPT,USERNAME,USERID,PHONE,XMLSCHTXT,#{buyn},#{homeyn},#{buchkyn},#{prelawyn}
        FROM TB_LM_RULEHISTORY WHERE BOOKID=#{bookid}
	</insert>
	
	<!-- state 현행을 연혁으로 -->
	<update id="setState">
		UPDATE TB_LM_RULEHISTORY SET STATECD=(select stateid from tb_lm_state where statecd=#{statecdone}),ENDDT=#{enddt}
		WHERE BOOKID=
		(SELECT BOOKID FROM TB_LM_RULEHISTORY 
        	WHERE STATECD=(select stateid from tb_lm_state where statecd=#{statecdtwo}) AND OBOOKID= (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE   BOOKID=#{bookid})
    	)
	</update>
	<update id="setState_ext">
		UPDATE TB_LM_RULEHISTORY SET STATECD=#{statecdone},ENDDT=#{enddt}
		WHERE BOOKID=
		(SELECT BOOKID FROM TB_LM_RULEHISTORY 
        	WHERE STATECD=#{statecdtwo} AND OBOOKID= #{obookid}
    	)
	</update>
	
	<!-- 심의 조정 문서를 현행으로 -->
	<update id="setDocSet">
		UPDATE TB_LM_RULEHISTORY SET STATECD=#{statecd}
		WHERE BOOKID=#{bookid}
	</update>
	<!-- 심의검토를 현행으로 업데이트 : 제정시 -->	
	<insert id="copyXmldata" parameterType="HashMap">		
		INSERT INTO TB_LM_RULEXMLDATA
		(
			XMLID,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK
		)
		SELECT #{xmlid}, XMLDATA, XMLOLDNEWREVISION,XMLDATALINK FROM TB_LM_SIMSAXMLDATA WHERE BOOKID = #{bookid} 
	</insert>
	<!-- 심의검토를 현행으로 업데이트 :개정시-->
	<insert id="copyXmldata2" parameterType="HashMap">		
		UPDATE TB_LM_RULEXMLDATA SET
		XMLDATA = (SELECT XMLDATA FROM TB_LM_SIMSAXMLDATA WHERE BOOKID = #{bookid} ),
		XMLOLDNEWREVISION = (SELECT XMLOLDNEWREVISION FROM TB_LM_SIMSAXMLDATA WHERE BOOKID = #{bookid} ),
		XMLDATALINK = (SELECT XMLDATALINK FROM TB_LM_SIMSAXMLDATA WHERE BOOKID = #{bookid} )
		
		WHERE xmlid = #{xmlid}
	</insert>

	<!-- TB_LM_RULEFILE Insert -->
	<insert id="lawfileInsert" parameterType="HashMap">		
		INSERT INTO TB_LM_RULEFILE
		(
			FILEID,PCFILENAME,SERVERFILE,FILETYPE,FILECD,UPDT,BOOKID,CONTID,ORD,STATEHISTORYID,BONTXT,PDFFILE
		)
		VALUES
		(
			#{FILEID},#{PCFILENAME},#{SERVERFILE},#{FILETYPE},#{FILECD},DATE_FORMAT(now(), '%Y-%m-%d'),#{BOOKID},#{CONTID},#{ORD},#{STATEHISTORYID},#{bonhtml:CLOB},#{PDFFILE}
		)
	</insert>

	<!-- TB_LM_RULEFILE Select -->
	<select id="lawfileSelect" resultType="HashMap">		
		SELECT FILEID,PCFILENAME,SERVERFILE,FILETYPE, 
		DECODE(FILECD,'AN','개정안','GAE','개정문','JUN','전문','제정','전문','SIN','신구조문','REA','개정이유','VIEW','의견서',FILECD) FILECD
		,UPDT,BOOKID,NVL(CONTID,'0'),ORD FROM TB_LM_RULEFILE
		WHERE BOOKID = #{BOOKID} and STATEHISTORYID=(select max(STATEHISTORYID) from tb_lm_statehistory where bookid=#{BOOKID}) 
		<!--and stateid = (select statecd from tb_lm_rulehistory where bookid=#{bookid}))-->
		ORDER BY ORD ASC
	</select>

	<!-- 비정형문서 파일정보 -->
	<select id="getFileName" resultType="HashMap">
		SELECT FILEID,
			BOOKID,
			STATEHISTORYID,
			CONTID,
			PCFILENAME,
			SERVERFILE,
			FILETYPE,
			FILECD,
			ORD
		FROM TB_LM_RULEFILE
		WHERE 
			<if test="bookid != null and bookid != ''">
				BOOKID=#{bookid} AND FILECD=#{revcd}
			</if>
			<if test="statehistoryid != null and statehistoryid != ''">
				and statehistoryid=#{statehistoryid}
			</if>
			<if test="statehistoryid == ''">
				<if test="bookid != null and bookid != ''">
				and statehistoryid=(select max(statehistoryid) from tb_lm_statehistory where bookid=#{bookid})
				</if>
			</if>
			<if test="contid != null and contid != ''">
				Contid=#{contid}
			</if>
			<if test="fileid != null and fileid != ''">
				serverfile=#{fileid}
			</if>
	</select>
	
	<!-- 비정형문서 파일정보 -->
	<select id="selectContFile" resultType="HashMap">
		SELECT * FROM TB_LM_RULEFILE
		WHERE 
			<if test="bookid != null and bookid != ''">
				BOOKID=#{bookid} AND FILECD=#{revcd}
			</if>
			<if test="statehistoryid != null and statehistoryid != ''">
				and statehistoryid=#{statehistoryid}
			</if>
			<if test="contid != null and contid != ''">
				and Contid=#{contid}
			</if>
	</select>
	
	<select id="getFileName2" resultType="HashMap">
		SELECT * FROM TB_LM_RULEFILE
		WHERE 
			<if test="fileid != ''"> 
				serverfile=#{fileid}
			</if>
	</select>
	
	<!-- 연혁포함 링크생성과 전체 링크생성의 리스트를 얻어오기 위해 -->
	<select id="linkDocList" resultType="HashMap">
		SELECT A.BOOKID,A.REVCHA,A.TITLE,B.XMLDATA,b.XMLOLDNEWREVISION,b.STATEHISTORYID FROM TB_LM_RULEHISTORY A,TB_LM_statehistory B 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		USEYN='Y'
			<if test="BOOKID != null and BOOKID != ''">
				AND OBOOKID = (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE BOOKID=#{BOOKID}) 
			</if>
			and STATEHISTORYID = (select max(STATEHISTORYID) from TB_LM_STATEHISTORY where Bookid=a.bookid and stateid = decode(a.statecd,(select stateid from tb_lm_state where statecd='연혁'),(select stateid from tb_lm_state where statecd in(decode(REVCD,'폐지',revcd,'현행'))),a.statecd))
			and a.noformyn='N'  
		</trim>
		ORDER BY obookid,REVCHA DESC
	</select>
	
	<!-- 개정취소및 연혁을 현행으로하기 위한 작업 -->
	<select id="deleteCansel" resultType="HashMap">
	<!-- SELECT BOOKID,REVCHA,CATID,OBOOKID,A.XMLID,REVCD,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK FROM TB_LM_RULEHISTORY A,TB_LM_RULEXMLDATA B 
	WHERE OBOOKID=#{obookid} AND REVCHA IN (#{revcha},#{revcha}-1) AND A.XMLID=B.XMLID(+) ORDER BY REVCHA DESC
	 -->
	SELECT A.BOOKID,REVCHA,CATID,OBOOKID,A.STATECD,REVCD FROM TB_LM_RULEHISTORY A
    WHERE OBOOKID=#{OBOOKID} AND REVCHA IN (#{REVCHA},#{REVCHA}-1)  ORDER BY REVCHA DESC
	</select>
	
	<delete id="delLawCat">
		DELETE FROM TB_LM_RULECAT WHERE 
		<if test="gbn == 'ALL'">
		CATID IN (SELECT CATID FROM TB_LM_RULEHISTORY WHERE OBOOKID=#{OBOOKID})
		</if>
		<if test="gbn == 'ONE'">
		CATID = #{CATID}
		</if>
		
	</delete>
	<delete id="delLawBook">
		DELETE FROM TB_LM_RULEHISTORY WHERE BOOKID = #{BOOKID}
	</delete>
	<delete id="delSimsaBook">
		DELETE FROM TB_LM_SIMSAXMLDATA WHERE BOOKID = #{bookid}
	</delete>	
	<update id="updateLawBook">
		UPDATE TB_LM_RULEHISTORY SET STATECD=(select stateid from tb_lm_state where statecd='현행'),ENDDT='9998-12-31' WHERE BOOKID=#{BOOKID} 
	</update>
	
	<!-- 별표등 첨부파일 삭제 -->
	<delete id="delLawFile">
		DELETE FROM TB_LM_RULEFILE WHERE FILEID = #{fileid}
	</delete>
	
	<!-- 문서 삭제 -->
	<delete id="delAllDoclawBook">
		DELETE FROM TB_LM_RULEHISTORY WHERE 
		<if test="gbn == 'ALL'">
		OBOOKID = #{OBOOKID}
		</if>
		<if test="gbn == 'ONE'">
		BOOKID = #{BOOKID}
		</if>
	</delete>
	<delete id="delAllDoclawFile">
		DELETE FROM TB_LM_RULEFILE WHERE
		<if test="gbn == 'ALL'">
		BOOKID IN (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE OBOOKID=#{OBOOKID})
		</if>
		<if test="gbn == 'ONE'">
		BOOKID = #{BOOKID}
		</if>
	</delete>
	
	<delete id="delAllDoclawTB_LM_RULELINKINFO">
		DELETE FROM TB_LM_RULELINKINFO WHERE
		<if test="gbn == 'ALL'">
		BOOKID IN (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE OBOOKID=#{OBOOKID})
		</if>
		<if test="gbn == 'ONE'">
		BOOKID = #{BOOKID}
		</if>
	</delete>
	
	<delete id="delAllDoclawTB_LM_RULEOPINION">
		DELETE FROM TB_LM_RULEOPINION WHERE
		<if test="gbn == 'ALL'">
		BOOKID IN (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE OBOOKID=#{OBOOKID})
		</if>
		<if test="gbn == 'ONE'">
		BOOKID = #{BOOKID}
		</if>
	</delete>
	
	<delete id="delAllDoclawTB_LM_RULESEARCHFILE">
		DELETE FROM TB_LM_RULESEARCHFILE WHERE
		<if test="gbn == 'ALL'">
		BOOKID IN (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE OBOOKID=#{OBOOKID})
		</if>
		<if test="gbn == 'ONE'">
		BOOKID = #{BOOKID}
		</if>
	</delete>
	
	<delete id="delAllDoclawTB_LM_RULEMEMO">
		DELETE FROM TB_LM_RULEMEMO WHERE
		<if test="gbn == 'ALL'">
		BOOKID IN (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE OBOOKID=#{OBOOKID})
		</if>
		<if test="gbn == 'ONE'">
		BOOKID = #{BOOKID}
		</if>
	</delete>
		
	<delete id="delAllDoclawTB_LM_RULEDEPT">
		DELETE FROM TB_LM_RULEDEPT WHERE
		OBOOKID = #{OBOOKID}
	</delete>
	
	<delete id="delAllDoclawTB_LM_FAV">
		DELETE FROM TB_LM_FAV WHERE
		OBOOKID = #{OBOOKID}
	</delete>
	<!-- 제목검색 -->
	<select id="getSchResult" resultType="HashMap">
		SELECT 
			A.BOOKID,A.CATID,A.OBOOKID,A.ORD,A.BOOKCODE,A.REVCD,A.REVCHA,A.STATECD,A.PROMULDT,A.PROMULNO,
			A.ABOLISHDT,A.STARTDT,A.ENDDT,A.BOOKCD,A.BOOKSUBCD,A.TITLE,A.UPDT,A.USEYN,A.DELYN,A.OTHERLAW,A.LEGISLATOR,
			A.REVREASON,A.MAINPITH,A.OPENYN,A.WORKSTATECD,A.NOFORMYN,A.DEPTNAME,A.LINKURL,
			(select max(statehistoryid) from tb_lm_statehistory where bookid = a.bookid) as statehistoryid,
			(
				SELECT LPAD('',(LEVEL-1)*2,'')||SYS_CONNECT_BY_PATH(TITLE,'>')AS PATH   
		        FROM TB_LM_RULECAT WHERE CATID = A.CATID START WITH 
		        CATID = (
		            SELECT MIN(CATID) CATID  FROM TB_LM_RULECAT S START WITH 
		            S.CATID = A.CATID
		            CONNECT BY  S.CATID= PRIOR S.PCATID 
		        )
		        CONNECT BY PRIOR CATID = PCATID
			)AS PATH,
			(
				SELECT PCATID FROM TB_LM_RULECAT WHERE CATID=A.CATID
			) AS PCATID,
			(
				SELECT STATECD FROM TB_LM_RULEHISTORY WHERE OBOOKID=A.OBOOKID AND  
					REVCHA=(
								SELECT MAX(REVCHA) FROM TB_LM_RULEHISTORY WHERE OBOOKID=A.OBOOKID
							)
			) AS FSTATECD
		FROM TB_LM_RULEHISTORY A
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="schtxt != null and schtxt != ''">
			and A.TITLE LIKE '%'||#{schtxt}||'%' 
			</if>
			<if test="statecd != null and statecd != ''">
			and A.STATECD = (select stateid from tb_lm_state where statecd = #{statecd})
			</if>
		</trim>
	</select>
	
	<!--  비정형 문서 정보수정시 파일 정보 수정을 위해 -->
	<select id="getFileid" resultType="String">
		SELECT FILEID FROM TB_LM_RULEFILE WHERE BOOKID=#{BOOKID} AND FILECD=#{FILECD} and statehistoryid =#{STATEHISTORYID}
	</select>
	<delete id="delFile">
		DELETE FROM TB_LM_RULEFILE WHERE FILEID = #{FILEID}
	</delete>
	
	<!-- 같은폴더안의 다음 ord 생성 -->
	<select id="getMaxOrd" resultType="String">		
		SELECT NVL(MAX(ORD)+1,0) FROM TB_LM_RULECAT WHERE PCATID=#{pcatid}
	</select>
	
	
	<!-- 법령검색 -->
	<select id="getLawSchList" resultType="HashMap">
		SELECT * FROM TB_LM_LAWKOREA WHERE LAWNAME LIKE '%'||#{title}||'%' 
	</select>
	<!-- 전부개정을 고려하기 위해 (전부개정일경우 현재차수의 문서 를 PRE,NOW 둘다 셋팅)-->
	<select id="getObookidAllList" resultType="HashMap">
		SELECT OBOOKID,REVCHA FROM TB_LM_RULEHISTORY WHERE REVCD='전부개정' order by obookid asc
	</select>
	
	<!-- bookId에 해당하는 첨부문서 리스트를 가져온다. -->
	<select id="getAttList" resultType="HashMap">
		SELECT FILEID,PCFILENAME,SERVERFILE,FILETYPE,FILECD,UPDT,NVL(CONTID,'0') CONTID,ORD,BOOKID ,
		(select title from tb_lm_rulehistory where bookid=#{bookid}) as title
		FROM TB_LM_RULEFILE
		WHERE bookid = #{bookid} and statehistoryid=#{statehistoryid}
	</select>
	
	<!-- fileId에 해당하는 file정보 -->
	<select id="getFileInfo" parameterType="String" resultType="HashMap">
		SELECT *
		FROM TB_LM_RULEFILE
		WHERE fileid = #{fileid}
	</select>
	
	<select id="getJotitleList" resultType="HashMap">
		SELECT XMLDATA FROM TB_LM_RULEHISTORY WHERE STATECD='현행' and noformyn='N'
	</select>
	
	<!-- TB_LM_RULEHISTORY history -->
	<select id="getBookHistoryXML_new" resultType="HashMap">
		SELECT REVCD,PROMULDT,BOOKID,REVCHA,STARTDT,(select statecd from tb_lm_state where stateid= a.statecd) as STATECD,ENDDT,TITLE,DEPTNAME,NOFORMYN,BOOKCD,BOOKSUBCD,PROMULNO,OBOOKID,BOOKCODE,OTHERLAW,USEYN
		FROM TB_LM_RULEHISTORY a
		WHERE OBOOKID = (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE BOOKID=#{bookid}) ORDER BY REVCHA DESC 		
	</select>
	
	<!-- TB_LM_RULEHISTORY Insert 제정시-->
	<insert id="lawbookInsert_new">
		<selectKey keyProperty="bookid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULEHISTORY
		(
			BOOKID,CATID,OBOOKID,ORD,BOOKCODE,REVCD,REVCHA,STATECD,PROMULDT,PROMULNO,
			ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,
			REVREASON,MAINPITH,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,DEPT,USERNAME,USERID,PHONE,BUYN,ACTIONYN,GRADE,homeyn,buchkyn,prelawyn,allrevyn
		)
		VALUES
		(
			#{bookid},#{catid},
			<choose>
			    <when test="obookid == ''">
			        #{bookid},
			    </when>
			    <otherwise>
			        #{obookid},
			    </otherwise>
			</choose>
			#{ord},#{bookcode},#{revcd},#{revcha},#{statecd},#{promuldt},#{promulno},
			#{abolishdt},#{startdt},#{enddt},#{bookcd},#{booksubcd},#{title},#{updt},#{useyn},#{delyn},#{otherlaw},#{legislator},
			'',#{mainpith},#{openyn},#{workstatecd},#{noformyn},#{deptname},#{linkurl},#{dept},#{username},#{userid},#{phone},#{buyn},#{actionyn},#{grade},#{homeyn},#{buchkyn},#{prelawyn},#{allrevyn}
		)
	</insert>
	<insert id="getLawXMLDataInsert">
		INSERT INTO TB_LM_RULEXMLDATA
		(
			XMLID, XMLDATA, XMLDATALINK 
		)
		VALUES
		(
			#{xmlid}, #{xmldata:CLOB}, #{xmldatalink:CLOB}
		)
	</insert>	
	<insert id="getTB_LM_STATEHISTORYInsert"><!-- 제정,입안 -->
		<selectKey keyProperty="STATEHISTORYID" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_STATEHISTORY
		(
			STATEHISTORYID,BOOKID,STATEID,REMARK,UPDT,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK,CHARGEUSERID,APPROVERID,APPROVEYN,writerid
		)
		VALUES
		(
			#{STATEHISTORYID},#{BOOKID},#{STATECD},#{REMARK},sysdate, #{XMLDATA:CLOB},#{XMLOLDNEWREVISION:CLOB}, #{XMLDATALINK:CLOB}	<!-- , #{xmldatalink:CLOB},XMLType(#{xmldatalink:CLOB}) -->
			,#{userid},#{approverid},'N',#{writerid}
		)
	</insert>	
	
	<insert id="getTB_LM_STATEHISTORYInsert2"><!-- 개정 -->
		INSERT INTO TB_LM_STATEHISTORY
		(
			STATEHISTORYID,BOOKID,STATEID,REMARK,UPDT,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK
		)
		VALUES
		(
			#{statehistoryid},#{bookid},#{statecd},#{remark},sysdate, #{xmldata:CLOB},#{xmloldnewrevision:CLOB}, #{xmldatalink:CLOB}	<!-- , #{xmldatalink:CLOB},XMLType(#{xmldatalink:CLOB}) -->
		)
	</insert>
	
	<!-- #{xmlid},#{xmldata:CLOB},#{xmldatalink:CLOB},XMLType(#{xmldatalink:CLOB}) -->
	<!-- XMLDOCUMENT = XMLType(#xmldatalink#) -->
	<select id="getSelectBons"  resultType="HashMap">
		select A.XMLDATA,A.XMLDATALINK,A.XMLOLDNEWREVISION,C.TITLE,C.REVCHA,C.PROMULDT,C.REVCD,C.OTHERLAW,C.BOOKID,C.STATECD,A.STATEHISTORYID from tb_lm_statehistory a,tb_lm_rulehistory c
		where a.bookid=c.bookid and c.bookid=#{bookid}
		and a.statehistoryid = (select max(statehistoryid) from tb_lm_statehistory where bookid = c.bookid )   
	</select>
	
	
	
	<update id="getLawXMLDataUpdate"><!-- 현행 -->
		UPDATE TB_LM_STATEHISTORY SET
			XMLDATA = #{XMLDATA:CLOB},
			XMLDATALINK = #{XMLDATALINK:CLOB},
			XMLOLDNEWREVISION = #{XMLOLDNEWREVISION:CLOB}
			
		WHERE statehistoryid = #{STATEHISTORYID}	
		
	</update>
	
	<update id="getAllLawXMLDataUpdate"><!-- 연혁데이터 수정 -->
	UPDATE TB_LM_STATEHISTORY SET
	XMLDATA = #{xmldata:CLOB},
	XMLDATALINK = #{xmldatalink:CLOB},
	XMLOLDNEWREVISION = #{xmloldnewrevision:CLOB}

	WHERE statehistoryid in(
		<![CDATA[
								SELECT STATEHISTORYID
								  FROM (SELECT a.STATEHISTORYID
								          FROM (SELECT *
								                  FROM TB_LM_STATEHISTORY
								                 WHERE STATEID IN (5000, 6000)) a,
								               TB_LM_RULEHISTORY b
								         WHERE     a.BOOKID = b.BOOKID
								               AND b.NOFORMYN <> 'Y'
								               AND b.obookid = (select obookid from tb_lm_rulehistory where bookid in (select bookid from tb_lm_statehistory where statehistoryid=#{statehistoryid})))
								 WHERE STATEHISTORYID BETWEEN (SELECT MAX (a.STATEHISTORYID)
								                                 FROM TB_LM_STATEHISTORY a,
								                                      TB_LM_RULEHISTORY b
								                                WHERE     a.STATEHISTORYID < #{statehistoryid}
								                                      AND a.bookid = b.bookid
								                                      AND b.obookid = (select obookid from tb_lm_rulehistory where bookid in (select bookid from tb_lm_statehistory where statehistoryid=#{statehistoryid}))
								                                      AND B.ALLREVYN = 'Y')
								                          AND #{statehistoryid}
		]]> 							
	)
		
	</update>
	<!-- 
			XMLDATA = #{xmldata:CLOB},
			XMLDATALINK = #{xmldatalink:CLOB},
			XMLOLDNEWREVISION = #{xmloldnewrevision:CLOB},
			XMLDOCUMENT = XMLType(#{xmldatalink:CLOB})
	 -->
	<!-- law_book Insert 개정시-->
	<insert id="lawbookInsertG">
		INSERT INTO TB_LM_RULEHISTORY
		(
			BOOKID,CATID,OBOOKID,ORD,BOOKCODE,REVCD,REVCHA,STATECD,PROMULDT,PROMULNO,
			ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,
			REVREASON,MAINPITH,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,DEPT,USERNAME,USERID,PHONE,BUYN,ACTIONYN,GRADE,homeyn,buchkyn,prelawyn
		)
		VALUES
		(
			#{bookid},#{catid},#{obookid},
			#{ord},#{bookcode},#{revcd},#{revcha},#{statecd},#{promuldt},#{promulno},
			#{abolishdt},#{startdt},#{enddt},#{bookcd},#{booksubcd},#{title},#{updt},#{useyn},#{delyn},#{otherlaw},#{legislator},
			#{revreason},#{mainpith},#{openyn},#{workstatecd},#{noformyn},#{deptname},#{linkurl},#{dept},#{username},#{userid},#{phone},#{buyn}
			,#{actionyn},#{grade},#{homeyn},#{buchkyn},#{prelawyn}
		)
	</insert>
	
	<!-- 문서 삭제 -->
	<delete id="delXmlData">
		DELETE FROM TB_LM_STATEHISTORY WHERE 
		<if test="gbn == 'ALL'">
		BOOKID IN (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE OBOOKID=#{OBOOKID})
		</if>
		<if test="gbn == 'ONE'">
		BOOKID = #{BOOKID}
		</if>
	</delete>
	
	<!-- 참조조문 체크 -->
	<!--select id="chkJo" resultType="String">
		select count(extract(xmldocument,'//jo/cont/bylaw[@lawid="${bookid}" and  @jono = "${jono}"]')) as total from TB_LM_RULEXMLDATA
	</select-->
	
	<!-- Obookid 가져오기 -->
	<select id="getObookid" resultType="String">
		select OBOOKID from TB_LM_RULEHISTORY
		where bookid=#{bookid}
	</select>
	<select id="SelectRuleXmldata" resultType="integer">
		SELECT count(xmlid)
		FROM TB_LM_RULEXMLDATA  
		WHERE XMLID = #{xmlid}
	</select>
	<!-- 참조조문 리스트 -->
	<!--select id="chkJoList" resultType="HashMap">
		SELECT BOOKID,PROMULDT, TITLE
		FROM TB_LM_RULEXMLDATA A,TB_LM_RULEHISTORY B 
		WHERE A.XMLID = B.XMLID AND STATECD='현행' AND EXISTSNODE(xmldocument,'//jo/cont/bylaw[@lawid="${bookid}" and  @jono = "${jono}"]')>0
	</select-->
	
	<select id="getFilelist" resultType="HashMap">
		select * from TB_LM_RULEFILE where bookid = #{bookid} and statehistoryid = #{statehistoryid}
	</select>
	
	<select id="getRevchaS" resultType="String">
		select revcha from TB_LM_RULEHISTORY where bookid = #{bookid}
	</select>	
	
	<select id="getFileInfoDLL" resultType="HashMap">
		select 
			FILEID, 
			PCFILENAME, 
			SERVERFILE, 
			FILETYPE, 
			FILECD, 
			UPDT, 
			CONTID, 
			ORD, 
			BOOKID, 
			BONTXT 
		from (
			select 
				rownum  as rnum,
				FILEID, 
				PCFILENAME, 
				SERVERFILE, 
				FILETYPE, 
				FILECD, 
				UPDT, 
				CONTID, 
				ORD, 
				BOOKID, 
				BONTXT  
			from (select * from tb_lm_rulefile where statehistoryid=#{statehistoryid} and filecd=#{filecd} order by fileid desc ) a 
			)
		where rnum = 1
	</select>
	
	<select id="getFileListPrint" resultType="HashMap">
		select * from tb_lm_rulefile where bookid=#{bookid} and filecd like 'BYUL%'
	</select>
	
	<select id="getHistoryObookid" resultType="HashMap">
		SELECT DISTINCT(B.XMLID) as xmlid FROM TB_LM_RULEXMLDATA A, TB_LM_RULEHISTORY B WHERE A.XMLID=B.XMLID AND B.OBOOKID=#{obookid}
	</select>
	
	<select id="getXmldata" resultType="HashMap">
		SELECT XMLDATA ,XMLDATALINK,REVCHA
		FROM TB_LM_RULEXMLDATA  A, TB_LM_RULEHISTORY B 
		WHERE A.XMLID = #{xmlid} AND A.XMLID=B.XMLID
	</select>
	
	<select id="getXmldata2" resultType="HashMap">
		SELECT XMLDATA ,XMLDATALINK
		FROM TB_LM_RULEXMLDATA
		WHERE XMLID = #{xmlid}
	</select>
	
	<update id="getLawXMLDataUpdate2"><!-- 현행 -->
		UPDATE TB_LM_RULEXMLDATA SET
			XMLDATA = #{xmldata:CLOB},
			XMLDATALINK = #{xmldatalink:CLOB}
		WHERE XMLID = #{xmlid}	
	</update>
	
	<select id="getFileInfoCom" resultType="HashMap">
		select * from tb_lm_rulefile where fileid=#{fileid}
	</select>
	
	<select id="getFileByulList" resultType="HashMap">
		select * from tb_lm_rulefile where bookid=#{bookid} and filecd in('BYUL','BYULJI','별표') and simsacd='SIME'
	</select>
	
	
	<select id="getCdlist" resultType="HashMap">
		SELECT 
        (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE STATECD=#{statecd} AND OBOOKID = (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE CATID = T.CATID)) AS BOOKID,
        (SELECT noformyn FROM TB_LM_RULEHISTORY WHERE STATECD=#{statecd} AND OBOOKID = (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE CATID = T.CATID)) AS noformyn
        FROM TB_LM_RULECAT T 
        WHERE (CATCD = 'folder' OR CATID IN (SELECT CATID FROM TB_LM_RULEHISTORY WHERE STATECD=#{statecd}))
        AND T.DELYN='N' AND T.USEYN='Y' AND pcatid = #{catid}
        START WITH T.PCATID=0 
        CONNECT BY PRIOR T.CATID=T.PCATID  
        ORDER SIBLINGS BY T.ORD
	</select>
	<select id="getCdlist2" resultType="HashMap">
		SELECT 
        (SELECT BOOKID FROM TB_LM_RULEHISTORY WHERE STATECD=#{statecd} AND OBOOKID = (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE CATID = T.CATID)) AS BOOKID,
        (SELECT noformyn FROM TB_LM_RULEHISTORY WHERE STATECD=#{statecd} AND OBOOKID = (SELECT OBOOKID FROM TB_LM_RULEHISTORY WHERE CATID = T.CATID)) AS noformyn
        FROM TB_LM_RULECAT T 
        WHERE (CATCD = 'folder' OR CATID IN (SELECT CATID FROM TB_LM_RULEHISTORY WHERE STATECD=#{statecd}))
        AND T.DELYN='N' AND T.USEYN='Y'
        START WITH T.PCATID=0 
        CONNECT BY PRIOR T.CATID=T.PCATID  
        ORDER SIBLINGS BY T.ORD
	</select>
	
	<select id="ServerFileBeing" resultType="String">
		select serverfile from TB_LM_RULEFILE where fileid = #{fileid}
	</select>
	
	<select id="promuldtInsertInfo" resultType="HashMap">
		select STATEHISTORYID,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK from TB_LM_STATEHISTORY 
		where bookid=#{bookid}
	</select>
	
	<update id="promuldtInsert">
		UPDATE TB_LM_RULEHISTORY SET 
			PROMULDT=#{promuldt},
			PROMULNO=#{promulno},
			STARTDT=#{startdt},
			ENDDT=#{enddt},
			BOOKCODE=#{bookcode}
		WHERE BOOKID=#{bookid}
	</update>

	<update id="promuldtInsert2">
		UPDATE TB_LM_STATEHISTORY SET
			XMLDATA = #{XMLDATA:CLOB},
			XMLOLDNEWREVISION = #{XMLOLDNEWREVISION:CLOB},
			XMLDATALINK = #{XMLDATALINK:CLOB}
		WHERE STATEHISTORYID = #{STATEHISTORYID}	
	</update>
	
	<update id="setFileBon">
		UPDATE TB_LM_RULEFILE SET
			BONTXT = #bontxt#
		WHERE fileid = #{fileid}	
	</update>
	
	<select id="getRevcd" resultType="String">
		select revcd from tb_lm_rulehistory where bookid = 
		(select min(bookid) from tb_lm_rulehistory where obookid = (select obookid from tb_lm_rulehistory where bookid = #{bookid}) and bookid >#{bookid})
	</select>
	
	<update id="setUpdateDocinfo">
		UPDATE TB_LM_STATEHISTORY SET
			XMLDATA = #{XMLDATA:CLOB},
			XMLDATALINK = #{XMLDATA:CLOB}
		WHERE BOOKID = #{BOOKID} and Statehistoryid = #{STATEHISTORYID}
	</update>
	
	<update id="setPdfUpdate">
		update tb_lm_rulehistory set
			pdf = #filename#
		where bookid = #{bookid}
	</update>
	
	<select id="RuleHistoryList" resultType="HashMap">
		select * from tb_lm_rulehistory where noformyn='N'
			<if test="bookid != null and bookid != ''">
			and bookid = #{bookid}
			</if>
		order by obookid,bookid
	</select>
	<select id="getXmldataB" resultType="String">
		select xmldata from tb_lm_rulexmldata where xmlid=#{xmlid}
	</select>
	<update id="setXmlSchBon">
		update tb_lm_rulehistory set xmlschtxt = #{s:CLOB} where bookid=#{BOOKID}
	</update>
	
	<select id="fileChk" resultType="int">
		select count(fileid) from tb_lm_rulefile where bookid = #{bookid} and filecd='BU'
	</select>
	
	<!-- 규정부서관리 -->
	<!-- 
 	"KIGAM_LAW"."TB_LM_RULEDEPT" 
   	규정부서아이디	"RULEDEPTID" NUMBER NOT NULL ENABLE, 
	규정아이디	"OBOOKID" NUMBER NOT NULL ENABLE, 
	부서코드		"DEPTCD" VARCHAR2(20 BYTE)				
	 --> 
	 <insert id="insertRuleDept">
	 	INSERT INTO TB_LM_RULEDEPT
	 		(
				OBOOKID, 
				DEPTCD 
			)	
		VALUES
			(
				#{OBOOKID},
				#{DEPTCD}
			)
	 </insert>
	 
	 <insert id="insertRuleDept2">
	 	<selectKey keyProperty="opinionid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULEOPINION (
		   OPINIONID, STATEHISTORYID, BOOKID, 
		   CONTENT, DEPTCD, USERID, 
		   CHECKYN,approverid,approveyn)
		VALUES ( #opinionid#,
		 #{statehistoryid},
		 #{bookid},
		 #content#,
		 #deptCd#,
		 #{userid},
		 'N', 
		 #{approverid},
		 'N' )
		 
	 </insert>
	  
	 <select id="selectRuleDeptList" parameterType="HashMap" resultType="HashMap">
       		with RULEDEPT AS (
			 	SELECT 
			 			OBOOKID,
						DEPTCD
			 	FROM TB_LM_RULEDEPT a
			 	WHERE
			 		OBOOKID = #{OBOOKID}
			)
			SELECT 
                a.DEPT_NO as deptcd,
                a.DEPT_NM as deptnm,
                a.SORT_SEQ as lvl,
                b.obookid
            FROM TB_COM_ORGCHT a, RULEDEPT b
            WHERE a.DEPT_NO = b.deptcd(+)
	 		order by a.DEPT_NO ,a.SORT_SEQ asc
	 </select> 
	 
	<select id="selectRuleDeptList2" parameterType="HashMap" resultType="HashMap">
       		with RULEDEPT AS (
			 	SELECT 
			 			statehistoryid,
						DEPTCD
			 	FROM TB_LM_RULEOPINION a
			 	WHERE
			 		statehistoryid = #{statehistoryid}
			 		and bookid = #{bookid}
			)
			SELECT 
                a.DEPT_NO as deptcd,
                a.DEPT_NM as deptnm,
                a.SORT_SEQ as lvl,
                b.statehistoryid
            FROM TB_COM_ORGCHT a, RULEDEPT b
            WHERE a.DEPT_NO = b.deptcd(+)
	 		order by a.DEPT_NO ,a.SORT_SEQ asc
	 </select> 
	 
	 <select id="selectRuleDeptList3" parameterType="HashMap" resultType="HashMap">
			SELECT 
                a.DEPT_NO as deptcd,
                a.DEPT_NM as deptnm,
                a.SORT_SEQ as lvl
            FROM TB_COM_ORGCHT a
            where 1=1
            <if test="Deptcd != null and Deptcd != ''">
				and DEPT_NO = #Deptcd#
			</if>
	 		order by a.DEPT_NO ,a.SORT_SEQ asc
	 </select>
	 
	 <delete id="deleteRuleDept" parameterType="HashMap">
	 	DELETE FROM TB_LM_RULEDEPT WHERE OBOOKID = #{OBOOKID}
	 </delete>
	 
	 <delete id="deleteRuleDept2" parameterType="HashMap">
	 	DELETE FROM TB_LM_RULEOPINION WHERE statehistoryid = #{statehistoryid} and bookid = #{bookid} and checkyn='N'
	 </delete>
	 
	 <select id="chkdept" resultType="int">
	 	select count(*) from TB_LM_RULEOPINION where statehistoryid = #{statehistoryid}  and checkyn='N'
	 </select>
	 
	 <select id="chkdeptoption" resultType="int">
	 	select count(*) from TB_LM_RULEOPINION where statehistoryid = (select max(statehistoryid) from tb_lm_statehistory where bookid=#{bookid} and stateid='2000')  and approveyn='N'
	 </select>
	<!-- 규정부서관리  끝-->
	
	<select id="dllReq" >
		SELECT
                rownum  as rnum, 
                T.CATID,
                T.PCATID,
                T.TITLE,
                T.CATCD,
                S.BOOKID,
                S.NOFORMYN,
                S.DEPTNAME,
                LEVEL 
            FROM TB_LM_RULECAT T , tb_lm_rulehistory s 
            WHERE (CATCD = 'folder' OR t.CATID IN (SELECT CATID FROM TB_LM_RULEHISTORY WHERE STATECD='현행'))
            AND t.catid = s.catid(+)
            AND T.DELYN='N' AND T.USEYN='Y' 
            START WITH 
            
            T.PCATID=0            
           
            CONNECT BY PRIOR T.CATID=T.PCATID  
            ORDER SIBLINGS BY T.ORD
	</select>
	
	<select id="getSelectXml" resultType="HashMap">
		select STATEHISTORYID, BOOKID, STATEID, XMLDATA, XMLOLDNEWREVISION, XMLDATALINK from TB_LM_STATEHISTORY	where statehistoryid=#{statehistoryid}
	</select>
	
	<select id="getStateCd" resultType="String">
		select STATECD from tb_lm_state where stateid=#{stateid}
	</select>
	
	<select id="dllReqSelect" resultType="mtenMap">
		${query}
	</select>
	
	<select id="getHistoryItem" resultType="HashMap">
		select 
			BOOKID,	OBOOKID,CATID,BOOKCODE,BOOKCD,BOOKSUBCD,TITLE,REVCD,REVCHA,STATECD,	PROMULDT,PROMULNO,ORD,ABOLISHDT,STARTDT,ENDDT,UPDT,USEYN,
			DELYN,OTHERLAW,	LEGISLATOR,	OPENYN,	WORKSTATECD,NOFORMYN,	DEPTNAME,LINKURL,MAINPITH,REVREASON,SIMSASTATECD,DEPT,USERNAME,	USERID,
			PHONE,PDF,	XMLSCHTXT,	BUYN,HIT,RQSTNO,HOMEYN,ACTIONYN,GRADE,AUTOPROMULYN,JENMUN,ALLREVYN,PRELAWYN,BUCHKYN,WRITERID
		from tb_lm_rulehistory where obookid = (select obookid from tb_lm_rulehistory where bookid=#{bookid}) order by revcha desc
	</select>
	
	<insert id="setMemo">
		<selectKey keyProperty="memoid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULEMEMO (
		   MEMOID, BOOKID, CONTID, 
		   USERID, CONT, GBN,DEPTCD) 
		VALUES ( #{memoid},
		 #{bookid},
		 #{contid},
		 #{writerid},
		 #{cont},
		 #{gbn},
		 #{sdeptid} )
	</insert>
	
	<update id="setMemoU">
		update TB_LM_RULEMEMO set
			cont=#{cont}
		where memoid=#{memoid}
	</update>
	
	
	<select id="getMemo" resultType="HashMap">
	<![CDATA[
		select MEMOID,BOOKID,USERID,CONTID,GBN,replace(cont,'</br>','\n') as CONT from TB_LM_RULEMEMO a
	]]> 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="bookid != null and bookid != ''">
				bookid=#{bookid}
			</if>
			<if test="userid != null and userid != ''">
				and (select DEPT_NO from TB_COM_HRIS where user_id=a.userid)=(select DEPT_NO from TB_COM_HRIS where user_id=#{userid})
			</if>
			<if test="contid != null and contid != ''">
				and contid=#{contid}
			</if>
			<if test="memoid != null and memoid != ''">
				and memoid=#{memoid}
			</if>
			<if test="gbn != null and gbn != ''">
				and gbn=#{gbn}
			</if>
		</trim>
	</select>
	
	<select id="getMemoList" resultType="HashMap">
		select CONTID from TB_LM_RULEMEMO a
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="bookid != null and bookid != ''">
				bookid=#{bookid}
			</if>
			<if test="userid != null and userid != ''">
				and (select DEPT_NO from TB_COM_HRIS where user_id=a.userid)=(select DEPT_NO from TB_COM_HRIS where user_id=#{userid})
			</if>
			<if test="gbn != null and gbn != ''">
				and gbn=#{gbn}
			</if>
		</trim>
	</select>
	
		<select id="setChangeList" resultType="HashMap">
			SELECT
		        B.STATEHISTORYID,B.BOOKID,A.REVCHA,B.XMLDATA,B.XMLOLDNEWREVISION,TITLE        
		    FROM
		            tb_lm_rulehistory a,tb_lm_statehistory b 
		    where
		        a.bookid = b.bookid
		        and STATECD =( select stateid from tb_lm_state where statecd= #{histgbn} )      
		        and (
		            DBMS_LOB.INSTR(xmlschtxt, #{schtxt},1,1) > 0  
		        )  
		        and noformyn='N'
		    order by a.bookid,b.stateid 
	</select>
	
	
	<select id="getBookcdV" resultType="String">
		SELECT decode(title,'계획서 및 절차서','표준절차서',title)   
        FROM TB_LM_RULECAT where pcatid=0  START WITH 
        CATID = #{pcatid}
        CONNECT BY PRIOR PCATID = CATID
	</select>
	
	<select id="getSelectXMLDATA" resultType="HashMap">
		select 
			STATEHISTORYID,
			BOOKID,
			STATEID,
			XMLDATA,
			XMLOLDNEWREVISION,
			XMLDATALINK,
			REMARK,
			GIANID,
			GIANBON,
			CHARGEUSERID,
			APPROVERID,
			APPROVEYN,
			HPDATE,
			WRITERID,
			UPDT,
			XML,
			GXML,
			LINKXML
		from tb_lm_statehistory where statehistoryid=#{STATEHISTORYID}
	</select>
	
	<resultMap type="HashMap" id="docinfodata">
        <result property="XMLDATA" column="XMLDATA" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="XMLOLDNEWREVISION" column="XMLOLDNEWREVISION" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="XMLDATALINK" column="XMLDATALINK" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="REVREASON" column="REVREASON" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="MAINPITH" column="MAINPITH" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="UPDATEREASON" column="UPDATEREASON" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="JENMUN" column="JENMUN" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="CONT" column="CONT" jdbcType="CLOB" javaType="java.lang.String" />
    </resultMap>
    
	<!-- ListAgg(DEPT_NM,',') within group(order by DEPT_NM) -->
	<select id="getSelectDocInfo" resultType="HashMap">
		select A.BOOKID,OBOOKID,TITLE,BOOKCODE,BOOKCD,BOOKSUBCD,REVCD,REVCHA,PROMULDT,STARTDT,DEPTNAME,
		USERNAME,UPDATEID,UPDATECHA,UPDATEREASON,nvl(to_char(b.updt,'YYYY-MM-DD'),'') as UPDATEUPDT,WRITER,
		(
			select 
				GROUP_CONCAT(DEPT_NM) dept
			from tb_lm_ruledept rd,TB_COM_ORGCHT io where RD.DEPTCD = IO.DEPT_NO and obookid = a.obookid
		) as DEPTCD
		,GRADE
		<![CDATA[
		,replace(REVREASON,'</br>','\n') as REVREASON,replace(MAINPITH,'</br>','\n') as MAINPITH
		]]>
		from 
		tb_lm_rulehistory a, tb_lm_ruleupdatelog b 
		where a.bookid = b.bookid(+) and a.bookid = #{bookid}
		order by b.updatecha asc
	</select>
	
	<insert id="setUpdatelog">
		<selectKey keyProperty="updateid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO tb_lm_ruleupdatelog
		(
			updateid,bookid,updatecha,updatereason,updt,writer,writerid
		)
		VALUES
		(
			#{updateid},#{bookid},#{updatecha},#{updatereason},sysdate,#{writer},#{writerid}
		)
	</insert>
	
	<select id="getDeptList" resultType="HashMap">
		SELECT OPINIONID,STATEHISTORYID,BOOKID,CONTENT,DEPTCD,USERID,CHECKYN,DEPT_NM AS DEPTNAME 
		FROM TB_LM_RULEOPINION A,TB_COM_ORGCHT B 
		WHERE A.DEPTCD=B.DEPT_NO AND STATEHISTORYID=(SELECT MAX(STATEHISTORYID) FROM TB_LM_STATEHISTORY WHERE BOOKID=#{bookid} AND STATEID=(SELECT STATEID FROM TB_LM_STATE WHERE STATECD='검토요청'))
		AND BOOKID=#{bookid}
	</select>
	
	<update id="opinionSave">
		update TB_LM_RULEOPINION set content=#{bonhtml},checkyn='Y'<!-- ,userid=#{Writerno} -->
		where opinionid=#{opinionid}
	</update>
	
	<select id="opinionContent"  resultType="HashMap">
		select * from TB_LM_RULEOPINION where opinionid=#{opinionid}
	</select>
	
	<select id="selectProgInfo" resultType="HashMap">
		select STATEHISTORYID,BOOKID, A.STATEID, STATECD
		from tb_lm_statehistory a, tb_lm_state b 
		where  a.stateid = b.stateid 
		and bookid = #{bookid}
		order by statehistoryid asc
	</select>
	
	<select id="selectProgBon" resultType="HashMap">
	<![CDATA[
		 select a.BOOKID,CATID,OBOOKID,(SELECT ORD FROM TB_LM_RULECAT WHERE CATID = A.CATID) ORD,BOOKCODE,REVCD,REVCHA,b.STATEid,PROMULDT,PROMULNO,
         ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,b.UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,DEPT,USERNAME,USERID,PHONE,
         replace(REVREASON,'</br>','\n') as REVREASON,MAINPITH,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK,BUYN,
         (SELECT PCATID FROM TB_LM_RULECAT WHERE CATID = A.CATID) PCATID,STATEHISTORYID
         from tb_lm_rulehistory  a, TB_LM_STATEHISTORY b where a.bookid = b.bookid and STATEHISTORYID = #{statehistoryid}
    ]]>
	</select>
	
	<select id="setXmlschBonSetting" resultType="HashMap">
		select BOOKID from tb_lm_rulehistory where noformyn='N'
	</select>
	
	<delete id="delLawFileDLL">
		DELETE FROM TB_LM_RULEFILE WHERE FILEID = #{fileid}
	</delete>
	
	<update id="setMAINPITH" parameterType="HashMap">
		UPDATE TB_LM_RULEHISTORY SET 
			MAINPITH=#{mainpith},REVREASON=#{revreason}
		WHERE BOOKID=#{bookid}
	</update>
	
	<update id="buynUpdate">
		UPDATE TB_LM_RULEHISTORY SET 
			buyn=#{buyn}
		WHERE BOOKID=#{bookid}
	</update>
	
	<select id="getSIMlist" resultType="HashMap">
		select A.STATEHISTORYID,B.STATECD from tb_lm_statehistory a,tb_lm_state b where a.stateid=b.stateid and bookid =#{bookid} order by statehistoryid desc
	</select>
	
	<select id="selectFilelist" resultType="HashMap">
	select   FILEID, PCFILENAME, SERVERFILE, FILETYPE,
	DECODE(filecd,'AN','개정안','GAE','개정문','JUN','전문','SIN','신구조문','REA','개정이유','VIEW','의견서','BYUL','별표','BYULCH','별첨','BYULJI','별지서식','ETC','기타','BU','부패영향평가',filecd) FILECD,
	CONTID,ORD, BOOKID,STATEHISTORYID,PDFFILE,CONVERTYN,CONVLOG         
    from
        tb_lm_rulefile 
    where
        filecd != 'IMAGE' 
        and statehistoryid = #{statehistoryid}
    order by
        fileid asc  
	</select>
	
	<select id="getOpinion" resultType="String">
		select CONTENT from TB_LM_RULEOPINION	where opinionid=#{opinionid}
	</select>
	
	<select id="getApprover" resultType="HashMap">
		select a.APPROVERID,b.USER_NM as APPROVERNM  from TB_LM_STATEHISTORY a,TB_COM_HRIS b where a.APPROVERID=b.USER_ID and a.bookid=#{bookid} and stateid = '1000'
	</select>
	
	<select id="getApproveryn" resultType="String">
		select nvl(approveyn,'Y') as APPROVEYN  from TB_LM_BASTATE where stateid=#{stateid} and refstateid=#{refstateid}
	</select>
	
	<update id="setApproveryn">
		update tb_lm_statehistory set approveyn='N' where statehistoryid=#{statehistoryid}
	</update>
	
	<update id="setApproveryn_s">
		update tb_lm_statehistory set approveyn='N' , approverid=#{approverid} where statehistoryid=#{statehistoryid}
	</update>
	
	<insert id="saveLinkinfo">
		INSERT INTO TB_LM_RULELINKINFO (
		   BOOKID, RELATIONBOOKID) 
		VALUES ( #{bookid}, #{relationbookid} )
	</insert>
	
	<select id="getSelectLinkInfo1" resultType="HashMap">
		SELECT A.BOOKID,OBOOKID,BOOKCD,BOOKCODE,TITLE,PROMULDT,REVCHA,A.NOFORMYN FROM TB_LM_RULEHISTORY A 
		,(select distinct(relationbookid) as rbookid,bookid from TB_LM_RULELINKINFO where bookid=#{bookid}) b
		where a.bookid=b.rbookid
	</select>
	
	<select id="getSelectLinkInfo2" resultType="HashMap">
		SELECT MAX(A.BOOKID) AS BOOKID,OBOOKID,
		    MAX(A.BOOKCD) AS BOOKCD,
		    MAX(A.BOOKCODE) AS BOOKCODE,
		    MAX(A.TITLE) AS TITLE,
		    MAX(A.PROMULDT) AS PROMULDT,
		    MAX(A.REVCHA) AS REVCHA,
		    A.NOFORMYN
		FROM TB_LM_RULEHISTORY A 
        	,(select distinct(bookid) as bookid,relationbookid from TB_LM_RULELINKINFO where relationbookid=#{bookid}) b
        where a.bookid=b.bookid  
        group by obookid
        order by bookcode
        
	</select>
	
	<delete id="deleteLinkInfo1">
		delete from TB_LM_RULELINKINFO where bookid=#{bookid}
	</delete>
	
	<delete id="deleteLinkInfo2">
		delete from TB_LM_RULELINKINFO where bookid in (select bookid from tb_lm_rulehistory where obookid = #{OBOOKID})
	</delete>
	
	<select id="selectDocByul"  resultType="HashMap">
		SELECT A.BOOKID,A.TITLE,A.STATECD,A.BOOKCD,B.XMLDATA,B.STATEHISTORYID FROM TB_LM_RULEHISTORY A,TB_LM_STATEHISTORY B 
		WHERE A.BOOKID=B.BOOKID AND STATEHISTORYID = #{STATEHISTORYID} 
		ORDER BY A.BOOKID
	</select>
	
	<insert id="searchByulInsert">
		INSERT INTO TB_LM_RULESEARCHFILE
		(
			BOOKID,
			STATEHISTORYID,
			FILEID,
			PCFILENAME,
			SERVERFILE,
			FILECD,
			STATECD
		)
		VALUES
		(
			#{BOOKID},
			#{STATEHISTORYID},
			#{FILEID},
			#{PCFILENAME},
			#{SERVERFILE},
			#{FILECD},
			#{STATECD}
		)
	</insert>
	
	<delete id="searchByulDelete">
		delete from TB_LM_RULESEARCHFILE where bookid = #{bookid}
	</delete>
	
	<select id="selectGoFILE" resultType="HashMap">
		select XMLDATA from tb_lm_statehistory where bookid= (select bookid from tb_lm_rulehistory where obookid=#{obookid} and statecd='5000') and stateid='5000'
	</select>
	
	<select id="makeExcel" resultType="HashMap">
		SELECT t.CATID,t.PCATID,t.TITLE,t.CATCD,LEVEL
			,nvl((select title from tb_lm_rulecat where catid = #{catid}),'')||LPAD('',(LEVEL-1)*2,'')||SYS_CONNECT_BY_PATH(t.TITLE,'>')AS PATH,b.REVCD   
	        ,B.REVCHA,B.STARTDT,B.PROMULDT,B.DEPTNAME,B.USERNAME,B.BOOKCODE,B.BOOKCD,B.BOOKSUBCD
        FROM TB_LM_RULECAT T ,tb_lm_rulehistory b 
        WHERE t.DELYN='N' AND t.USEYN='Y' and t.catid = b.catid(+) and t.catcd='doc'  and statecd in (5000,6000)
        START WITH T.PCATID=#{catid} 
        CONNECT BY PRIOR T.CATID=T.PCATID  
        ORDER SIBLINGS BY t.ORD
	</select>
	
	<select id="etcLinkSelect2" resultType="HashMap">
		select a.*,b.title as BOOKTITLE from TB_LM_ETCLINK a,tb_lm_rulehistory b where a.bookid=b.bookid and docid = #{docid} and linkgbn = #{linkgbn}
	</select>
	
	<!-- 
	select contid,x.title,x.bookid,x.NOFORMYN
        from TB_LM_ETCLINK a,tb_lm_rulehistory x where a.docid = x.bookid and linkgbn='LAW' and a.bookid=#{bookid}
	 -->
	<select id="etcLinkSelect3" resultType="HashMap">
        select count(*) as cnt,contid from tb_lm_rulefile where bookid = #{bookid} and filecd='CONT' group by contid
	</select>
	
	<delete id="ectLinkDelete">
		delete from TB_LM_ETCLINK where linkid = #{linkid}
	</delete>
	
	<insert id="ectLinkInsert">
		<selectKey keyProperty="linkid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		insert into TB_LM_ETCLINK  (
			LINKID, LINKGBN, DOCID, BOOKID, CONTID, JONO, JOSUBNO,title
		)
		values
		(
			#{linkid}, #{linkgbn}, #{docid}, #{bookid}, #{contid}, #{jono}, #{josubno},#{title}
		)
	</insert>
	
	<select id="selectDocList" resultType="HashMap">
		select * from tb_lm_rulehistory where statecd='5000'  order by title
	</select>
	
	<insert id="setAllDown">
		<selectKey keyProperty="did" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_ALLDOWN (
		   DID, PARAM,UPDT) 
		VALUES ( #{did}, #{pdata}, sysdate)
	</insert>
	
	<select id="codeList" resultType="HashMap">
		SELECT CODEID,CODENAME, CODE FROM TB_COM_CD
	    where CODENAME =	#{item}	AND USEYN='Y'
		ORDER BY ORD
	</select>
	
	<select id="jikmulist" resultType="HashMap">
		SELECT a.*,OBOOKID FROM hrm.tm_hr16z01 a ,tb_lm_jikmu b WHERE a.objid = b.objid(+) and obookid(+) = #{obookid} and TO_CHAR(a.ENDDA, 'YYYY-MM-DD') = '9999-12-31'
		order by stext
	</select>
	
	<insert id="insertJikmu">
		INSERT INTO tb_lm_jikmu (
		   obookid, objid,UPDT) 
		VALUES ( #{obookid}, #{objid}, sysdate)
	</insert>
	
	<delete id="deleteJikmu">
		delete from tb_lm_jikmu where obookid = #{obookid}
	</delete>
	
	<select id="selectLawDocList" resultType="HashMap">
		SELECT LAWSID,PLAWSID as  BOOKID,lawid as OBOOKID,lawname as TITLE FROM TB_LM_LAWKOREA 
		where lawname LIKE '%'||#{schtxt}||'%' 
		ORDER BY lawname 
	</select>
	
	<select id="selectByLawDocList" resultType="HashMap">
		SELECT BYLAWID,PBYLAWID as BOOKID,BYLAWNO as OBOOKID,BYLAWNAME as TITLE FROM TB_LM_BYLAWKOREA 
		where BYLAWNAME LIKE '%'||#{schtxt}||'%' 
		ORDER BY BYLAWNAME
	</select>
	
	<insert id="setTB_LM_RULETREE">
		<selectKey keyProperty="TREEID" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULETREE (
			TREEID, PTREEID, ORD, GBN, DOCID, DOCTITLE, MAKEDOCID
		) 
		VALUES ( #{TREEID}, #{PTREEID}, #{ORD}, #{GBN}, #{DOCID}, #{DOCTITLE}, #{MAKEDOCID})
	</insert>
	
	<select id="getBuV"  resultType="String">
		select serverfile from tb_lm_rulefile where statehistoryid =#{statehistoryid} and filecd=#{filecd}
	</select>
	
	<select id="getReadBuV"  resultType="HashMap">
		SELECT SERVERFILE,STATEHISTORYID FROM tb_lm_rulefile WHERE statehistoryid IN (SELECT max(statehistoryid) FROM tb_lm_statehistory WHERE bookid =#{bookid} and stateid=#{stateid}) and filecd=#{filecd}
	</select>
	
	<!--현행조회  -->
	<select id="selectMETA"  resultType="HashMap">
		<![CDATA[
		SELECT 
            a.BOOKID,CATID,OBOOKID,(SELECT ORD FROM TB_LM_RULECAT WHERE CATID = A.CATID) ORD,BOOKCODE,REVCD,to_char(REVCHA) as REVCHA,STATECD,PROMULDT,PROMULNO,
            ABOLISHDT,STARTDT,ENDDT,BOOKCD,BOOKSUBCD,TITLE,A.UPDT,USEYN,DELYN,OTHERLAW,LEGISLATOR,DEPT,USERNAME,USERID,PHONE,
            replace(REVREASON,'</br>','\n') as REVREASON,replace(MAINPITH,'</br>','\n') as MAINPITH
            ,replace(jenmun,'</br>','\n') as JENMUN,OPENYN,WORKSTATECD,NOFORMYN,DEPTNAME,LINKURL,BUYN,
            (SELECT PCATID FROM TB_LM_RULECAT WHERE CATID = A.CATID) PCATID,ACTIONYN,GRADE,HOMEYN,BUCHKYN,PRELAWYN
            ,(select max(statehistoryid) from tb_lm_statehistory where bookid =a.bookid) as STATEHISTORYID
        FROM TB_LM_RULEHISTORY A
        WHERE Bookid=#{bookid}  
        ]]>
	</select>
	
	<insert id="addDoc" parameterType="mtenMap">
		<selectKey keyProperty="catid" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULECAT (catid, pcatid, ord, catcd, title, useYn, delYn, upDt)
		VALUES (
			#{catid},#{pcatid},#{ord},'doc',#{title},#{useyn},'N',to_char(SYSDATE,'YYYY-MM-DD')
		)
	</insert>
	
	<select id="getAllDownJson" resultType="HashMap">
		with tdata as (
	        select cc.* from tb_lm_rulehistory cc ,
	        (
		        select distinct(max(revcha) over(partition by obookid)) as revcha,obookid from tb_lm_rulehistory 
		        where  1=1
		        <if test="startdt != null and startdt != ''">
		        	<![CDATA[
						and #{startdt} >= startdt and statecd!='6000' and enddt > #{startdt}
					]]>
				</if>
				<if test="startdt == null or startdt == ''">
					and statecd='5000'
				</if>
	        )dd where cc.obookid = dd.obookid and cc.revcha=dd.revcha
		)
		SELECT
	        lc.catid,
	        lc.catid as "id",
	        DECODE(catcd,'folder',lc.title, DECODE( ls.statecd,'현행',lc.title,'폐지',lc.title,lc.title)) title    ,
	        DECODE(catcd,'folder',lc.title, DECODE( ls.statecd,'현행',lc.title,'폐지',lc.title,lc.title)) "text"    ,
	        decode(lc.catcd,'folder','folder','file') as "cls",
	        decode(lc.catcd,'folder','false','true') as "leaf",
	        lc.catcd,
	        lc.useyn,
	        lc.ord,
	        decode(catcd,'folder','-1',NVL(lb.bookid,'0')) bookid ,
	        NVL(ls.statecd,'') statecd,
	        ls.stateid,
	        NVL(lb.noformyn,'') noformyn,
	        NVL(lb.obookid,0) obookid,
	        NVL(lb.revcha, -1) revcha,
	        lb.promuldt,
	        lb.startdt,
	        lb.enddt,
	        lb.revcd,
	        lb.deptname,
	        lb.dept,
	        lb.bookcd   
	    FROM
	        TB_LM_RULECAT lc,
	        tdata lb,
	        TB_LM_STATE ls    
	    WHERE
	        lc.pcatid = #{node}
	        and lb.statecd=ls.stateid(+)  
	        AND lc.delyn='N' 
	        AND lc.catid = lb.catid(+) 
	        and decode(catcd,'folder','-1',NVL(lb.bookid,'0'))  != 0       
	    ORDER BY lc.ord
	</select>
	
	<select id="getProgList" resultType="HashMap">
		SELECT     A.BOOKID,A.CATID,A.OBOOKID,A.REVCD,A.REVCHA,B.STATEID,B.STATECD,A.BOOKCD,A.BOOKSUBCD||' 회차' as BOOKSUBCD, decode(A.PROMULDT,'7777-12-31','',A.PROMULDT) as PROMULDT,
        A.STARTDT,A.ENDDT,A.TITLE,A.UPDT,A.OTHERLAW, A.NOFORMYN,A.BUYN,A.GRADE,A.ACTIONYN,A.BOOKCODE,
        (     
        SELECT LPAD('',(LEVEL-1)*2,'')||SYS_CONNECT_BY_PATH(TITLE,'>')AS PATH              
        FROM TB_LM_RULECAT WHERE CATID = A.CATID START WITH            
        CATID = 
        (               
        SELECT MIN(CATID) CATID  FROM TB_LM_RULECAT S START WITH                
        S.CATID = A.CATID               
        CONNECT BY  S.CATID= PRIOR S.PCATID            
        )           
        CONNECT BY PRIOR CATID = PCATID    
        )AS PATH,    
        (     
        SELECT PCATID FROM TB_LM_RULECAT WHERE CATID=A.CATID    ) AS PCATID 
        ,(select max(statehistoryid) from tb_lm_statehistory where bookid=a.bookid and stateid = a.statecd) as STATEHISTORYID
        ,decode(b.stateid,'2600',(select max(statehistoryid) from tb_lm_statehistory where bookid=a.bookid and stateid = '2500'),'0') as BSTATEHISTORYID
        FROM TB_LM_RULEHISTORY A,tb_lm_state b
        WHERE a.statecd not in (select stateid from tb_lm_state where statecd in('현행', '연혁', '폐지'))
        and a.statecd=b.stateid 
        <if test="deptcd != '' and deptcd != null"> 
			and '${deptcd}' like '%'||Dept||'%'  
			and a.statecd in ('1000','1200','1300','1400','1600','1700','1800','4000')        
        </if>
        <if test="suserid != '' and suserid != null"> 
			and a.userid = #{suserid}
			and a.statecd in ('1000','1200','1300','1400','1600','1700','1800','4000')
        </if>
        <if test="stateCd != '' and stateCd != null"> 
			and a.statecd = #{stateCd}      
        </if>
        
        <if test="sort != '' and sort != null"> 
			order by ${sort} ${dir}     
        </if>
	</select>
	
	<update id="updateHistoryTitle">
		UPDATE tb_lm_rulehistory SET title=#{TITLE} where bookid = #{BOOKID}
	</update>
	
	<update id="updateStep1">
		UPDATE TB_LM_RULEHISTORY SET STATECD=(select stateid from tb_lm_state where statecd in ('연혁') ),ENDDT=#{enddt}
		WHERE BOOKID=
		(SELECT BOOKID FROM TB_LM_RULEHISTORY 
        	WHERE STATECD in (select stateid from tb_lm_state where statecd in ('현행','폐지') ) AND OBOOKID= 
        	(
        		SELECT OBOOKID FROM TB_LM_RULEHISTORY where bookid =#{bookid}
        	)
    	)
	</update>
	
	<update id="updateStep2">
		UPDATE TB_LM_RULEHISTORY SET statecd=#{statecd}	WHERE bookid =#{bookid}
	</update>
	
	<insert id="nextStep_Copy">
		<selectKey keyProperty="newstatehistoryid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_STATEHISTORY
		(
			STATEHISTORYID,BOOKID,STATEID,REMARK,UPDT,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK,gianbon,gianid,approveyn,hpdate,writerid
		)
		select #{newstatehistoryid},BOOKID,#{stateid},REMARK,sysdate,XMLDATA,XMLOLDNEWREVISION,XMLDATALINK,#{gianbon},#{gianid},decode(#{stateid},'2100','Y',''),#{hpdate},#{writerid}
        FROM TB_LM_STATEHISTORY WHERE STATEHISTORYID=decode(#{stateid},'2600',(select max(statehistoryid) from TB_LM_STATEHISTORY where bookid=(select max(bookid) from tb_lm_statehistory where statehistoryid=#{statehistoryid}) and stateid in ('2200','2000')),#{statehistoryid})
	</insert>
	
	<select id="getServerFilename" resultType="HashMap">
		select PCFILENAME,SERVERFILE,FILETYPE,BONTXT,FILECD,ORD from TB_LM_RULEFILE where bookid=#{bookid} and STATEHISTORYID = #{statehistoryid} and (filecd in ('JUN','SIN','GAE','REA','IBBUBYEGOAN','BANGCHIMAN','LASTAN','GONGPOMUN','HUMBALREONGMUN','DOSAJUNBOGO') or filecd like 'GL%')
	</select>
	
	<!-- 새 카테고리 생성 쿼리 -->
    <insert id="setServerFilename">
        INSERT INTO TB_LM_RULEFILE(fileid, pcfilename, serverfile, filetype, filecd, updt, bookid,ord, statehistoryid,bontxt)
        VALUES (#{fileid}, #{pcfilename}, #{serverfile}, #{filetype}, #{filecd}, #{updt} , #{bookid},#{ord}, #{statehistoryid},#{bontxt})
    </insert>
    
    <select id="lawList" resultType="HashMap">
		select LAWSID,LAWID,PLAWSID,REVCD,LAWNAME,PROMULDT from tb_lm_lawkorea where statecd='현행'
		<if test="schTxt != null and schTxt != ''">
				and lawname like '%'||#{schTxt}||'%'
		</if>
		<choose>
			<when test="orderby != null and orderby != ''">
				order by ${orderby}
			</when>
			<otherwise>
				order by promuldt desc
			</otherwise>
		</choose>
	</select>
	
	<select id="bylawList" resultType="HashMap">
		select BYLAWID,BYLAWNO,PBYLAWID,BYLAWNAME,STARTDT,BYLAWCD from tb_lm_bylawkorea where statecd='현행'
		<if test="schTxt != null and schTxt != ''">
			and bylawname like '%'||#{schTxt}||'%'
		</if>
		order by bylawname
	</select>
	
	<select id="ruleList" resultType="HashMap">
		select BOOKID,OBOOKID,BOOKCODE,A.TITLE,STARTDT,REVCD from tb_lm_rulehistory a,tb_lm_rulecat b where a.catid=b.catid and  a.statecd='5000'
		<if test="schTxt != null and schTxt != ''">
			and a.title like '%'||#{schTxt}||'%'
		</if>
		order by a.title
	</select>
	
	<insert id="saveRuleTree">
	 	<selectKey keyProperty="newtreeid" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_LM_RULETREE (
			TREEID, PTREEID, TITLE, DOCID, DOCGBN, LINKGBN, ORD,MDOCID
		) 
		VALUES ( #{newtreeid}, #{ptreeid}, #{title}, #{docid}, #{docgbn}, #{linkgbn}, 
		(select nvl(max(ord)+1,0) from TB_LM_RULETREE where ptreeid=#{ptreeid} and mdocid=#{mdocid} ),
		#{mdocid})
	 </insert>
	 
	 <select id="getRuleTree"  resultType="HashMap">
	 	<![CDATA[
		SELECT  TREEID, PTREEID,'<span style=''background-color:#fed588;''>['|| docgbn ||']</span>    ' || title as TITLE,DOCID,DOCGBN,LINKGBN,ORD,MDOCID
        FROM TB_LM_RULETREE T 
        WHERE  mdocid=#{mdocid} and T.ptreeid=nvl(#{node},0)
        order by ord
        ]]> 
	</select>
	
	<select id="chkRuleTree" resultType="int">
		SELECT  count(*)
        FROM TB_LM_RULETREE 
        WHERE  ptreeid=#{treeid}
	</select>
	
	<delete id="delRuleTree">
	 	delete from TB_LM_RULETREE where treeid = #{treeid}
	</delete>
	
	<select id="moveNode"  resultType="HashMap">
		 SELECT * FROM (
			 select a.*,(rownum -1) AS RN
			 from TB_LM_RULETREE a
			 where ptreeid = #{ptreeid}
		 )dm WHERE dm.rn = #{ord}
	</select> 
	
	<update id="updateRuleTreeOrd">
		update TB_LM_RULETREE set
		ord = ord+1
		where ptreeid = #{PTREEID}
		and ord>=#{ORD}
	</update>
	
	<update id="updateRuleTree">
		update TB_LM_RULETREE set
		ptreeid = #{ptreeid},
		ord = decode(#{ord},'',(select nvl(max(ord)+1,0) from TB_LM_RULETREE where ptreeid=#{ptreeid}),#{ord}) 
		where treeid = #{treeid}
	</update>
	
	<select id="chkCatruleList" resultType="int">
    	select count(*) from TB_LM_CATRULE where catid = #{catid} and userid=#{userid}
    </select>
    
    <insert id="getCatruleInsert">
    	<selectKey keyProperty="catruleid" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
    	INSERT INTO TB_LM_CATRULE (
		   CATRULEID, CATID, USERID, 
		   USERNM, DEPTCD, DEPTNM, 
		   UPDT) 
		VALUES ( #{catruleid},
		 #{catid},
		 #{userid},
		 #{usernm},
		 #{deptcd},
		 #{deptnm},
		 sysdate )
    </insert>
    
    <select id="getCatruleList" resultType="HashMap">
    	select a.*,'N' as CRULEYN from TB_LM_CATRULE a where catid = #{catid}
    </select>
    
    <delete id="getCatruleDelete">
    	delete from TB_LM_CATRULE where catruleid=#{catruleid}
    </delete>
    
    <update id="updateAppandNode">
    	update tb_lm_rulecat set 
    		pcatid=#{pCatId}
    		,ord = (select max(ord)+1 from tb_lm_rulecat where pcatid = #{pCatId}) 
    	where catid = #{catId}
    </update>
    
    <update id="updateReorderNode2">
    	update tb_lm_rulecat set 
    		ord = #{ord} 
    	where catid = #{catId}
    </update>
    <update id="updateReorderNode1">
    	update tb_lm_rulecat set 
    		ord = ord +1
    	where pCatId = #{pCatId} and ord>=#{ord}
    </update>
    
    <update id="docInfoUpdate" parameterType="HashMap">
		UPDATE TB_LM_RULEHISTORY SET 
			BOOKSUBCD=#{booksubcd},
			DEPTNAME=#{deptname},
			USERNAME=#{username},USERID=#{userid},PHONE=#{phone},DEPT=#{dept}
		WHERE BOOKID=#{bookid}
	</update>
</mapper>

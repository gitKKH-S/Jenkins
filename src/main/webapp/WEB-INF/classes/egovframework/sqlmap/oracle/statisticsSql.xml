<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "/WEB-INF/dtd/mybatis-3-mapper.dtd">
<mapper namespace="statisticsSql">
	<insert id="setMenuLog">
		INSERT INTO TB_COM_MENU_LOG (
		   CNTN_EMP_NO, CNTN_DEPT_NO, MENU_MNG_NO, 
		   CNTN_YMD) 
		VALUES ( #{CNTN_EMP_NO},
		 #{CNTN_DEPT_NO},
		 #{MENU_MNG_NO},
		 to_char(sysdate,'YYYYMMDD')
		)
	</insert>
	
	<insert id="setViewLog">
		INSERT INTO TB_LM_VIEWLOG (
			OBOOKID, USERID, DEPTCD, CNTN_YMD,ACTIONGBN,BOOKID,ADDIP)
			VALUES ( #{obookid},#{Empno},
			 #{deptcd},
			 to_char(sysdate,'MM/DD/YYYY'),#{actiongbn},#{bookid},#{addip} )
	</insert>
	
	<insert id="setDownLog">
		INSERT INTO TB_LM_VIEWLOG (
			OBOOKID, USERID, DEPTCD, CNTN_YMD,ACTIONGBN,BOOKID,ADDIP)
			VALUES ( (select obookid from tb_lm_rulehistory where bookid = (select bookid from tb_lm_rulefile where fileid = #{fileid})),#{Empno},
			 #{deptcd},
			 to_char(sysdate,'YYYYMMDD'),#{actiongbn},(select bookid from tb_lm_rulefile where fileid = #{fileid}),#{addip} )
	</insert>
	
	<!-- 
	nvl(max(decode(MENU_MNG_NO,'10000000',cnt)),0) "법률정보",
    nvl(max(decode(MENU_MNG_NO,'10000011',cnt)),0) "사규" ,
    nvl(max(decode(MENU_MNG_NO,'10000001',cnt)),0) "소송" ,
    nvl(max(decode(MENU_MNG_NO,'10000002',cnt)),0) "자문",
    nvl(max(decode(MENU_MNG_NO,'10000181',cnt)),0) "자료실",
    nvl(max(decode(MENU_MNG_NO,'10000225',cnt)),0) "표준계약서"
	 -->
	<select id="getMenuLogList"  resultType="HashMap">
		select 
            CNTN_YMD as C1,
            nvl(max(decode(MENU_MNG_NO,'10000001',cnt)),0) C2,
            nvl(max(decode(MENU_MNG_NO,'10000002',cnt)),0) C3 ,
            nvl(max(decode(MENU_MNG_NO,'10000200',cnt)),0) C4 ,
            nvl(max(decode(MENU_MNG_NO,'10000011',cnt)),0) C5,
            nvl(max(decode(MENU_MNG_NO,'10000000',cnt)),0) C6,
            nvl(max(decode(MENU_MNG_NO,'10000181',cnt)),0) C7,
            nvl(max(decode(MENU_MNG_NO,'10000225',cnt)),0) C8,
            nvl(max(decode(MENU_MNG_NO,'11000246',cnt)),0) C9,
            nvl(max(decode(MENU_MNG_NO,'11000247',cnt)),0) C10,
            nvl(max(decode(MENU_MNG_NO,'11000248',cnt)),0) C11
             
        from(
             select
                DISTINCT(count(USERID) over(partition 
            by
                a.MENU_MNG_NO,
                to_char(to_date(CNTN_YMD,'MM/DD/YYYY'),#{dateFormat}))) as cnt,
                a.MENU_MNG_NO,
                B.menutitle,
               	to_char(to_date(CNTN_YMD,'MM/DD/YYYY'),#{dateFormat}) as CNTN_YMD
            from
                TB_COM_MENU_LOG a ,
                TB_COM_MENU b    
            where
                a.MENU_MNG_NO=B.MENU_MNG_NO 
                and B.topgbn='Y'
                <if test="txtStartDate != null and txtStartDate != ''">
                	<![CDATA[
					and to_char(to_date(CNTN_YMD),#{dateFormat}) >= #{txtStartDate}
					]]>
                </if>
                <if test="txtEndDate != null and txtEndDate != ''">
                	<![CDATA[
					and to_char(to_date(CNTN_YMD),#{dateFormat}) <= #{txtEndDate}
					]]>		
                </if>
        )t 
        group by CNTN_YMD order by CNTN_YMD
	</select>
	
	<select id="getSystemLogList" resultType="HashMap">
		select 
			DISTINCT(count(CNTN_EMP_NO) over(partition by to_char(to_date(CNTN_YMD,'YYYY-MM-DD'), #{dateFormat}))) as C2,
			to_char(to_date(CNTN_YMD,'YYYY-MM-DD'), #{dateFormat}) as C1
		from TB_COM_CNTN_LOG
		where 1=1 and CNTN_EMP_NO != 'mten'
		<if test="txtStartDate != null and txtStartDate != ''">
         	<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD'),#{dateFormat}) >= #{txtStartDate} 
			]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
           	<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD'),#{dateFormat}) <= #{txtEndDate}
			]]>
		</if>
		order by c1
	</select>
	
	<select id="getSystemDeptLogList" resultType="HashMap">
		select 
			DISTINCT(count(CNTN_EMP_NO) over(partition by CNTN_DEPT_NM)) as C2,
			CNTN_DEPT_NM AS C1
		from TB_COM_CNTN_LOG a
		where 1=1 and CNTN_EMP_NO != 'mten'
		<if test="txtStartDate != null and txtStartDate != ''">
         	<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD'),#{dateFormat}) >= #{txtStartDate} 
			]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
           	<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD'),#{dateFormat}) <= #{txtEndDate}
			]]>
		</if>
		order by C2
	</select>
	
	<select id="getDeptBylawList" resultType="HashMap">
		  <!-- 
		  SELECT DISTINCT
		         (COUNT (a.bookid) OVER (PARTITION BY b.DEPT_NM)) AS cnt,
		         b.DEPT_NM,
		         b.DEPT_NO
		    FROM tb_lm_rulehistory a, TB_COM_ORGCHT b
		   WHERE     a.dept = b.DEPT_NO
		         AND a.statecd IN (SELECT stateid
		                             FROM tb_lm_state
		                            WHERE statecd IN ('현행', '폐지'))
		ORDER BY b.DEPT_NO
		
		select distinct(sum(bb.cnt) over (partition by aa.DEPT_NM)) as cnt ,aa.DEPT_NM,aa.DEPT_NO from TB_COM_ORGCHT aa, 
			(
				SELECT  DISTINCT(COUNT (a.bookid) OVER (PARTITION BY b.DEPT_NM)) AS cnt,
			        b.DEPT_NM,
			        b.DEPT_NO,
			        b.UP_DEPT_NO       
			    FROM
			        tb_lm_rulehistory a,
			        TB_COM_ORGCHT b     
			    WHERE
        			a.dept = b.DEPT_NO   
        			and a.bookcd=#{bookcd}         
        			AND a.statecd IN (
			            SELECT
			                stateid                                
			            FROM
			                tb_lm_state                               
			            WHERE
			                statecd IN (
			                    '현행', '폐지'
			                )
			        )   
    			ORDER BY
        			b.DEPT_NO  
        	)bb
        where aa.DEPT_NO=bb.UP_DEPT_NO
		 -->	
		 SELECT SUM (ss.cnts) OVER (PARTITION BY deptname) as C2, deptname as C1, DEPT_NO as C3
          FROM (
              SELECT DISTINCT(SUM (c.cnt) OVER (PARTITION BY DECODE (SORT_SEQ,'3', (SELECT DEPT_NM FROM TB_COM_ORGCHT  WHERE DEPT_NO = c.UP_DEPT_NO), DEPT_NM)))
                  AS cnts,
                    DECODE (SORT_SEQ,'3', (SELECT DEPT_NM FROM TB_COM_ORGCHT WHERE DEPT_NO = c.UP_DEPT_NO), DEPT_NM) AS deptname,
                       DECODE (SORT_SEQ, '3', c.UP_DEPT_NO, DEPT_NO) AS DEPT_NO
            FROM (  
                select DISTINCT(COUNT (s.obookid) OVER (PARTITION BY s.DEPT_NM)) AS cnt 
                    ,s.DEPT_NM,s.DEPT_NO,s.UP_DEPT_NO,s.SORT_SEQ
                from (
                SELECT   a.promuldt,
                         b.DEPT_NM,
                         b.DEPT_NO,
                         b.UP_DEPT_NO,
                         b.SORT_SEQ,
                         a.obookid
                FROM (select sa.* from tb_lm_rulehistory sa , (
                                                                select max(dd.promuldt) as promuldt ,dd.obookid 
                                                                from tb_lm_rulehistory dd 
                                                                where statecd in (
																		            select
																		                stateid 
																		            from
																		                tb_lm_state 
																		            where
																		                statecd in ('현행','폐지','연혁')
																		          )
																<if test="txtEndDate != null and txtEndDate != ''">
																	<![CDATA[
																	and dd.promuldt <= #{txtEndDate}
																	]]>		
																</if>
                                                                
                                                                group by dd.obookid
                                                            ) sb 
                        where sa.obookid=sb.obookid and sa.promuldt = sb.promuldt
                      ) a, TB_COM_ORGCHT b
                WHERE     a.dept = b.DEPT_NO
                ) s
     
                ) c
             ) ss
                <!-- 
				SELECT DISTINCT(COUNT (a.bookid) OVER (PARTITION BY b.DEPT_NM)) AS cnt, b.DEPT_NM,
                         b.DEPT_NO,
                         b.UP_DEPT_NO,
                         b.SORT_SEQ
				FROM tb_lm_rulehistory a, TB_COM_ORGCHT b
				WHERE     a.dept = b.DEPT_NO
                         AND a.bookcd = #{bookcd}  
                         AND a.statecd IN
                                (SELECT stateid
                                   FROM tb_lm_state
                                  WHERE statecd IN ('현행', '폐지', '연혁'))
                         <isNotEqual property="txtStartDate" compareValue="">
						<![CDATA[
							and promuldt >= #{txtStartDate}
							]]>
						</if>
						<isNotEqual property="txtEndDate" compareValue="">
							<![CDATA[
							and promuldt <= #{txtEndDate}
							]]>		
						</if>
                ORDER BY b.DEPT_NO
                 -->
	</select>
	
	<insert id="setWordLog">
		INSERT INTO TB_LM_SEARCHLOG (
			WORD,
			CNTN_YMD
		) VALUES ( 
			#{word},
			to_date(to_char(sysdate,'yyyy-mm-dd'),'yyyy-mm-dd')
		)
	</insert>
	
	<insert id="insertImsiPop">
		INSERT INTO IMSI_POP (
			KEYWORD,
			CDATE
		) VALUES ( 
			#{word},
			to_date(to_char(sysdate,'yyyy-mm-dd'),'yyyy-mm-dd')
		)
	</insert>
	<!-- 
	<insert id="insertDayPop">
		INSERT INTO DAY_POP (
			KEYWORD,
			RANKING,
			CNT,
			STATE,
			STATE_CNT,
			CDATE
		) VALUES (
			#{keyword},
			#{ranking},
			#{cnt},
			#{state},
			#{state_cnt},
			to_date(to_char(sysdate,'yyyy-mm-dd'),'yyyy-mm-dd')
		)
	</insert>
	
	<insert id="insertWeekPop">
		INSERT INTO WEEK_POP (
			KEYWORD,
			RANKING,
			CNT,
			STATE,
			STATE_CNT,
			CDATE
		) VALUES (
			#{keyword},
			#{ranking},
			#{cnt},
			#{state},
			#{state_cnt},
			to_date(to_char(sysdate,'yyyy-mm-dd'),'yyyy-mm-dd')
		)
	</insert>
	
	<insert id="insertMonthPop">
		INSERT INTO MONTH_POP (
			KEYWORD,
			RANKING,
			CNT,
			STATE,
			STATE_CNT,
			CDATE
		) VALUES (
			#{keyword},
			#{ranking},
			#{cnt},
			#{state},
			#{state_cnt},
			to_date(to_char(sysdate,'yyyy-mm-dd'),'yyyy-mm-dd')
		)
	</insert>
	 -->
	<select  id="getWordLogList" resultType="HashMap">
		SELECT
			DISTINCT(count(WORD) over(partition by WORD)) AS CNT ,WORD
		from TB_LM_SEARCHLOG 
		where 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
         	<![CDATA[
			and to_char(CNTN_YMD,#{dateFormat}) >= #{txtStartDate}
			]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
           	<![CDATA[
			and to_char(CNTN_YMD,#{dateFormat}) <= #{txtEndDate}
			]]>
		</if>
		ORDER BY cnt desc
	</select>
	
	<select id="getSubthemeList" resultType="HashMap">
		select b.CODE,b.CODEID,count(a.gbn) as CNT from TB_LM_QUICKCAT a,
		(select * from TB_COM_CD where codename='SUBTHEME') b
		where a.gbn(+) = b.codeid
		group by b.code,b.codeid
	</select>
	
	<select id="getDeptList" parameterType="HashMap" resultType="HashMap">
		SELECT   a.PROMULDT,
                         b.DEPT_NM,
                         b.DEPT_NO,
                         b.UP_DEPT_NO,
                         b.SORT_SEQ,
                         a.obookid,
                         a.BOOKID,
                        a.TITLE,
                        a.BOOKCD,
                        a.PROMULDT,
                        a.NOFORMYN,a.deptname,decode(a.statecd,'5000','현행','6000','폐지','7000','연혁') as statecd
                FROM (select sa.* from tb_lm_rulehistory sa , (
                                                                select max(dd.promuldt) as promuldt ,dd.obookid 
                                                                from tb_lm_rulehistory dd 
                                                                where dd.bookcd not in ('업무지시','업무메뉴얼')
                                                                <if test="txtEndDate != null and txtEndDate != ''">
																	<![CDATA[
																	and dd.promuldt <= #{txtEndDate}
																	]]>		
																</if>
                                                   
                                                                and   statecd in (
            select
                stateid 
            from
                tb_lm_state 
            where
                statecd in ('현행','폐지','연혁')) group by dd.obookid
                                                            ) sb 
                        where sa.obookid=sb.obookid and sa.promuldt = sb.promuldt
                      ) a, TB_COM_ORGCHT b
                WHERE     a.dept = b.DEPT_NO and useyn = 'Y' and
                (
                b.DEPT_NO in (select DEPT_NO from TB_COM_ORGCHT where UP_DEPT_NO=#{deptseq}) 
                or
                b.DEPT_NO = #{deptseq}
                )
	<!-- 
		select dd.OBOOKID,
                dd.BOOKID,
                dd.TITLE,
                dd.BOOKCD,
                dd.PROMULDT,
                dd.NOFORMYN,dd.deptname,decode(dd.statecd,'5000','현행','6000','폐지','7000','연혁') as statecd   from (
        select             
                
                distinct(max (a.BOOKID) OVER (PARTITION BY obookid)) as bookid
                from tb_lm_rulehistory a,
        TB_COM_ORGCHT b where a.dept = b.DEPT_NO and bookcd=#{bookcd} and statecd in (
            select
                stateid 
            from
                tb_lm_state 
            where
                statecd in ('현행','폐지','연혁')) and useyn = 'Y' and 
                (
                b.DEPT_NO in (select DEPT_NO from TB_COM_ORGCHT where UP_DEPT_NO=#{deptseq}) 
                or
                b.DEPT_NO = #{deptseq}
                )
                <isNotEqual property="txtEndDate" compareValue="">
					<![CDATA[
					and promuldt <= #{txtEndDate}
					]]>		
				</if>
                )cc , tb_lm_rulehistory dd
                where cc.bookid=dd.bookid
                --> 
         <!--        
		select 			
				a.OBOOKID,
                a.BOOKID,
                a.TITLE,
                a.BOOKCD,
                a.PROMULDT,
                a.NOFORMYN,a.deptname,decode(a.statecd,'5000','현행','6000','폐지','7000','연혁') as statecd from tb_lm_rulehistory a,
        TB_COM_ORGCHT b where a.dept = b.DEPT_NO and bookcd=#{bookcd} and statecd in (
            select
                stateid 
            from
                tb_lm_state 
            where
                statecd in ('현행','폐지','연혁')) and useyn = 'Y' and 
                (
                b.DEPT_NO in (select DEPT_NO from TB_COM_ORGCHT where UP_DEPT_NO=#{deptseq}) 
                or
                b.DEPT_NO = #{deptseq}
                )
                 -->
	 </select>
	
	
	<select id="getLawList" resultType="HashMap">
		select 
            DISTINCT(count(a.obookid) over(partition by a.obookid)) as CNT,a.OBOOKID,b.TITLE 
        from TB_LM_VIEWLOG a ,(select distinct(obookid),TITLE,STATECD from tb_lm_rulehistory where statecd in (select stateid from tb_lm_state where statecd in ('현행','폐지'))) b
        where a.obookid=b.obookid
        <if test="txtStartDate != null and txtStartDate != ''">
         	<![CDATA[
			and to_char(to_date(CNTN_YMD),#{dateFormat}) >= #{txtStartDate}
			]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
           	<![CDATA[
			and to_char(to_date(CNTN_YMD),#{dateFormat}) <= #{txtEndDate}
			]]>
		</if>
		order by cnt desc
	</select>
	
	<select id="getLoglist" resultType="HashMap">
		select TITLE,CNTN_YMD,ACTIONGBN,A.USERID,A.DEPTCD,C.USER_NM,B.BOOKCODE,
			decode(SORT_SEQ,'3',(select DEPT_NM from TB_COM_ORGCHT_temp where DEPT_NO=d.UP_DEPT_NO),DEPT_NM) as DEPT_NM
			,(SELECT TITLE FROM TB_LM_RULECAT WHERE CATID =(SELECT PCATID FROM TB_LM_RULECAT WHERE CATID =B.CATID)) AS STITLE 
		from tb_lm_viewlog a ,tb_lm_rulehistory b ,TB_COM_HRIS c,TB_COM_ORGCHT d
		where a.bookid = b.bookid and a.userid=c.user_id and c.DEPT_NO=d.DEPT_NO and  a.userid not in('0','1','2')
		<if test="docType == 'S'"> 
			and b.bookcd='사규'
		</if>
		<if test="docType == 'Y'"> 
			and b.bookcd='예규'
		</if>
		<if test="docType == 'P'"> 
			and b.bookcd='표준절차서'
		</if>
		
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD HH24:MI:SS'),#{dateFormat}) >= to_char(add_months(sysdate,-1),'YYYY-MM-DD')
			]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
			<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD HH24:MI:SS'),#{dateFormat}) <= to_char(sysdate,'YYYY-MM-DD')
			]]>		
		</if>
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD HH24:MI:SS'),#{dateFormat}) >= #{txtStartDate}
			]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
			<![CDATA[
			and to_char(to_date(CNTN_YMD,'YYYY-MM-DD HH24:MI:SS'),#{dateFormat}) <= #{txtEndDate}
			]]>		
		</if>
		order by CNTN_YMD desc
	</select>
	
	<insert id="setDllLog">
		INSERT INTO TB_LM_VIEWLOG (	OBOOKID, USERID, DEPTCD, CNTN_YMD,ACTIONGBN,BOOKID,ADDIP)
			VALUES ( (select obookid from tb_lm_rulehistory where bookid = #{bookid}),#{Empno},
			 (select DEPT_NO from TB_COM_HRIS where user_id=#{Empno}),
			 to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),#{actiongbn},#{bookid},#{addip} )
	</insert>
	
	<resultMap id="resultStatistics" type="HashMap">
		<result property="TITLE" column="TITLE" />
		<result property="PROMULDT" column="PROMULDT" />
		<result property="STARTDT" column="STARTDT" />
		<result property="REVCD" column="REVCD" />
		<result property="REVNAME" column="REVNAME" />
		<result property="BOOKCODE" column="BOOKCODE" />
		<result property="TITLES" column="TITLES" />
		<result property="MAINPITH" column="MAINPITH" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>
	
	<select id="bylawstatistics1" resultType="HashMap">
		SELECT DISTINCT(COUNT(A.BOOKID) OVER(PARTITION BY B.STATEID)) AS CNT,B.STATEID,B.STATECD
        FROM TB_LM_STATE B ,(
	        select * from TB_LM_RULEHISTORY 
	        where 1=1
	        and bookcd not in ('업무지시','업무매뉴얼')
        ) A
        WHERE B.STATEID =A.STATECD(+)
        ORDER BY B.STATEID
	</select>
	
	<select id="bylawstatisticsD1" resultType="HashMap">
		SELECT B.STATEID,B.STATECD,A.TITLE,A.REVCHA,REVCD
		FROM TB_LM_STATE B ,(
		    select * from TB_LM_RULEHISTORY 
		    where 1=1
		    and bookcd not in ('업무지시','업무매뉴얼')
		) A
		WHERE B.STATEID =A.STATECD and a.statecd not in (5000,6000,7000)
		ORDER BY B.STATEID
	</select>
	
	<select id="bylawstatistics2" resultType="HashMap">
		select TITLE,PROMULDT,STARTDT,MAINPITH,REVCD ,DECODE(REVCD,'0','제정',REVCHA||'차') AS REVNAME,BOOKCODE,TITLE
		,(SELECT TITLE FROM TB_LM_RULECAT WHERE CATID =(SELECT PCATID FROM TB_LM_RULECAT WHERE CATID =a.CATID)) AS  titles  from tb_lm_rulehistory a
		where 1=1
		<if test="year != null and year != ''">
			and substr(promuldt,0,4)=#{year} and STATECD IN (SELECT STATEID FROM TB_LM_STATE WHERE STATECD IN ('현행','폐지','연혁'))
		</if>
		<if test="obookid != null and obookid != ''">
			and obookid = #{obookid}
		</if>
		and bookcd not in ('업무지시','업무매뉴얼')
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
			and to_char(to_date(promuldt,'YYYY-MM-DD'),#{dateFormat}) >= #{txtStartDate}
			]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
			<![CDATA[
			and to_char(to_date(promuldt,'YYYY-MM-DD'),#{dateFormat}) <= #{txtEndDate}
			]]>		
		</if>
		<if test="schText != null and schText != ''">
				and mainpith like '%'||#{schText}||'%'
		</if>
		<if test="revcd != null and revcd != ''">
				<if test='revcd == "R"'> 
					and revcd in ('개정','전부개정')
				</if>
				<if test='revcd == "N"'> 
					and revcd = '제정'
				</if>
				<if test='revcd == "C"'> 
					and revcd = '폐지'
				</if>
		</if>
		and STATECD IN (SELECT STATEID FROM TB_LM_STATE WHERE STATECD IN ('현행','폐지','연혁'))
		order by bookcode asc,promuldt desc
	</select>
	
	<select id="bylawstatistics3" resultType="HashMap">
		SELECT YYYY,MAX(NVL(DECODE(REVCD,'개정',CNT),0)) AS M1,MAX(NVL(DECODE(REVCD,'제정',CNT),0)) AS M2,MAX(NVL(DECODE(REVCD,'폐지',CNT),0)) AS M3,SUM(CNT) AS TOTAL FROM
		(
			SELECT DISTINCT(COUNT(BOOKID) OVER(PARTITION BY SUBSTR(PROMULDT,0,4),DECODE(REVCD,'전부개정','개정',REVCD))) AS CNT,SUBSTR(PROMULDT,0,4) AS YYYY,DECODE(REVCD,'전부개정','개정',REVCD) as REVCD FROM TB_LM_RULEHISTORY 
			WHERE STATECD IN (SELECT STATEID FROM TB_LM_STATE WHERE STATECD IN ('현행','폐지','연혁'))
			and bookcd not in ('업무지시','업무매뉴얼')
		)
		GROUP BY YYYY
		ORDER BY YYYY DESC
	</select>
	
	<select id="bylawstatistics4" resultType="HashMap">
		select TITLE,BOOKID,OBOOKID FROM TB_LM_RULEHISTORY 
		where statecd ='5000'
		and bookcd not in ('업무지시','업무매뉴얼')
		order by bookcode
	</select>
	
	<select id="bylawstatistics5" resultType="HashMap">
		<!-- 
		select cc.year,NVL(min(decode(booksubcd,'규정',cnt)),0) a1,NVL(min(decode(booksubcd,'세칙',cnt)),0) a2,NVL(min(decode(booksubcd,'절차',cnt)),0) a3,
			NVL(min(decode(booksubcd,'예규',cnt)),0) a4,NVL(min(decode(booksubcd,'',cnt)),0) a5 ,
			sum(cnt)-NVL(min(decode(booksubcd,'예규',cnt)),0) total from (
			select * from (
				select DISTINCT(count(bookid) over(partition by substr(STARTDT,0,4),decode(booksubcd,'정관','규정',booksubcd))) as cnt ,substr(STARTDT,0,4) as year,decode(booksubcd,'정관','규정',booksubcd) as booksubcd  from tb_lm_rulehistory where bookcd = '사규'
				union all
				select DISTINCT(count(bookid) over(partition by substr(STARTDT,0,4),bookcd)) as cnt ,substr(STARTDT,0,4) as year,bookcd   from tb_lm_rulehistory where bookcd ='예규'
			) aa
		)cc
		where year!='6666'
		group by cc.year
		order by cc.year desc
		 -->
		with datev as(
            select obookid,min(substr(PROMULDT,0,4)) AS ST,max(substr(DECODE(STATECD,'6000',PROMULDT,ENDDT),0,4)) AS ET
            ,BOOKCD from tb_lm_rulehistory 
            where  statecd in ('5000','6000','7000') group by obookid,BOOKCD
        ) 
        select cc.YEAR,NVL(min(decode(BOOKCD,'조례',cnt)),0) A1,NVL(min(decode(BOOKCD,'규정',cnt)),0) A2,NVL(min(decode(BOOKCD,'규칙',cnt)),0) A3,
                    NVL(min(decode(BOOKCD,'시행세칙',cnt)),0) A4,NVL(min(decode(BOOKCD,'예규',cnt)),0) A5 ,NVL(min(decode(BOOKCD,'의회훈령',cnt)),0) A6 ,NVL(min(decode(BOOKCD,'훈령',cnt)),0) A7 ,
                    sum(cnt) TOTAL from (
        
        SELECT DISTINCT(COUNT(A.YY) OVER(PARTITION BY A.YY,B.BOOKCD)) CNT,YY AS "year",B.BOOKCD FROM (
        select distinct(substr(PROMULDT,0,4)) AS YY from tb_lm_rulehistory  where statecd in ('5000','6000','7000')
        ) A,DATEV B
        WHERE A.YY BETWEEN B.ST AND B.ET
        
        )CC
        group by cc.year
        ORDER BY CC.year DESC
	</select>
	
	<select id="bylawstatisticsD5" resultType="HashMap">
		<!-- 
		select decode(bookcd,'정관','규정','예규','예규',booksubcd) as bookcd,title,revcha,startdt,deptname,otherlaw,buchkyn,homeyn,prelawyn from tb_lm_rulehistory 
		where bookcd in ('사규','예규') and substr(startdt,0,4)=#{year}
		order by bookcode,obookid,revcha desc
		 -->
		with datev as(
		    select obookid,min(substr(PROMULDT,0,4)) AS ST,max(substr(DECODE(STATECD,'6000',PROMULDT,ENDDT),0,4)) AS ET
		    ,BOOKCD from tb_lm_rulehistory 
		    where  statecd in ('5000','6000','7000') group by obookid,BOOKCD
		) 
		select #{year} as YEARS, PROMULNO,BOOKCD,TITLE,CNT,SDT,DEPTNAME from tb_lm_rulehistory hh, (
		select distinct(max(bookid) OVER(PARTITION BY cc.obookid)) bookid , 
			(select count(*) from tb_lm_rulehistory where obookid=cc.obookid and substr(promuldt,0,4)=#{year}) cnt, 
			(select max(startdt) from tb_lm_rulehistory where obookid=cc.obookid and substr(promuldt,0,4)=#{year}) sdt
		from tb_lm_rulehistory cc,
		(  
		SELECT DISTINCT(COUNT(A.YY) OVER(PARTITION BY A.YY,B.BOOKCD)) CNT,YY AS "year",B.BOOKCD,obookid FROM (
		select distinct(substr(PROMULDT,0,4)) AS YY from tb_lm_rulehistory  where  statecd in ('5000','6000','7000')
		) A,DATEV B
		WHERE A.YY BETWEEN B.ST AND B.ET and a.yy=#{year}
		<if test="bookcd != null and bookcd != ''">
				and bookcd = #{bookcd}		
		</if>
		)dd where cc.obookid = dd.obookid
		) tt where hh.bookid=tt.bookid
	</select>
	
	<select id="bylawstatistics6" resultType="HashMap">
		SELECT DECODE (SORT_SEQ,'3', (SELECT DEPT_NM FROM TB_COM_ORGCHT  WHERE DEPT_NO = CC.UP_DEPT_NO), DEPT_NM) AS PDEPTNAME
		      ,CC.DEPT,CC.DEPT_NM AS DEPT_NAME
		      ,NVL(MIN(DECODE(BOOKCD,'조례',CNT)),0) A1
		      ,NVL(MIN(DECODE(BOOKCD,'규정',CNT)),0) A2
		      ,NVL(MIN(DECODE(BOOKCD,'규칙',CNT)),0) A3
		      ,NVL(MIN(DECODE(BOOKCD,'시행세칙',CNT)),0) A4
		      ,NVL(MIN(DECODE(BOOKCD,'예규',CNT)),0) A5
		      ,NVL(MIN(DECODE(BOOKCD,'의회훈령',CNT)),0) A6
		      ,NVL(MIN(DECODE(BOOKCD,'훈령',CNT)),0) A7 
		      ,SUM(CNT) TOTAL
		FROM (
		    SELECT * FROM (
		        SELECT DISTINCT(COUNT(BOOKID) OVER(PARTITION BY DEPT,BOOKCD)) AS CNT ,BOOKCD,DEPT,DEPT_NM,SORT_SEQ,UP_DEPT_NO  FROM TB_LM_RULEHISTORY A,TB_COM_ORGCHT B WHERE A.DEPT=B.DEPT_NO AND STATECD='5000'
		    ) AA
		)CC
		GROUP BY CC.DEPT,CC.DEPT_NM,CC.SORT_SEQ,CC.UP_DEPT_NO
		ORDER BY CC.SORT_SEQ ASC<!-- , CC.DEPT,CC.DEPT_NM DESC -->
	</select>
	
	<select id="bylawstatisticsD6" resultType="HashMap">
		select 
        DEPT_NM as PDEPTNAME,
        DEPT_NM as DEPT_NAME, BOOKCD,TITLE,REVCHA,STARTDT,DEPTNAME,OTHERLAW,BUCHKYN,HOMEYN,PRELAWYN from tb_lm_rulehistory a,TB_COM_ORGCHT b 
        where a.dept=b.DEPT_NO 
        <if test="dept != null and dept != ''"> 
        and dept=#{dept} 
        </if>
        <if test="bookcd != null and bookcd != ''">
				and bookcd = #{bookcd}		
		</if>
        and statecd='5000'
        order by pdeptname,bookcode,obookid,revcha desc
	</select>
	
	<select id="bylawstatistics7" resultType="HashMap">
		select BOOKCODE,BOOKCD,TITLE,REVCD,STARTDT,PROMULDT,PROMULNO,DEPTNAME from tb_lm_rulehistory where statecd='5000' 
		ORDER BY TITLE 
	</select>
	
	<select id="bylawstatistics10" resultType="HashMap">
		SELECT DEPTNAME,MAX(NVL(DECODE(REVCD,'개정',CNT),0)) AS M1,MAX(NVL(DECODE(REVCD,'제정',CNT),0)) AS M2,MAX(NVL(DECODE(REVCD,'폐지',CNT),0)) AS M3,SUM(CNT) AS TOTAL FROM
		(
			SELECT DISTINCT(COUNT(BOOKID) OVER(PARTITION BY SUBSTR(DEPTNAME,0,4),DECODE(REVCD,'전부개정','개정',REVCD))) AS CNT,DEPTNAME,DECODE(REVCD,'전부개정','개정',REVCD) as REVCD FROM TB_LM_RULEHISTORY 
			WHERE STATECD IN (SELECT STATEID FROM TB_LM_STATE WHERE STATECD IN ('현행','폐지','연혁'))
			and bookcd not in ('업무지시','업무매뉴얼')
		)
		GROUP BY DEPTNAME
		ORDER BY DEPTNAME DESC
	</select>
	
	<select id="bylawstatisticsD10" resultType="HashMap">
		select TITLE,PROMULDT,STARTDT,MAINPITH,REVCD ,DECODE(REVCD,'0','제정',REVCHA||'차') AS REVNAME,BOOKCODE,TITLE
		,(SELECT TITLE FROM TB_LM_RULECAT WHERE CATID =(SELECT PCATID FROM TB_LM_RULECAT WHERE CATID =a.CATID)) AS  titles  from tb_lm_rulehistory a
		where 1=1
		<if test="deptname != null and deptname != ''">
			and DEPTNAME=#{deptname} and STATECD IN (SELECT STATEID FROM TB_LM_STATE WHERE STATECD IN ('현행','폐지','연혁'))
		</if>
		<if test="revcd != null and revcd != ''">
				<if test='revcd == "R"'> 
					and revcd in ('개정','전부개정')
				</if>
				<if test='revcd == "N"'> 
					and revcd = '제정'
				</if>
				<if test='revcd == "C"'> 
					and revcd = '폐지'
				</if>
		</if>
		and STATECD IN (SELECT STATEID FROM TB_LM_STATE WHERE STATECD IN ('현행','폐지','연혁'))
		order by bookcode asc,promuldt desc
	</select>
	
	
	
	<select id="suitstatistics1" resultType="HashMap">
		/* statisticsSql.suitstatistics1 */
		WITH BASE AS (
		    SELECT A.LWS_MNG_NO
		         , TO_NUMBER(SUBSTR(A.FLGLW_YMD, 1, 4)) AS START_YEAR
		         , TO_NUMBER(SUBSTR(B.JDGM_CFMTN_YMD, 1, 4)) AS END_YEAR
		    FROM TB_LWS_MNG A LEFT JOIN TB_LWS_INST B ON A.LWS_MNG_NO = B.LWS_MNG_NO AND A.LAST_INST_CD = B.INST_CD
		    WHERE 1=1
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    <if test="schType != null and schType != ''">
		      AND A.LWS_UP_TYPE_CD = #{schType}
		    </if>
		),
		BASE2 AS (
		    SELECT TO_NUMBER(SUBSTR(A.JDGM_CFMTN_YMD, 1, 4)) AS END_YEAR
		         , COUNT(CASE WHEN C.CD_NM LIKE '승소%' THEN 1 END) AS WIN_CNT
		         , COUNT(CASE WHEN C.CD_NM LIKE '패소%' THEN 1 END) AS LOS_CNT
		         , COUNT(CASE WHEN C.CD_NM NOT LIKE '승소%' AND C.CD_NM NOT LIKE '패소%' THEN 1 END) AS ETC_CNT
		    FROM TB_LWS_INST A, TB_LWS_MNG B, TB_COM_CD C
		    WHERE A.JDGM_UP_TYPE_CD = C.CD_MNG_NO
		      AND A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND B.LAST_INST_CD = A.INST_CD
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.JDGM_CFMTN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.JDGM_CFMTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.JDGM_CFMTN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.JDGM_CFMTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    <if test="schType != null and schType != ''">
		      AND B.LWS_UP_TYPE_CD = #{schType}
		    </if>
		    GROUP BY TO_NUMBER(SUBSTR(A.JDGM_CFMTN_YMD, 1, 4))
		),
		YEARS AS (
		    SELECT (TO_CHAR(SYSDATE, 'YYYY')+1)-LEVEL AS TARGET_YEAR
		    FROM DUAL
		    CONNECT BY LEVEL <![CDATA[<=]]> 15
		)
		SELECT Y.TARGET_YEAR,
		       (COUNT(CASE WHEN B.START_YEAR = Y.TARGET_YEAR THEN 1 END) + COUNT(CASE WHEN B.START_YEAR <![CDATA[<]]> Y.TARGET_YEAR AND (B.END_YEAR IS NULL OR B.END_YEAR <![CDATA[>=]]> Y.TARGET_YEAR) THEN 1 END)) AS TOTAL,
		       COUNT(CASE WHEN B.START_YEAR = Y.TARGET_YEAR THEN 1 END) AS NEW_CASES,
		       COUNT(CASE WHEN B.START_YEAR <![CDATA[<]]> Y.TARGET_YEAR AND (B.END_YEAR IS NULL OR B.END_YEAR <![CDATA[>=]]> Y.TARGET_YEAR) THEN 1 END) AS CARRIED_OVER_CASES,
		       COUNT(CASE WHEN B.START_YEAR <![CDATA[<=]]> Y.TARGET_YEAR AND (B.END_YEAR IS NULL OR B.END_YEAR <![CDATA[>]]> Y.TARGET_YEAR) THEN 1 END) AS IN_PROGRESS_CASES,
		       COUNT(CASE WHEN B.END_YEAR = Y.TARGET_YEAR THEN 1 END) AS CLOSED_CASES,
		       (SELECT C.WIN_CNT FROM BASE2 C WHERE C.END_YEAR = Y.TARGET_YEAR) AS WIN_CNT,
		       (SELECT C.LOS_CNT FROM BASE2 C WHERE C.END_YEAR = Y.TARGET_YEAR) AS LOS_CNT,
		       (SELECT C.ETC_CNT FROM BASE2 C WHERE C.END_YEAR = Y.TARGET_YEAR) AS ETC_CNT,
		       ROUND((SELECT (C.WIN_CNT/(C.WIN_CNT+C.LOS_CNT)*100) FROM BASE2 C WHERE C.END_YEAR = Y.TARGET_YEAR)) AS WIN_RT
		FROM YEARS Y LEFT JOIN BASE B ON B.START_YEAR <![CDATA[<=]]> Y.TARGET_YEAR
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR >= SUBSTR(#{txtStartDate}, 0, 4)
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR <= SUBSTR(#{txtEndDate}, 0, 4)
		]]>
		</if>
		GROUP BY Y.TARGET_YEAR
		ORDER BY Y.TARGET_YEAR DESC
	</select>
	
	<select id="suitstatistics2" resultType="HashMap">
		/* statisticsSql.suitstatistics2 */
		SELECT *
		FROM (
		    SELECT A.LWS_UP_TYPE_NM
		         , A.LWS_LWR_TYPE_NM
		         , A.CNT
		         , ROUND((A.CNT/B.CNT)*100, 1) AS RT
		    FROM (
		        SELECT (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		             , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO =A. LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		             , COUNT(A.LWS_MNG_NO) AS CNT
		        FROM TB_LWS_MNG A
		        WHERE DECODE(A.TRMN_YN, '', 'N', A.TRMN_YN) = 'N'
		        <if test="txtStartDate != null and txtStartDate != ''">
		        <![CDATA[
		          AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		        ]]>
		        </if>
		        <if test="txtEndDate != null and txtEndDate != ''">
		        <![CDATA[
		          AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		        ]]>
		        </if>
		        GROUP BY LWS_UP_TYPE_CD, LWS_LWR_TYPE_CD
		    ) A,
		    (
		        SELECT (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		             , COUNT(A.LWS_MNG_NO) AS CNT
		        FROM TB_LWS_MNG A
		        WHERE DECODE(A.TRMN_YN, '', 'N', A.TRMN_YN) = 'N'
		        <if test="txtStartDate != null and txtStartDate != ''">
		        <![CDATA[
		          AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		        ]]>
		        </if>
		        <if test="txtEndDate != null and txtEndDate != ''">
		        <![CDATA[
		          AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		        ]]>
		        </if>
		        GROUP BY LWS_UP_TYPE_CD
		    ) B
		    WHERE A.LWS_UP_TYPE_NM = B.LWS_UP_TYPE_NM
		    UNION ALL
		    SELECT '총 계' AS LWS_UP_TYPE_NM
		         , ''      AS LWS_LWR_TYPE_NM
		         , COUNT(*) AS CNT
		         , 100 AS RT
		    FROM TB_LWS_MNG A
		    WHERE DECODE(A.TRMN_YN, '', 'N', A.TRMN_YN) = 'N'
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		) A
		ORDER BY CASE WHEN A.LWS_UP_TYPE_NM = '총 계' THEN 1 END, A.LWS_UP_TYPE_NM, A.LWS_LWR_TYPE_NM
	</select>
	
	<select id="suitstatistics3" resultType="HashMap">
		/* statisticsSql.suitstatistics3 */
		SELECT *
		FROM (
		    SELECT 9999 AS START_YEAR
		         , '계' AS LWS_LWR_TYPE_NM
		         , COUNT(*) AS LOS_CNT
		    FROM TB_LWS_MNG A, TB_LWS_INST B
		    WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND A.LAST_INST_CD = B.INST_CD
		      AND B.JDGM_UP_TYPE_CD IN (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_NM LIKE '패소%' AND Z.USE_YN = 'Y')
		      <if test="txtStartDate != null and txtStartDate != ''">
		      <![CDATA[
		        AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		      ]]>
		      </if>
		      <if test="txtEndDate != null and txtEndDate != ''">
		      <![CDATA[
		        AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		      ]]>
		      </if>
		      <if test="schType1 != null and schType1 != ''">
		        <if test='schType1 != "선택"'>
		        AND A.LWS_UP_TYPE_CD = #{schType1}
		        </if>
		      </if>
		      <if test="schType2 != null and schType2 != ''">
		        <if test='schType2 != "선택"'>
		        AND A.LWS_LWR_TYPE_CD = #{schType2}
		        </if>
		      </if>
		    UNION ALL
		    SELECT TO_NUMBER(SUBSTR(A.FLGLW_YMD, 1, 4)) AS START_YEAR
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		         , COUNT(B.JDGM_UP_TYPE_CD) AS LOS_CNT
		    FROM TB_LWS_MNG A, TB_LWS_INST B
		    WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND A.LAST_INST_CD = B.INST_CD
		      AND B.JDGM_UP_TYPE_CD IN (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_NM LIKE '패소%' AND Z.USE_YN = 'Y')
		      <if test="txtStartDate != null and txtStartDate != ''">
		      <![CDATA[
		        AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		      ]]>
		      </if>
		      <if test="txtEndDate != null and txtEndDate != ''">
		      <![CDATA[
		        AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		      ]]>
		      </if>
		      <if test="schType1 != null and schType1 != ''">
		        <if test='schType1 != "선택"'>
		        AND A.LWS_UP_TYPE_CD = #{schType1}
		        </if>
		      </if>
		      <if test="schType2 != null and schType2 != ''">
		        <if test='schType2 != "선택"'>
		        AND A.LWS_LWR_TYPE_CD = #{schType2}
		        </if>
		      </if>
		    GROUP BY TO_NUMBER(SUBSTR(A.FLGLW_YMD, 1, 4)), A.LWS_LWR_TYPE_CD
		)
		ORDER BY START_YEAR DESC, LWS_LWR_TYPE_NM
	</select>
	
	<select id="suitstatistics4" resultType="HashMap">
		/* statisticsSql.suitstatistics4 */
		WITH YEARS AS (
		    SELECT (TO_CHAR(SYSDATE, 'YYYY')+1)-LEVEL AS TARGET_YEAR
		    FROM DUAL
		    CONNECT BY LEVEL <![CDATA[<=]]> 10
		),
		BASE AS (
		    SELECT SUBSTR(JDGM_CFMTN_YMD, 0, 4) AS YEARS
		         , COUNT(A.LWS_MNG_NO) AS CASE_CNT
		         , FLOOR(SUM(JDGM_AMT)/1000000) AS TOTAL_AMT
		    FROM TB_LWS_MNG A, TB_LWS_INST B
		    WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND A.LAST_INST_CD = B.INST_CD
		      AND B.JDGM_AMT != 0
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.JDGM_CFMTN_YMD) = 1 THEN TO_CHAR(TO_DATE(B.JDGM_CFMTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.JDGM_CFMTN_YMD) = 1 THEN TO_CHAR(TO_DATE(B.JDGM_CFMTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY SUBSTR(JDGM_CFMTN_YMD, 0, 4)
		)
		SELECT Y.TARGET_YEAR
		     , NVL(B.CASE_CNT, 0) AS CASE_CNT
		     , NVL(B.TOTAL_AMT, 0) AS TOTAL_AMT
		FROM YEARS Y LEFT JOIN BASE B ON B.YEARS = Y.TARGET_YEAR
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR >= SUBSTR(#{txtStartDate}, 0, 4)
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR <= SUBSTR(#{txtEndDate}, 0, 4)
		]]>
		</if>
		UNION ALL
		SELECT 9999 AS TARGET_YEAR
		    , SUM(B.CASE_CNT) AS CASE_CNT
		    , SUM(B.TOTAL_AMT) AS TOTAL_AMT
		FROM BASE B
	</select>
	
	<select id="suitstatistics5" resultType="HashMap">
		/* statisticsSql.suitstatistics5 */
		SELECT DISTINCT A.LWS_MNG_NO
		     , SUBSTR(A.FLGLW_YMD, 0, 4) AS YEAR
		     , A.LWS_INCDNT_NM
		     , B.LWS_EQVL
		FROM TB_LWS_MNG A, TB_LWS_INST B
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND B.INCDNT_SE_CD = 'B'
		  AND DECODE(A.TRMN_YN, '', 'N', A.TRMN_YN) = 'N'
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		<if test="schType1 != null and schType1 != ''">
		  AND A.LWS_UP_TYPE_CD = #{schType1}
		</if>
		<if test="schType2 != null and schType2 != ''">
		  AND A.LWS_LWR_TYPE_CD = #{schType2}
		</if>
		ORDER BY SUBSTR(A.FLGLW_YMD, 0, 4) DESC
	</select>
	
	<select id="suitstatistics6_1" resultType="HashMap">
		/* statisticsSql.suitstatistics6_1 */
		SELECT COUNT(CASE WHEN YEARS <![CDATA[<=]]> (TO_CHAR(SYSDATE, 'YYYY')-9) THEN 1 END) AS YEAR0
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-8) THEN 1 END) AS YEAR1
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-7) THEN 1 END) AS YEAR2
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-7) THEN 1 END) AS YEAR2
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-6) THEN 1 END) AS YEAR3
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-5) THEN 1 END) AS YEAR4
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-4) THEN 1 END) AS YEAR5
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-3) THEN 1 END) AS YEAR6
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-2) THEN 1 END) AS YEAR7
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-1) THEN 1 END) AS YEAR8
		     , COUNT(CASE WHEN YEARS =  (TO_CHAR(SYSDATE, 'YYYY')-0) THEN 1 END) AS YEAR9
		FROM (
		    SELECT SUBSTR(A.FLGLW_YMD, 1, 4) AS YEARS
		    FROM TB_LWS_MNG A
		    WHERE A.LWS_MNG_NO IN (
		        SELECT Z.LWS_MNG_NO FROM TB_LWS_INST Z WHERE Z.INCDNT_SE_CD = 'B'
		    )
		)
	</select>
	<select id="suitstatistics6_2" resultType="HashMap">
		/* statisticsSql.suitstatistics6_2 */
		SELECT COUNT(CASE WHEN COST_GIVE_YN = 'N' THEN 1 END) AS NOT_GIVE,
		       COUNT(CASE WHEN COST_AMT <![CDATA[<=]]> 10000000 THEN 1 END) AS GBN1,
		       COUNT(CASE WHEN COST_AMT <![CDATA[>]]> 10000000 AND COST_AMT <![CDATA[<=]]> 15000000 THEN 1 END) AS GBN2,
		       COUNT(CASE WHEN COST_AMT <![CDATA[>]]> 15000000 AND COST_AMT <![CDATA[<=]]> 20000000 THEN 1 END) AS GBN3,
		       COUNT(CASE WHEN COST_AMT <![CDATA[>]]> 20000000 AND COST_AMT <![CDATA[<=]]> 25000000 THEN 1 END) AS GBN4,
		       COUNT(CASE WHEN COST_AMT <![CDATA[>]]> 25000000 AND COST_AMT <![CDATA[<=]]> 30000000 THEN 1 END) AS GBN5
		FROM (
		    SELECT CASE WHEN B.OTST_AMT = '' OR B.OTST_AMT IS NULL THEN C.PRCS_AMT
		                ELSE B.OTST_AMT
		           END COST_AMT,
		           CASE WHEN B.OTST_AMT = '' OR B.OTST_AMT IS NULL THEN C.CST_PRCS_CMPTN_YN
		                ELSE B.GIVE_YN
		           END COST_GIVE_YN
		    FROM TB_LWS_INST A, TB_LWS_AGT B, TB_LWS_CST C
		    WHERE A.INCDNT_SE_CD = 'B'
		      AND A.INST_MNG_NO = B.INST_MNG_NO
		      AND A.INST_MNG_NO = C.INST_MNG_NO
		      AND B.AGT_MNG_NO = C.CST_TRGT_MNG_NO
		      AND C.CST_SE_CD = '10001101'
		)
	</select>
	<select id="suitstatistics6_3" resultType="HashMap">
		/* statisticsSql.suitstatistics6_3 */
		SELECT COUNT(A.LWS_MNG_NO) AS TOTAL
		     , COUNT(CASE WHEN B.JDGM_UP_TYPE_CD IS NOT NULL THEN 1 END) AS END_CNT
		     , COUNT(CASE WHEN C.CD_NM LIKE '승소%' THEN 1 END) AS WIN_CNT
		     , COUNT(CASE WHEN C.CD_NM LIKE '패소%' THEN 1 END) AS LOS_CNT
		     , COUNT(CASE WHEN C.CD_NM NOT LIKE '승소%' AND C.CD_NM NOT LIKE '패소%' THEN 1 END) AS ETC_CNT
		     , COUNT(CASE WHEN B.JDGM_UP_TYPE_CD IS NULL THEN 1 END) AS RUN_CNT
		FROM TB_LWS_MNG A, TB_LWS_INST B LEFT OUTER JOIN TB_COM_CD C ON B.JDGM_UP_TYPE_CD = C.CD_MNG_NO
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.LWS_MNG_NO IN (
		    SELECT Z.LWS_MNG_NO FROM TB_LWS_INST Z WHERE Z.INCDNT_SE_CD = 'B'
		  )
		  AND A.LAST_INST_CD = B.INST_CD
	</select>
	
	<select id="suitstatistics7" resultType="HashMap">
		/* statisticsSql.suitstatistics7 */
		SELECT (SELECT CASE WHEN Z.CD_NM = '민사집행' THEN '민집' ELSE SUBSTR(Z.CD_NM, 0, 2) END CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = L.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') ||
		                    ' ' || REPLACE(L.LWS_NO, '@', '') AS LWS_NO
		     , A.LWS_INCDNT_NM
		     , A.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , SUBSTR(A.FLGLW_YMD, 0, 4) || '(' || 
		       CASE WHEN D.OTST_AMT = '' OR D.OTST_AMT IS NULL THEN E.PRCS_AMT||')'
		            ELSE D.OTST_AMT||')'
		       END COST_AMT
		     , WON.LWS_CNCPR_NM AS WONGO
		     , PI.LWS_CNCPR_NM  AS PIGO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LAST_INST_CD AND Z.USE_YN = 'Y') || ' ' ||
		       (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = JDGM_UP_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_UP_TYPE_NM
		FROM TB_LWS_MNG A
		     LEFT JOIN TB_LWS_INST B ON B.LWS_MNG_NO = A.LWS_MNG_NO AND B.INST_CD = A.LAST_INST_CD
		     LEFT JOIN TB_COM_CD CCD2 ON CCD2.CD_MNG_NO = A.LAST_INST_CD AND CCD2.USE_YN = 'Y'
		     LEFT JOIN TB_COM_CD C ON C.CD_MNG_NO = B.JDGM_UP_TYPE_CD
		     LEFT JOIN TB_LWS_AGT D ON D.INST_MNG_NO = B.INST_MNG_NO
		     LEFT JOIN TB_LWS_CST E ON E.INST_MNG_NO = B.INST_MNG_NO AND E.CST_SE_CD = '10001101'
		     LEFT JOIN (SELECT Z.INST_MNG_NO, LISTAGG(Z.LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY Z.LWS_CNCPR_NM) AS LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.LWS_CNCPR_SE = 'WON' GROUP BY Z.INST_MNG_NO) WON ON WON.INST_MNG_NO = B.INST_MNG_NO
		     LEFT JOIN (SELECT Z.INST_MNG_NO, LISTAGG(Z.LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY Z.LWS_CNCPR_NM) AS LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.LWS_CNCPR_SE = 'PI' GROUP BY Z.INST_MNG_NO) PI ON PI.INST_MNG_NO = B.INST_MNG_NO
		WHERE A.LWS_MNG_NO IN (
		  SELECT Z.LWS_MNG_NO FROM TB_LWS_INST Z WHERE Z.INCDNT_SE_CD = 'B'
		)
		  AND A.TRMN_YN = 'Y'
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		<if test="schType != null and schType != ''">
		  AND B.JDGM_UP_TYPE_CD = #{schType}
		</if>
		ORDER BY A.LWS_NO
	</select>
	
	<select id="suitstatistics8" resultType="HashMap">
		/* statisticsSql.suitstatistics8 */
		SELECT SUBSTR(A.DLBR_BGNG_YMD, 0, 4) AS YEARS, A.DLBR_AGND_NM, A.DLBR_DCS_CN
		     , COUNT(B.DLBR_MBCMT_MNG_NO) AS TOTAL
		     , COUNT(CASE WHEN DLBR_RSLT_NM != 'A' THEN 1 END) AS ACNT
		     , COUNT(CASE WHEN DLBR_RSLT_NM = 'A' THEN 1 END) AS BCNT
		     , (COUNT(CASE WHEN DLBR_RSLT_NM != 'A' THEN 1 END)/COUNT(B.DLBR_MBCMT_MNG_NO))*100.0 AS CCNT
		FROM TB_LWS_DLBR A, TB_LWS_DLBR_MBCMT B
		WHERE A.LWS_DLBR_MNG_NO = B.LWS_DLBR_MNG_NO
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.DLBR_BGNG_YMD) = 1 THEN TO_CHAR(TO_DATE(A.DLBR_BGNG_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.DLBR_BGNG_YMD) = 1 THEN TO_CHAR(TO_DATE(A.DLBR_BGNG_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		GROUP BY A.DLBR_BGNG_YMD, A.DLBR_AGND_NM, A.DLBR_DCS_CN
	</select>
	
	<select id="suitstatistics9" resultType="HashMap">
		/* statisticsSql.suitstatistics9 */
		SELECT A.YEARS
		     , SUM(A.BND_AMT) AS BND_AMT
		     , SUM(A.GIVE_RTRVL_AMT) AS GIVE_RTRVL_AMT
		     , ROUND((SUM(A.GIVE_RTRVL_AMT)/SUM(A.BND_AMT))*100) AS RETURN_RT
		     , SUM(A.BND_BLNC) AS BND_BLNC
		     , ROUND((SUM(A.BND_BLNC)/SUM(A.BND_AMT))*100) AS NRETURN_RT
		FROM (
		    SELECT SUBSTR(
		            CASE WHEN A.BND_PBLCN_YMD IS NULL OR A.BND_PBLCN_YMD = '' THEN '0000'
		                 ELSE A.BND_PBLCN_YMD
		            END, 0, 4
		           ) AS YEARS
		         ,A.BND_AMT AS BND_AMT
		         ,NVL(B.GIVE_RTRVL_AMT, 0) AS GIVE_RTRVL_AMT
		         ,NVL((A.BND_AMT-NVL(B.GIVE_RTRVL_AMT, 0)), 0) AS BND_BLNC
		    FROM TB_LWS_BND A LEFT OUTER JOIN (
		            SELECT SUM(GIVE_RTRVL_AMT) AS GIVE_RTRVL_AMT, BND_MNG_NO
		            FROM TB_LWS_BND_RTRVL
		            GROUP BY BND_MNG_NO
		        ) B ON A.BND_MNG_NO = B.BND_MNG_NO
		    WHERE 1=1
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.BND_PBLCN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.BND_PBLCN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.BND_PBLCN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.BND_PBLCN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		) A
		GROUP BY A.YEARS
		UNION ALL
		SELECT A.YEARS
		     , SUM(A.BND_AMT) AS BND_AMT
		     , SUM(A.GIVE_RTRVL_AMT) AS GIVE_RTRVL_AMT
		     , ROUND((SUM(A.GIVE_RTRVL_AMT)/SUM(A.BND_AMT))*100) AS RETURN_RT
		     , SUM(A.BND_BLNC) AS BND_BLNC
		     , ROUND((SUM(A.BND_BLNC)/SUM(A.BND_AMT))*100) AS NRETURN_RT
		FROM (
		    SELECT 'TOTAL' AS YEARS
		         , A.BND_AMT AS BND_AMT
		         , NVL(B.GIVE_RTRVL_AMT, 0) AS GIVE_RTRVL_AMT
		         , NVL((A.BND_AMT-NVL(B.GIVE_RTRVL_AMT, 0)), 0) AS BND_BLNC
		    FROM TB_LWS_BND A LEFT OUTER JOIN (
		            SELECT SUM(GIVE_RTRVL_AMT) AS GIVE_RTRVL_AMT, BND_MNG_NO
		            FROM TB_LWS_BND_RTRVL
		            GROUP BY BND_MNG_NO
		        ) B ON A.BND_MNG_NO = B.BND_MNG_NO
		    WHERE 1=1
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.BND_PBLCN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.BND_PBLCN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.BND_PBLCN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.BND_PBLCN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		) A
		GROUP BY A.YEARS
		ORDER BY YEARS DESC
	</select>
	
	<select id="suitstatistics10_1" resultType="HashMap">
		/* statisticsSql.suitstatistics10_1 */
		WITH YEARS AS (
		  SELECT (TO_CHAR(SYSDATE, 'YYYY')+1)-LEVEL AS TARGET_YEAR
		  FROM DUAL
		  CONNECT BY LEVEL <![CDATA[<=]]> 10
		),
		BASE AS (
		    SELECT SUBSTR(JDGM_CFMTN_YMD, 0, 4) AS YEARS
		         , COUNT(A.LWS_MNG_NO) AS CASE_CNT
		    FROM TB_LWS_MNG A, TB_LWS_INST B
		    WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND A.LAST_INST_CD = B.INST_CD
		      AND A.LWS_UP_TYPE_CD = '10041009'
		    GROUP BY SUBSTR(JDGM_CFMTN_YMD, 0, 4)
		)
		SELECT SUM(CASE WHEN Y.TARGET_YEAR <![CDATA[<=]]> (TO_CHAR(SYSDATE, 'YYYY')-9) THEN NVL(B.CASE_CNT, 0) END) AS YEAR0
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-8) THEN NVL(B.CASE_CNT, 0) END) AS YEAR1
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-7) THEN NVL(B.CASE_CNT, 0) END) AS YEAR2
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-7) THEN NVL(B.CASE_CNT, 0) END) AS YEAR2
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-6) THEN NVL(B.CASE_CNT, 0) END) AS YEAR3
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-5) THEN NVL(B.CASE_CNT, 0) END) AS YEAR4
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-4) THEN NVL(B.CASE_CNT, 0) END) AS YEAR5
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-3) THEN NVL(B.CASE_CNT, 0) END) AS YEAR6
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-2) THEN NVL(B.CASE_CNT, 0) END) AS YEAR7
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-1) THEN NVL(B.CASE_CNT, 0) END) AS YEAR8
		     , SUM(CASE WHEN Y.TARGET_YEAR =  (TO_CHAR(SYSDATE, 'YYYY')-0) THEN NVL(B.CASE_CNT, 0) END) AS YEAR9
		FROM YEARS Y LEFT JOIN BASE B ON B.YEARS = Y.TARGET_YEAR
		ORDER BY Y.TARGET_YEAR
	</select>
	
	<select id="suitstatistics10_2" resultType="HashMap">
		/* statisticsSql.suitstatistics10_2 */
		SELECT B.LWS_NO || ' ' || B.LWS_INCDNT_NM AS LWS_INCDNT_NM
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = C.JDGM_UP_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_UP_TYPE_NM
		     , WON.LWS_CNCPR_NM AS WONGO
		     , PI.LWS_CNCPR_NM  AS PIGO
		     , CASE WHEN AGT.OTST_AMT = '' OR AGT.OTST_AMT IS NULL THEN CST1.PRCS_AMT
		            ELSE AGT.OTST_AMT
		       END COST_AMT1
		     , CASE WHEN AGT.SCS_PAY_AMT = '' OR AGT.SCS_PAY_AMT IS NULL THEN CST2.PRCS_AMT
		            ELSE AGT.SCS_PAY_AMT
		       END COST_AMT2
		FROM TB_LWS_MNG   B
		   , (SELECT Z.INST_MNG_NO, LISTAGG(Z.LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY Z.LWS_CNCPR_NM) AS LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.LWS_CNCPR_SE = 'WON' GROUP BY Z.INST_MNG_NO) WON
		   , (SELECT Z.INST_MNG_NO, LISTAGG(Z.LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY Z.LWS_CNCPR_NM) AS LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.LWS_CNCPR_SE = 'PI'  GROUP BY Z.INST_MNG_NO) PI
		   , TB_LWS_INST  C
		     LEFT OUTER JOIN TB_LWS_AGT AGT ON C.INST_MNG_NO = AGT.INST_MNG_NO
		     LEFT OUTER JOIN TB_LWS_CST CST1 ON C.INST_MNG_NO = CST1.INST_MNG_NO AND CST1.CST_SE_CD = 10001101
		     LEFT OUTER JOIN TB_LWS_CST CST2 ON C.INST_MNG_NO = CST2.INST_MNG_NO AND CST2.CST_SE_CD = 10001102
		WHERE B.LWS_MNG_NO = C.LWS_MNG_NO
		  AND B.LAST_INST_CD = C.INST_CD
		  AND WON.INST_MNG_NO = C.INST_MNG_NO
		  AND PI.INST_MNG_NO = C.INST_MNG_NO
		  AND (WON.LWS_CNCPR_NM LIKE '%시장%' OR PI.LWS_CNCPR_NM LIKE '%시장%')
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(B.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(B.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(B.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(B.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		<if test="schType != null and schType != ''">
		  AND B.LWS_UP_TYPE_CD = #{schType}
		</if>
	</select>
	
	<select id="suitstatistics11" resultType="HashMap">
		/* statisticsSql.suitstatistics11 */
		WITH CNCPR AS (
		    SELECT INST_MNG_NO,
		           LWS_CNCPR_SE,
		           LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		TKCG AS (
		    SELECT A.INST_MNG_NO,
		           LISTAGG(B.EMP_NM, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS TKCG_EMP_NM
		    FROM TB_LWS_TKCG A
		    JOIN TB_COM_HRIS B ON A.TKCG_EMP_NO = B.EMP_NO
		    GROUP BY A.INST_MNG_NO
		),
		AGT AS (
		    SELECT INST_MNG_NO,
		           LISTAGG(JDAF_CORP_NM || ' ' || LWYR_NM, ',') WITHIN GROUP (ORDER BY LWYR_NM) AS LWYR_NM
		    FROM TB_LWS_AGT
		    GROUP BY INST_MNG_NO
		),
		COM_CD AS (
		    SELECT CD_MNG_NO, CD_NM
		    FROM TB_COM_CD
		    WHERE USE_YN = 'Y'
		)
		SELECT
		    TK.TKCG_EMP_NM,
		    CASE B.INCDNT_SE_CD
		        WHEN 'A' THEN '일반'
		        WHEN 'B' THEN '주요소송'
		        WHEN 'C' THEN '특별관리소송'
		    END AS INCDNT_SE,
		    UPTYPE.CD_NM AS LWS_UP_TYPE_NM,
		    A.LWS_NO,
		    CT.CD_NM AS CT_NM,
		    REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO,
		    A.LWS_INCDNT_NM,
		    WON.LWS_CNCPR_NM AS WONGO,
		    PI.LWS_CNCPR_NM AS PIGO,
		    A.FLGLW_YMD,
		    A.SPRVSN_DEPT_NM,
		    A.SPRVSN_EMP_NM,
		    AG.LWYR_NM,
		    A.INCDNT_OTLN
		FROM TB_LWS_MNG A
		     JOIN TB_LWS_INST B ON A.LWS_MNG_NO = B.LWS_MNG_NO AND A.LAST_INST_CD = B.INST_CD
		          LEFT JOIN TKCG TK ON B.INST_MNG_NO = TK.INST_MNG_NO
		          LEFT JOIN AGT AG ON B.INST_MNG_NO = AG.INST_MNG_NO
		          LEFT JOIN CNCPR WON ON B.INST_MNG_NO = WON.INST_MNG_NO AND WON.LWS_CNCPR_SE = 'WON'
		          LEFT JOIN CNCPR PI ON B.INST_MNG_NO = PI.INST_MNG_NO AND PI.LWS_CNCPR_SE = 'PI'
		          LEFT JOIN COM_CD UPTYPE ON A.LWS_UP_TYPE_CD = UPTYPE.CD_MNG_NO
		          LEFT JOIN COM_CD CT ON B.CT_CD = CT.CD_MNG_NO
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
	</select>
	
	<select id="suitstatistics12" resultType="HashMap">
		/* statisticsSql.suitstatistics12 */
		WITH CNCPR AS (
		    SELECT INST_MNG_NO,
		           LWS_CNCPR_SE,
		           LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		TKCG AS (
		    SELECT A.INST_MNG_NO,
		           LISTAGG(B.EMP_NM, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS TKCG_EMP_NM
		    FROM TB_LWS_TKCG A
		    JOIN TB_COM_HRIS B ON A.TKCG_EMP_NO = B.EMP_NO
		    GROUP BY A.INST_MNG_NO
		),
		AGT AS (
		    SELECT INST_MNG_NO,
		           LISTAGG(JDAF_CORP_NM || ' ' || LWYR_NM, ',') WITHIN GROUP (ORDER BY LWYR_NM) AS LWYR_NM
		    FROM TB_LWS_AGT
		    GROUP BY INST_MNG_NO
		),
		COM_CD AS (
		    SELECT CD_MNG_NO, CD_NM
		    FROM TB_COM_CD
		    WHERE USE_YN = 'Y'
		),
		RCPT_AGT AS (
		    SELECT ROWNUM AS RNUM
		         , INST_MNG_NO
		         , LWYR_NM
		         , JDAF_CORP_NM
		         , DLGT_YMD
		         , RFSL_RSN
		    FROM TB_LWS_AGT
		    WHERE RCPT_YN = 'N'
		    ORDER BY DLGT_YMD DESC
		)
		
		SELECT
		    TK.TKCG_EMP_NM,
		    CASE B.INCDNT_SE_CD
		        WHEN 'A' THEN '일반'
		        WHEN 'B' THEN '주요소송'
		        WHEN 'C' THEN '특별관리소송'
		    END AS INCDNT_SE,
		    UPTYPE.CD_NM AS LWS_UP_TYPE_NM,
		    A.LWS_NO,
		    CT.CD_NM AS CT_NM,
		    REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO,
		    A.LWS_INCDNT_NM,
		    WON.LWS_CNCPR_NM AS WONGO,
		    PI.LWS_CNCPR_NM AS PIGO,
		    A.FLGLW_YMD,
		    A.SPRVSN_DEPT_NM,
		    A.SPRVSN_EMP_NM,
		    AG.LWYR_NM,
		    A.INCDNT_OTLN
		    
		    , CASE WHEN RA.RNUM = 1 THEN RA.LWYR_NM END RCPT_N_LWYR_NM1
		    , CASE WHEN RA.RNUM = 1 THEN RA.JDAF_CORP_NM END RCPT_N_JDAF_CORP_NM1
		    , CASE WHEN RA.RNUM = 1 THEN RA.DLGT_YMD END RCPT_N_DLGT_YMD1
		    , CASE WHEN RA.RNUM = 1 THEN RA.RFSL_RSN END RCPT_N_RFSL_RSN1
		    
		    , CASE WHEN RA.RNUM = 2 THEN RA.LWYR_NM END RCPT_N_LWYR_NM2
		    , CASE WHEN RA.RNUM = 2 THEN RA.JDAF_CORP_NM END RCPT_N_JDAF_CORP_NM2
		    , CASE WHEN RA.RNUM = 2 THEN RA.DLGT_YMD END RCPT_N_DLGT_YMD2
		    , CASE WHEN RA.RNUM = 2 THEN RA.RFSL_RSN END RCPT_N_RFSL_RSN2
		    
		FROM TB_LWS_MNG A
		     JOIN TB_LWS_INST B ON A.LWS_MNG_NO = B.LWS_MNG_NO AND A.LAST_INST_CD = B.INST_CD
		          LEFT JOIN TKCG TK ON B.INST_MNG_NO = TK.INST_MNG_NO
		          LEFT JOIN AGT AG ON B.INST_MNG_NO = AG.INST_MNG_NO
		          LEFT JOIN CNCPR WON ON B.INST_MNG_NO = WON.INST_MNG_NO AND WON.LWS_CNCPR_SE = 'WON'
		          LEFT JOIN CNCPR PI ON B.INST_MNG_NO = PI.INST_MNG_NO AND PI.LWS_CNCPR_SE = 'PI'
		          LEFT JOIN COM_CD UPTYPE ON A.LWS_UP_TYPE_CD = UPTYPE.CD_MNG_NO
		          LEFT JOIN COM_CD CT ON B.CT_CD = CT.CD_MNG_NO
		          LEFT JOIN RCPT_AGT RA ON B.INST_MNG_NO = RA.INST_MNG_NO
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
	</select>
	
	<select id="suitstatistics13" resultType="HashMap">
		/* statisticsSql.suitstatistics13 */
		WITH ROLE_USER AS (
		    SELECT EMP_NO
		         , MNGR_EMP_NM
		    FROM TB_COM_MNGR_AUTHRT
		    WHERE MNGR_AUTHRT_NM = 'C'
		),
		DATA AS (
		    SELECT COUNT(B.INST_MNG_NO) AS TOTAL_CNT
		         , D.TKCG_EMP_NO
		         , COUNT(CASE WHEN C.AGT_MNG_NO IS NOT NULL THEN 1 END) AS AGT_Y_CNT
		         , COUNT(CASE WHEN C.AGT_MNG_NO IS NULL THEN 1 END) AS AGT_N_CNT
		         , COUNT(CASE WHEN A.LWS_UP_TYPE_NM = '행정소송' THEN 1 END) AS A1
		         , COUNT(CASE WHEN A.LWS_UP_TYPE_NM = '민사소송' THEN 1 END) AS A2
		         , COUNT(CASE WHEN A.LWS_UP_TYPE_NM = '헌법소원' THEN 1 END) AS A3
		         , COUNT(CASE WHEN A.LWS_UP_TYPE_NM = '국가소송' THEN 1 END) AS A4
		         , COUNT(CASE WHEN A.LWS_UP_TYPE_NM = '직무관련사건' THEN 1 END) AS A5
		    FROM (
		            SELECT LWS_MNG_NO
		                 , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		            FROM TB_LWS_MNG A
		         ) A
		       , TB_LWS_INST B
		         LEFT OUTER JOIN TB_LWS_AGT C ON B.INST_MNG_NO = C.INST_MNG_NO
		       , TB_LWS_TKCG D
		    WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND B.INST_MNG_NO = D.INST_MNG_NO
		    GROUP BY D.TKCG_EMP_NO
		)
		SELECT A.MNGR_EMP_NM
		     , NVL(TOTAL_CNT, 0) AS TOTAL_CNT
		     , NVL(AGT_Y_CNT, 0) AS AGT_Y_CNT
		     , NVL(AGT_N_CNT, 0) AS AGT_N_CNT
		     , NVL(A1       , 0) AS A1
		     , NVL(A2       , 0) AS A2
		     , NVL(A3       , 0) AS A3
		     , NVL(A4       , 0) AS A4
		     , NVL(A5       , 0) AS A5
		FROM ROLE_USER A LEFT JOIN DATA B ON A.EMP_NO = B.TKCG_EMP_NO
		ORDER BY A.MNGR_EMP_NM
	</select>
	
	<select id="suitstatistics14" resultType="HashMap">
		/* statisticsSql.suitstatistics14 */
		WITH DATAS AS (
		    SELECT A.DEPT_NO
		         , COUNT(B.LWS_MNG_NO) AS TOTAL_CNT
		         , COUNT(CASE WHEN C.AGT_MNG_NO IS NOT NULL THEN 1 END) AS AGT_Y_CNT
		         , COUNT(CASE WHEN C.AGT_MNG_NO IS NULL THEN 1 END) AS AGT_N_CNT
		    FROM TB_COM_ORGCHT A, TB_LWS_MNG B LEFT OUTER JOIN TB_LWS_AGT C ON B.LWS_MNG_NO = C.LWS_MNG_NO
		    WHERE A.DEPT_NO = B.SPRVSN_DEPT_NO
		    GROUP BY A.DEPT_NO
		)
		SELECT A.MANAGER_DEPT_NM AS DEPT_NM
		     , NVL(B.TOTAL_CNT, 0) AS TOTAL_CNT
		     , NVL(B.AGT_Y_CNT, 0) AS AGT_Y_CNT
		     , NVL(B.AGT_N_CNT, 0) AS AGT_N_CNT
		FROM TB_COM_ORGCHT A, DATAS B 
		WHERE A.DEPT_NO = B.DEPT_NO (+)
		ORDER BY SORT_SEQ
	</select>
	
	<select id="suitstatistics15" resultType="HashMap">
		/* statisticsSql.suitstatistics15 */
		SELECT A.LWS_NO
		     , A.LWS_INCDNT_NM
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		     , CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE A.FLGLW_YMD
		       END FLGLW_YMD
		     , CASE WHEN B.INCDNT_SE_CD = 'A' THEN '일반사건'
		            WHEN B.INCDNT_SE_CD = 'B' THEN '주요소송'
		            WHEN B.INCDNT_SE_CD = 'C' THEN '특별관리소송'
		       END INCDNT_SE_NM
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.INST_CD AND Z.USE_YN = 'Y') AS INST_NM
		     , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.CT_CD AND Z.USE_YN = 'Y') AS CT_NM
		     , TO_CHAR(B.LWS_EQVL , '999,999,999,999,999') AS LWS_EQVL
		     , CNCPR.LWS_CNCPR_NM AS LWS_CNCPR_NM
		     , C.LWYR_NM
		     
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.JDGM_UP_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_UP_TYPE_NM
		     /* 판결선고일자 */
		     , CASE WHEN IS_VALID_DATE(B.JDGM_ADJ_YMD) = 1 THEN TO_CHAR(TO_DATE(B.JDGM_ADJ_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE B.JDGM_ADJ_YMD
		       END JDGM_ADJ_YMD
		     /* 판결문송달일자 */
		     , CASE WHEN IS_VALID_DATE(B.RLNG_TMTL_YMD) = 1 THEN TO_CHAR(TO_DATE(B.RLNG_TMTL_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE B.RLNG_TMTL_YMD
		       END RLNG_TMTL_YMD
		     /* 판결확정일자 */
		     , CASE WHEN IS_VALID_DATE(B.JDGM_CFMTN_YMD) = 1 THEN TO_CHAR(TO_DATE(B.JDGM_CFMTN_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE B.JDGM_CFMTN_YMD
		       END JDGM_CFMTN_YMD
		     , TO_CHAR(B.JDGM_AMT , '999,999,999,999,999') AS JDGM_AMT          /* 판결금액 */
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B
		     LEFT OUTER JOIN (
		         SELECT INST_MNG_NO
		              , LISTAGG(JDAF_CORP_NM || ' ' || LWYR_NM, ',') WITHIN GROUP (ORDER BY LWYR_NM) AS LWYR_NM
		         FROM TB_LWS_AGT
		             GROUP BY INST_MNG_NO
		     ) C ON B.INST_MNG_NO = C.INST_MNG_NO
		     LEFT JOIN (
		         SELECT INST_MNG_NO
		              , LWS_CNCPR_SE
		              , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		         FROM TB_LWS_CNCPR
		         GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		     ) CNCPR ON B.INST_MNG_NO = CNCPR.INST_MNG_NO
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND (((A.LWS_SE = 'J' AND CNCPR.LWS_CNCPR_SE = 'PI') OR (A.LWS_SE = 'P' AND CNCPR.LWS_CNCPR_SE = 'WON'))  or CNCPR.LWS_CNCPR_SE is null)
		  <if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		ORDER BY A.LWS_MNG_NO, B.INST_CD
	</select>
	
	<select id="suitstatistics16" resultType="HashMap">
		/* statisticsSql.suitstatistics16 */
		SELECT *
		FROM (
		    SELECT '수임료' AS GBN
		         , A.GIVE_APLY_YMD
		         , A.APRV_YMD
		         , A.JDAF_CORP_NM || ' ' || A.LWYR_NM AS A_COL
		         , '40:기타' AS B_COL
		         , '' AS C_COL
		         , '' AS D_COL
		         , '10:계좌이체' AS E_COL
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = C.BANK_SE_NO) || ':' || C.BANK_NM AS F_COL
		         , C.DPSTR_NM AS G_COL
		         , C.ACTNO AS H_COL
		         , A.ACAP_AMT AS I_COL
		         , 0 AS J_COL
		    FROM TB_LWS_AGT A LEFT OUTER JOIN TB_COM_LWYR_BACNT C ON A.BACNT_MNG_NO = C.BACNT_MNG_NO
		      , TB_COM_LWYR B
		    WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
		      AND A.APRV_YN = 'Y'
		      AND A.GIVE_YN = 'N'
		    UNION ALL
		    SELECT '착수금' AS GBN
		         , A.GIVE_APLY_YMD
		         , A.APRV_YMD
		         , A.JDAF_CORP_NM || ' ' || A.LWYR_NM AS A_COL
		         , '40:기타' AS B_COL
		         , '' AS C_COL
		         , '' AS D_COL
		         , '10:계좌이체' AS E_COL
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = C.BANK_SE_NO) || ':' || C.BANK_NM AS F_COL
		         , C.DPSTR_NM AS G_COL
		         , C.ACTNO AS H_COL
		         , A.OTST_AMT AS I_COL
		         , 0 AS J_COL
		    FROM TB_LWS_AGT A LEFT OUTER JOIN TB_COM_LWYR_BACNT C ON A.BACNT_MNG_NO = C.BACNT_MNG_NO
		      , TB_COM_LWYR B
		    WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
		      AND A.APRV_YN = 'Y'
		      AND A.GIVE_YN = 'N'
		      UNION ALL
		    SELECT '성공보수' AS GBN
		         , A.GIVE_APLY_YMD
		         , A.APRV_YMD
		         , A.JDAF_CORP_NM || ' ' || A.LWYR_NM AS A_COL
		         , '40:기타' AS B_COL
		         , '' AS C_COL
		         , '' AS D_COL
		         , '10:계좌이체' AS E_COL
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = C.BANK_SE_NO) || ':' || C.BANK_NM AS F_COL
		         , C.DPSTR_NM AS G_COL
		         , C.ACTNO AS H_COL
		         , A.SCS_PAY_AMT AS I_COL
		         , 0 AS J_COL
		    FROM TB_LWS_AGT A LEFT OUTER JOIN TB_COM_LWYR_BACNT C ON A.BACNT_MNG_NO = C.BACNT_MNG_NO
		      , TB_COM_LWYR B
		    WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
		      AND A.APRV_YN = 'Y'
		      AND A.GIVE_YN = 'N'
		) A
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.GIVE_APLY_YMD) = 1 THEN TO_CHAR(TO_DATE(A.GIVE_APLY_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.GIVE_APLY_YMD) = 1 THEN TO_CHAR(TO_DATE(A.GIVE_APLY_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		ORDER BY A.GIVE_APLY_YMD ASC
	</select>
	
	<select id="suitstatistics17" resultType="HashMap">
		/* statisticsSql.suitstatistics17 */
		SELECT (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.CST_SE_CD AND Z.USE_YN = 'Y') AS GBN
		     , A.GIVE_APLY_YMD
		     , A.APRV_YMD
		     , D.JDAF_CORP_NM || ' ' || D.LWYR_NM AS A_COL
		     , '40:기타' AS B_COL
		     , '' AS C_COL
		     , '' AS D_COL
		     , '10:계좌이체' AS E_COL
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = C.BANK_SE_NO) || ':' || C.BANK_NM AS F_COL
		     , C.DPSTR_NM AS G_COL
		     , C.ACTNO AS H_COL
		     , A.PRCS_AMT AS I_COL
		     , 0 AS J_COL
		FROM TB_LWS_CST  A LEFT OUTER JOIN TB_COM_LWYR_BACNT C ON A.BACNT_MNG_NO = C.BACNT_MNG_NO
		   , TB_LWS_AGT  D
		WHERE A.CST_TRGT_MNG_NO = D.AGT_MNG_NO
		  AND A.APRV_YN = 'Y'
		  AND A.GIVE_YN = 'N'
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.GIVE_APLY_YMD) = 1 THEN TO_CHAR(TO_DATE(A.GIVE_APLY_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.GIVE_APLY_YMD) = 1 THEN TO_CHAR(TO_DATE(A.GIVE_APLY_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		ORDER BY A.APRV_YMD DESC
	</select>
	
	
	
	
	
	
	
	
	<select id="systemstatistics3_1" resultType="HashMap">
		/* statisticsSql.systemstatistics3_1 */
		SELECT COUNT(A.LWYR_MNG_NO) AS CNT
		     , COUNT(CASE WHEN YEARS <![CDATA[<=]]> 2 THEN 1 END) AS A1
		     , COUNT(CASE WHEN YEARS <![CDATA[> ]]> 2 AND YEARS <![CDATA[<=]]> 4 THEN 1 END) AS A2
		     , COUNT(CASE WHEN YEARS <![CDATA[> ]]> 4 AND YEARS <![CDATA[<=]]> 6 THEN 1 END) AS A3
		     , COUNT(CASE WHEN YEARS <![CDATA[> ]]> 6 AND YEARS <![CDATA[<=]]> 8 THEN 1 END) AS A4
		     , COUNT(CASE WHEN YEARS <![CDATA[> ]]> 8 THEN 1 END) AS A5
		FROM TB_COM_LWYR A, (
		    SELECT LWYR_MNG_NO
		         , SUBSTR(ENTRST_END_YMD, 0, 4)-SUBSTR(ENTRST_BGNG_YMD, 0, 4) AS YEARS
		    FROM (
		        SELECT LWYR_MNG_NO
		             , MIN(ENTRST_BGNG_YMD) AS ENTRST_BGNG_YMD
		             , MAX(ENTRST_END_YMD)  AS ENTRST_END_YMD
		        FROM TB_COM_LWYR_TNR
		        GROUP BY LWYR_MNG_NO
		    )
		) B
		WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
		ORDER BY A.LWYR_MNG_NO
	</select>
	<select id="systemstatistics3_2" resultType="HashMap">
		/* statisticsSql.systemstatistics3_2 */
		WITH YEARS AS (
		  SELECT (TO_CHAR(SYSDATE, 'YYYY')+1)-LEVEL AS TARGET_YEAR
		  FROM DUAL
		  CONNECT BY LEVEL <![CDATA[<=]]> 5
		),
		BASE1 AS (
		    SELECT SUBSTR(CASE WHEN A.DLGT_YMD IS NULL OR A.DLGT_YMD = '' THEN '0000' ELSE A.DLGT_YMD END, 0 , 4) AS YEARS
		         , COUNT(B.LWS_MNG_NO) AS G0
		         , COUNT(CASE WHEN C.CD_NM LIKE '%행정%' THEN 1 END) AS G1
		         , COUNT(CASE WHEN C.CD_NM LIKE '%민사%' THEN 1 END) AS G2
		    FROM TB_LWS_AGT A, TB_LWS_MNG B, TB_COM_CD C
		    WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND B.LWS_UP_TYPE_CD = C.CD_MNG_NO
		      AND C.USE_YN = 'Y'
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(B.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.FLGLW_YMD) = 1 THEN TO_CHAR(TO_DATE(B.FLGLW_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY SUBSTR(CASE WHEN A.DLGT_YMD IS NULL OR A.DLGT_YMD = '' THEN '0000' ELSE A.DLGT_YMD END, 0 , 4)
		),
		BASE2 AS (
		    SELECT SUBSTR(A.CNSTN_CMPTN_YMD, 0, 4) AS YEARS
		         , COUNT(A.CNSTN_MNG_NO) AS DOC_CNT
		         , COUNT(B.RVW_TKCG_MNG_NO) AS PIC_CNT
		    FROM TB_CNSTN_MNG A, TB_CNSTN_RVW_PIC B
		    WHERE A.CNSTN_MNG_NO = B.CNSTN_MNG_NO
		      AND B.INSD_OTSD_TASK_SE = 'O'
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.CNSTN_CMPTN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CNSTN_CMPTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.CNSTN_CMPTN_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CNSTN_CMPTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY A.CNSTN_CMPTN_YMD, A.CNSTN_MNG_NO
		)
		SELECT Y.TARGET_YEAR
		     , B.G0
		     , B.G1
		     , B.G2
		     , C.DOC_CNT
		     , C.PIC_CNT
		FROM YEARS Y LEFT JOIN BASE1 B ON B.YEARS = Y.TARGET_YEAR
		             LEFT JOIN BASE2 C ON C.YEARS = Y.TARGET_YEAR
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR >= SUBSTR(#{txtStartDate}, 0, 4)
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR <= SUBSTR(#{txtEndDate}, 0, 4)
		]]>
		</if>
	</select>
	<select id="systemstatistics4" resultType="HashMap">
		/* statisticsSql.systemstatistics4 */
		SELECT A.PHOTO_MNG_PATH_NM
		     , A.LWYR_NM || '(' || TRIM(A.BRDT) || ')' AS LWYR_NM
		     , A.ACBG_CN
		     , A.TEST_PASS_YR || ' (' || TEST_SE_NM || ' ' || TEST_PASS_CYCL || ')' AS TEST_INFO
		     , A.CRR_MTTR
		     , A.ARSP_NM
		     , TO_CHAR(TO_DATE(ENTRST_BGNG_YMD2, 'YYYY-MM-DD'), 'YYYY.MM.DD') || '(' || TO_CHAR(TO_DATE(ENTRST_BGNG_YMD1, 'YYYY-MM-DD'), 'YYYY.MM.DD') || ')' AS ENTRST_BGNG_YMD
		FROM TB_COM_LWYR A
		   , (
		      SELECT LWYR_MNG_NO
		           , MIN(ENTRST_BGNG_YMD) AS ENTRST_BGNG_YMD1
		           , MAX(ENTRST_BGNG_YMD) AS ENTRST_BGNG_YMD2
		      FROM TB_COM_LWYR_TNR
		      GROUP BY LWYR_MNG_NO
		     ) B
		WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
	</select>
	<select id="systemstatistics5" resultType="HashMap">
		/* statisticsSql.systemstatistics5 */
		WITH SUIT AS (
		    SELECT LWYR_MNG_NO, COUNT(A.AGT_MNG_NO) AS CNT
		    FROM TB_LWS_AGT A
		    WHERE 1=1
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.DLGT_YMD) = 1 THEN TO_CHAR(TO_DATE(A.DLGT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(A.DLGT_YMD) = 1 THEN TO_CHAR(TO_DATE(A.DLGT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY LWYR_MNG_NO
		),
		CNSULT AS (
		    SELECT RVW_TKCG_EMP_NO, COUNT(A.RVW_TKCG_MNG_NO) AS CNT
		    FROM TB_CNSTN_RVW_PIC A, TB_CNSTN_MNG B
		    WHERE A.INSD_OTSD_TASK_SE = 'O'
		      AND A.CNSTN_MNG_NO = B.CNSTN_MNG_NO
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(B.CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(B.CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY RVW_TKCG_EMP_NO
		),
		CVTN AS (
		    SELECT RVW_TKCG_EMP_NO, COUNT(A.RVW_TKCG_MNG_NO) AS CNT
		    FROM TB_CVTN_RVW_PIC A, TB_CVTN_MNG B
		    WHERE A.INSD_OTSD_TASK_SE = 'O'
		      AND A.CVTN_MNG_NO = B.CVTN_MNG_NO
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(B.CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(B.CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(B.CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY RVW_TKCG_EMP_NO
		)
		SELECT A.LWYR_NM
		     , (SELECT Z.JDAF_CORP_NM FROM TB_COM_JDAF_CORP Z WHERE Z.JDAF_CORP_MNG_NO = A.JDAF_CORP_MNG_NO) AS JDAF_CORP_NM
		     , TO_CHAR(TO_DATE(B.ENTRST_BGNG_YMD, 'YYYY-MM-DD'), 'YYYY.MM.DD') AS ENTRST_BGNG_YMD
		     , S.CNT AS SUIT_CNT
		     , C.CNT AS CNST_CNT
		     , AA.CNT AS CVTN_CNT
		     , A.RMRK_CN
		FROM TB_COM_LWYR A
		     LEFT OUTER JOIN SUIT S ON A.LWYR_MNG_NO = S.LWYR_MNG_NO
		     LEFT OUTER JOIN CNSULT C ON A.LWYR_MNG_NO = C.RVW_TKCG_EMP_NO
		     LEFT OUTER JOIN CVTN   AA ON A.LWYR_MNG_NO = AA.RVW_TKCG_EMP_NO
		   , (
		      SELECT LWYR_MNG_NO
		           , MIN(ENTRST_BGNG_YMD) AS ENTRST_BGNG_YMD
		      FROM TB_COM_LWYR_TNR
		      GROUP BY LWYR_MNG_NO
		     ) B
		WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
	</select>
	
	<select id="consultstatistics1" resultType="HashMap">
		/* statisticsSql.consultstatistics1 */
		WITH YEARS AS (
		    SELECT (TO_CHAR(SYSDATE, 'YYYY')+1)-LEVEL AS TARGET_YEAR
		    FROM DUAL
		    CONNECT BY LEVEL <![CDATA[<=]]> 20
		),
		BASE AS (
		    SELECT SUBSTR(CNSTN_RCPT_YMD, 0, 4) AS YEARS
		         , COUNT(CNSTN_MNG_NO) AS A_CNT
		         , COUNT(CASE WHEN INSD_OTSD_TASK_SE = 'I' THEN 1 END) AS  I_CNT
		         , COUNT(CASE WHEN INSD_OTSD_TASK_SE = 'O' THEN 1 END) O_CNT
		    FROM TB_CNSTN_MNG A
		    WHERE INSD_OTSD_TASK_SE IN ('I', 'O')
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY SUBSTR(CNSTN_RCPT_YMD, 0, 4)
		)
		SELECT 9999 AS TARGET_YEAR
		     , COUNT(CNSTN_MNG_NO) AS A_CNT
		     , COUNT(CASE WHEN INSD_OTSD_TASK_SE = 'I' THEN 1 END) AS ICNT
		     , COUNT(CASE WHEN INSD_OTSD_TASK_SE = 'O' THEN 1 END) AS OCNT
		FROM TB_CNSTN_MNG
		WHERE INSD_OTSD_TASK_SE IN ('I', 'O')
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		UNION ALL
		SELECT Y.TARGET_YEAR
		     , (SELECT Z.A_CNT FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS A_CNT
		     , (SELECT Z.I_CNT FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS I_CNT
		     , (SELECT Z.O_CNT FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS O_CNT
		FROM YEARS Y
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR >= SUBSTR(#{txtStartDate}, 0, 4)
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR <= SUBSTR(#{txtEndDate}, 0, 4)
		]]>
		</if>
		GROUP BY Y.TARGET_YEAR
		ORDER BY TARGET_YEAR DESC
	</select>
	<select id="consultstatistics2" resultType="HashMap">
		/* statisticsSql.consultstatistics2 */
		SELECT A.CNSTN_DOC_NO
		     , CASE WHEN IS_VALID_DATE(A.CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CNSTN_RCPT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE A.CNSTN_RCPT_YMD
		       END CNSTN_RCPT_YMD
		     , CASE WHEN A.INSD_OTSD_TASK_SE = 'I' THEN '내부검토'
		            WHEN A.INSD_OTSD_TASK_SE = 'O' THEN '외부자문'
		            ELSE '상관없음'
		       END AS INOUTHAN
		     , A.CNSTN_TTL
		     , A.CNSTN_RQST_DEPT_NM
		     , A.CNSTN_TKCG_EMP_NM
		     , A.PRGRS_STTS_SE_NM
		     , A.OTSD_RQST_RSN
		     , B.RVW_TKCG_EMP_NM
		     , C.GIVE_YM
		     , CASE WHEN IS_VALID_DATE(A.CNSTN_RPLY_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CNSTN_RPLY_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE A.CNSTN_RPLY_YMD
		       END CNSTN_RPLY_YMD
		     , A.CNSTN_SE_NM
		FROM TB_CNSTN_MNG A
		     LEFT OUTER JOIN (
		         SELECT Z.CNSTN_MNG_NO
		              , LISTAGG(RVW_TKCG_EMP_NM, ',') WITHIN GROUP (ORDER BY RVW_TKCG_EMP_NM) AS RVW_TKCG_EMP_NM
		         FROM TB_CNSTN_RVW_PIC Z
		         GROUP BY Z.CNSTN_MNG_NO
		     ) B ON A.CNSTN_MNG_NO = B.CNSTN_MNG_NO
		     LEFT OUTER JOIN (
		        SELECT CNSTN_MNG_NO
		             , SUBSTR(MAX(CST_GIVE_YMD), 0, 6) AS GIVE_YM
		        FROM TB_CNSTN_CST
		        GROUP BY CNSTN_MNG_NO
		     ) C ON A.CNSTN_MNG_NO = C.CNSTN_MNG_NO
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.CNSTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CNSTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
		<if test="searchGbn2 != null and searchGbn2 != ''">
		  AND A.INSD_OTSD_TASK_SE = #{searchGbn2}
		</if>
		<if test="searchGbn3 != null and searchGbn3 != ''">
		  AND A.CNSTN_SE_NM = #{searchGbn3}
		</if>
		ORDER BY CNSTN_DOC_NO DESC
	</select>
	
	<select id="consultstatistics3" resultType="HashMap">
		/* statisticsSql.consultstatistics3 */
		SELECT *
		FROM (
		    SELECT '자문비용' AS GBN
		         , A.CST_CLM_YMD
		         , A.CST_APRV_YMD
		         , B.LWYR_NM AS A_COL
		         , '40:기타' AS B_COL
		         , '' AS C_COL
		         , '' AS D_COL
		         , '10:계좌이체' AS E_COL
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = C.BANK_SE_NO) || ':' || C.BANK_NM AS F_COL
		         , C.DPSTR_NM AS G_COL
		         , C.ACTNO AS H_COL
		         , (A.CNSTN_CST_AMT*0.9) AS I_COL
		         , (A.CNSTN_CST_AMT*0.1) AS J_COL
		    FROM TB_CNSTN_CST A,
		         TB_COM_LWYR B,
		         TB_COM_LWYR_BACNT C,
		         TB_CNSTN_RVW_PIC D
		    WHERE A.RVW_TKCG_MNG_NO = D.RVW_TKCG_MNG_NO
		      AND B.LWYR_MNG_NO = D.RVW_TKCG_EMP_NO
		      AND B.LWYR_MNG_NO = C.LWYR_MNG_NO
		      AND A.BACNT_MNG_NO = C.BACNT_MNG_NO
		      AND A.CST_PRGRS_STTS_SE = 'A'
		    UNION ALL
		    SELECT '협약비용' AS GBN
		         , A.CST_CLM_YMD
		         , A.CST_APRV_YMD
		         , B.LWYR_NM AS A_COL
		         , '40:기타' AS B_COL
		         , '' AS C_COL
		         , '' AS D_COL
		         , '10:계좌이체' AS E_COL
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = C.BANK_SE_NO) || ':' || C.BANK_NM AS F_COL
		         , C.DPSTR_NM AS G_COL
		         , C.ACTNO AS H_COL
		         , (A.CVTN_CST_AMT*0.9) AS I_COL
		         , (A.CVTN_CST_AMT*0.1) AS J_COL
		    FROM TB_CVTN_CST A,
		         TB_COM_LWYR B,
		         TB_COM_LWYR_BACNT C,
		         TB_CNSTN_RVW_PIC D
		    WHERE A.RVW_TKCG_MNG_NO = D.RVW_TKCG_MNG_NO
		      AND B.LWYR_MNG_NO = D.RVW_TKCG_EMP_NO
		      AND B.LWYR_MNG_NO = C.LWYR_MNG_NO
		      AND A.BACNT_MNG_NO = C.BACNT_MNG_NO
		      AND A.CST_PRGRS_STTS_SE = 'A'
		) A
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.CST_CLM_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CST_CLM_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND (CASE WHEN IS_VALID_DATE(A.CST_CLM_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CST_CLM_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		]]>
		</if>
	</select>
	
	<select id="consultstatistics4" resultType="HashMap">
		/* statisticsSql.consultstatistics4 */
		SELECT *
		FROM (
		    SELECT CNSTN_TKCG_EMP_NO
		         , CNSTN_TKCG_EMP_NM
		         , COUNT(CNSTN_MNG_NO) AS DOC_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '유선' THEN 1 END) AS GBN1_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '방문' THEN 1 END) AS GBN2_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메일' THEN 1 END) AS GBN3_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메신저' THEN 1 END) AS GBN4_CNT
		    FROM TB_CNSTN_MNG
		    WHERE INSD_OTSD_TASK_SE = 'V'
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CNSTN_CMPTN_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_CMPTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CNSTN_CMPTN_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_CMPTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY CNSTN_TKCG_EMP_NO, CNSTN_TKCG_EMP_NM
		    UNION ALL
		    SELECT 'TOTAL'
		         , '총계'
		         , COUNT(CNSTN_MNG_NO) AS DOC_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '유선' THEN 1 END) AS GBN1_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '방문' THEN 1 END) AS GBN2_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메일' THEN 1 END) AS GBN3_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메신저' THEN 1 END) AS GBN4_CNT
		    FROM TB_CNSTN_MNG
		    WHERE INSD_OTSD_TASK_SE = 'V'
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CNSTN_CMPTN_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_CMPTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CNSTN_CMPTN_YMD) = 1 THEN TO_CHAR(TO_DATE(CNSTN_CMPTN_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		)
		ORDER BY (CASE WHEN CNSTN_TKCG_EMP_NO = 'TOTAL' THEN 9999 ELSE 1 END) ASC, CNSTN_TKCG_EMP_NM
	</select>
	<select id="consultstatistics5" resultType="HashMap">
		/* statisticsSql.consultstatistics5 */
		SELECT *
		FROM (
		    SELECT CNSTN_TKCG_EMP_NO
		         , CNSTN_TKCG_EMP_NM
		         , SUBSTR(CNSTN_CMPTN_YMD, 5, 2) AS CNSTN_CMPTN_YMD
		         , COUNT(CNSTN_MNG_NO) AS DOC_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '유선' THEN 1 END) AS GBN1_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '방문' THEN 1 END) AS GBN2_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메일' THEN 1 END) AS GBN3_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메신저' THEN 1 END) AS GBN4_CNT
		    FROM TB_CNSTN_MNG
		    WHERE INSD_OTSD_TASK_SE = 'V'
		      AND SUBSTR(CNSTN_CMPTN_YMD, 0, 4) = #{txtDate}
		    GROUP BY CNSTN_TKCG_EMP_NO, CNSTN_TKCG_EMP_NM, SUBSTR(CNSTN_CMPTN_YMD, 5, 2)
		    UNION ALL
		    SELECT 'TOTAL'
		         , SUBSTR(CNSTN_CMPTN_YMD, 5, 2) || '월 총계'
		         , SUBSTR(CNSTN_CMPTN_YMD, 5, 2) AS CNSTN_CMPTN_YMD
		         , COUNT(CNSTN_MNG_NO) AS DOC_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '유선' THEN 1 END) AS GBN1_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '방문' THEN 1 END) AS GBN2_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메일' THEN 1 END) AS GBN3_CNT
		         , COUNT(CASE WHEN DSCSN_TYPE_NM = '메신저' THEN 1 END) AS GBN4_CNT
		    FROM TB_CNSTN_MNG
		    WHERE INSD_OTSD_TASK_SE = 'V'
		      AND SUBSTR(CNSTN_CMPTN_YMD, 0, 4) = #{txtDate}
		    GROUP BY SUBSTR(CNSTN_CMPTN_YMD, 5, 2)
		)
		ORDER BY (CASE WHEN CNSTN_TKCG_EMP_NO = 'TOTAL' THEN 9999 ELSE 1 END) ASC, CNSTN_TKCG_EMP_NM
	</select>
	
	
	<select id="agreestatistics1" resultType="HashMap">
		/* statisticsSql.agreestatistics1 */
		WITH YEARS AS (
		    SELECT (TO_CHAR(SYSDATE, 'YYYY')+1)-LEVEL AS TARGET_YEAR
		    FROM DUAL
		    CONNECT BY LEVEL <![CDATA[<=]]> 20
		),
		BASE AS (
		    SELECT SUBSTR(CVTN_RCPT_YMD, 0, 4) AS YEARS
		         , COUNT(CVTN_MNG_NO) AS C0
		         , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '민간투자' THEN 1 END) AS C1
		         , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '민간위탁' THEN 1 END) AS C2
		         , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '공유재산' THEN 1 END) AS C3
		         , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '임대차'   THEN 1 END) AS C4
		         , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '기타'     THEN 1 END) AS C5
		         , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '기타계약' THEN 1 END) AS C6
		    FROM TB_CVTN_MNG
		    WHERE CVTN_RCPT_YMD IS NOT NULL
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY SUBSTR(CVTN_RCPT_YMD, 0, 4)
		)
		SELECT '총 계' AS YEARS
		     , COUNT(CVTN_MNG_NO) AS C0
		     , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '민간투자' THEN 1 END) AS C1
		     , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '민간위탁' THEN 1 END) AS C2
		     , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '공유재산' THEN 1 END) AS C3
		     , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '임대차'   THEN 1 END) AS C4
		     , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '기타'     THEN 1 END) AS C5
		     , COUNT(CASE WHEN CVTN_CTRT_TYPE_CD_NM = '기타계약' THEN 1 END) AS C6
		FROM TB_CVTN_MNG
		WHERE CVTN_RCPT_YMD IS NOT NULL
		UNION ALL
		SELECT TO_CHAR(Y.TARGET_YEAR) AS YEARS
		     , (SELECT Z.C0 FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS C0
		     , (SELECT Z.C1 FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS C1
		     , (SELECT Z.C2 FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS C2
		     , (SELECT Z.C3 FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS C3
		     , (SELECT Z.C4 FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS C4
		     , (SELECT Z.C5 FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS C5
		     , (SELECT Z.C6 FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS C6
		FROM YEARS Y
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR >= SUBSTR(#{txtStartDate}, 0, 4)
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR <= SUBSTR(#{txtEndDate}, 0, 4)
		]]>
		</if>
		GROUP BY Y.TARGET_YEAR
		ORDER BY YEARS DESC
	</select>
	
	<select id="agreestatistics2" resultType="HashMap">
		/* statisticsSql.agreestatistics2 */
		WITH YEARS AS (
		    SELECT (TO_CHAR(SYSDATE, 'YYYY')+1)-LEVEL AS TARGET_YEAR
		    FROM DUAL
		    CONNECT BY LEVEL <![CDATA[<=]]> 20
		),
		BASE AS (
		     SELECT SUBSTR(CVTN_RCPT_YMD, 0, 4) AS YEARS
		         , COUNT(A.CVTN_MNG_NO) AS ACNT
		         , COUNT(CASE WHEN B.RVW_OPNN_CMPTN_YN = 'Y' THEN 1 END) AS YCNT
		         , COUNT(CASE WHEN B.RVW_OPNN_CMPTN_YN = 'N' THEN 1 END) AS NCNT
		    FROM TB_CVTN_MNG A, TB_CVTN_RVW_OPNN B
		    WHERE A.CVTN_RCPT_YMD IS NOT NULL
		      AND A.CVTN_CTRT_TYPE_CD_NM = '의회 동의 여부 사전검토'
		      AND A.CVTN_MNG_NO = B.CVTN_MNG_NO
		    <if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		    GROUP BY SUBSTR(A.CVTN_RCPT_YMD, 0, 4)
		)
		SELECT Y.TARGET_YEAR
		     , (SELECT Z.ACNT FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS ACNT
		     , (SELECT Z.YCNT FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS YCNT
		     , (SELECT Z.NCNT FROM BASE Z WHERE Z.YEARS = Y.TARGET_YEAR) AS NCNT
		FROM YEARS Y
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR >= SUBSTR(#{txtStartDate}, 0, 4)
		]]>
		</if>
		<if test="txtEndDate != null and txtEndDate != ''">
		<![CDATA[
		  AND Y.TARGET_YEAR <= SUBSTR(#{txtEndDate}, 0, 4)
		]]>
		</if>
	</select>
	
	<select id="agreestatistics3" resultType="HashMap">
		/* statisticsSql.agreestatistics3 */
		SELECT A.CVTN_DOC_NO
		     , CASE WHEN IS_VALID_DATE(A.CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CVTN_RCPT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE A.CVTN_RCPT_YMD
		       END CVTN_RCPT_YMD
		     , CASE WHEN A.INSD_OTSD_TASK_SE = 'I' THEN '내부검토'
		            WHEN A.INSD_OTSD_TASK_SE = 'O' THEN '외부자문'
		            ELSE '상관없음'
		       END AS INOUTHAN
		     , A.CVTN_TTL
		     , A.CVTN_RQST_DEPT_NM
		     , A.CVTN_TKCG_EMP_NM
		     , A.PRGRS_STTS_SE_NM
		     , A.OTSD_RQST_RSN
		     , B.RVW_TKCG_EMP_NM
		     , C.GIVE_YM
		     , CASE WHEN IS_VALID_DATE(A.CVTN_RPLY_YMD) = 1 THEN TO_CHAR(TO_DATE(A.CVTN_RPLY_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE A.CVTN_RPLY_YMD
		       END CVTN_RPLY_YMD
		FROM TB_CVTN_MNG A
		     LEFT OUTER JOIN (
		         SELECT Z.CVTN_MNG_NO
		              , LISTAGG(RVW_TKCG_EMP_NM, ',') WITHIN GROUP (ORDER BY RVW_TKCG_EMP_NM) AS RVW_TKCG_EMP_NM
		         FROM TB_CVTN_RVW_PIC Z
		         GROUP BY Z.CVTN_MNG_NO
		     ) B ON A.CVTN_MNG_NO = B.CVTN_MNG_NO
		     LEFT OUTER JOIN (
		        SELECT CVTN_MNG_NO
		             , SUBSTR(MAX(CST_GIVE_YMD), 0, 6) AS GIVE_YM
		        FROM TB_CVTN_CST
		        GROUP BY CVTN_MNG_NO
		     ) C ON A.CVTN_MNG_NO = C.CVTN_MNG_NO
		WHERE 1=1
		<if test="txtStartDate != null and txtStartDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) >= #{txtStartDate}
		    ]]>
		    </if>
		    <if test="txtEndDate != null and txtEndDate != ''">
		    <![CDATA[
		      AND (CASE WHEN IS_VALID_DATE(CVTN_RCPT_YMD) = 1 THEN TO_CHAR(TO_DATE(CVTN_RCPT_YMD, 'YYYY-MM-DD'), #{dateFormat}) ELSE TO_CHAR(TO_DATE('20000101', 'YYYY-MM-DD'), #{dateFormat}) END) <= #{txtEndDate}
		    ]]>
		    </if>
		ORDER BY CVTN_DOC_NO DESC
	</select>
	
	
	
	
	<insert id="insertSmsSendLog">
		INSERT INTO TB_SU_SMS_SENDLOG (
			DOCID, SENDDT
		) VALUES ( 
			#{docid},
			TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		)
	</insert>
</mapper>

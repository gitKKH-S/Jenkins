<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "/WEB-INF/dtd/mybatis-3-mapper.dtd">
<mapper namespace="suitSql">
	<cache flushInterval="86400000" eviction="LRU"/>
	
	<select id="getCodeList" resultType="HashMap">
		/* suitSql.getCodeList */
		SELECT CD_MNG_NO, CD_NM, CD_LCLSF_ENG_NM
		FROM TB_COM_CD
		WHERE USE_YN = 'Y'
		<choose>
		  <when test="typeList.size != 0">
		  AND CD_LCLSF_ENG_NM IN 
		    <foreach collection="typeList" item="item" index="index" separator="," open="(" close=")">
		      #{item}
		    </foreach>
		  </when>
		  <when test="typeList.size == 0">
		  AND CD_LCLSF_ENG_NM = #{type}
		  </when>
		</choose>
		<if test="schTxt != '' and schTxt != null">
		  AND CD_NM LIKE '%'||#{schTxt}||'%'
		</if>
		ORDER BY SORT_SEQ
	</select>
	
	<select id="getProgList" resultType="HashMap">
		/* suitSql.getProgList */
		SELECT *
		FROM (
		    SELECT SORT_SEQ, CD_NM || ' 진행' AS CD_MNG_NO, CD_NM || ' 진행' AS CD_NM, 'PROGRESSCD' AS CD_LCLSF_ENG_NM
		    FROM TB_COM_CD
		    WHERE CD_LCLSF_ENG_NM = 'CASECD'
		    UNION ALL
		    SELECT SORT_SEQ, CD_NM || ' 판결' AS CD_MNG_NO, CD_NM || ' 판결' AS CD_NM, 'PROGRESSCD' AS CD_LCLSF_ENG_NM
		    FROM TB_COM_CD
		    WHERE CD_LCLSF_ENG_NM = 'CASECD'
		)
		ORDER BY SORT_SEQ ASC
	</select>
	
	
	<select id="selectSuitCodeList" resultType="HashMap">
		/* suitSql.selectSuitCodeList */
		SELECT CD_MNG_NO
		     , CD_LCLSF_ENG_NM
		     , CD_LCLSF_KORN_NM
		     , CD_NM
		     , SORT_SEQ
		     , USE_YN
		FROM TB_COM_CD
		WHERE USE_YN = 'Y'
		<choose>
		  <when test="typeList.size != 0">
		  AND CD_LCLSF_ENG_NM IN 
		    <foreach collection="typeList" item="item" index="index" separator="," open="(" close=")">
		      #{item}
		    </foreach>
		  </when>
		  <when test="typeList.size == 0">
		  AND CD_LCLSF_ENG_NM = #{type}
		  </when>
		</choose>
		<if test="schTxt != '' and schTxt != null">
		  AND CD_NM LIKE '%'||#{schTxt}||'%'
		</if>
		ORDER BY SORT_SEQ ASC
	</select>
	
	<select id="selectLwsLwrTypeCdList" resultType="HashMap">
		/* suitSql.selectLwsLwrTypeCdList */
		SELECT CD_MNG_NO
		     , CD_LCLSF_ENG_NM
		     , CD_LCLSF_KORN_NM
		     , CD_NM
		     , SORT_SEQ
		     , USE_YN
		FROM TB_COM_CD
		WHERE USE_YN = 'Y'
		AND CD_LCLSF_ENG_NM = #{type}
		ORDER BY SORT_SEQ ASC
	</select>
	
	<select id="getFileIdKey" resultType="String">
		/* suitSql.getFileIdKey */
		SELECT KEYID.NEXTVAL FROM DUAL
	</select>
	
	<insert id="insertFile" parameterType="HashMap">
		/* suitSql.insertFile */
		INSERT INTO TB_LWS_FILE (
		    FILE_MNG_NO        /* 파일관리번호       */
		  , INST_MNG_NO        /* 심급관리번호       */
		  , LWS_MNG_NO         /* 소송관리번호       */
		  , TRGT_PST_MNG_NO    /* 대상게시물관리번호 */
		  , FILE_SE            /* 파일구분           */
		  , DWNLD_FILE_NM      /* 다운로드파일명     */
		  , SRVR_FILE_NM       /* 서버파일명         */
		  , PHYS_FILE_NM       /* 물리파일명         */
		  , FILE_EXTN_NM       /* 파일확장자명       */
		  , FILE_SZ            /* 파일크기           */
		  , TRGT_PST_TBL_NM    /* 대상게시물테이블명 */
		  , SORT_SEQ           /* 정렬순서           */
		  , DEL_YN             /* 삭제여부           */
		  , WRTR_EMP_NM        /* 작성직원명         */
		  , WRTR_EMP_NO        /* 작성직원번호       */
		  , WRT_YMD            /* 작성일자           */
		  , WRT_DEPT_NM        /* 작성부서명         */
		  , WRT_DEPT_NO        /* 작성부서번호       */
		) VALUES (
		    #{FILE_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{TRGT_PST_MNG_NO}
		  , #{FILE_SE}
		  , #{DWNLD_FILE_NM}
		  , #{SRVR_FILE_NM}
		  , #{PHYS_FILE_NM}
		  , #{FILE_EXTN_NM}
		  , #{FILE_SZ}
		  , #{TRGT_PST_TBL_NM}
		  , #{SORT_SEQ}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<insert id="insertCourtFile" parameterType="HashMap">
		/* suitSql.insertCourtFile */
		INSERT INTO TB_LWS_CT_FILE(
		    LWS_DOC_MNG_NO   /* 소송문서관리번호 */
		  , INST_MNG_NO      /* 심급관리번호     */
		  , LWS_MNG_NO       /* 소송관리번호     */
		  , DOC_KND_NM       /* 문서종류명       */
		  , DOC_CRTR_YMD     /* 문서기준일자     */
		  , DOC_SN           /* 문서일련번호     */
		  , DOC_NM           /* 문서명           */
		  , ASST_DOC_NO      /* 보조문서번호     */
		  , ORGNL_FILE_NM    /* 원본파일명       */
		  , SRVR_FILE_NM     /* 서버파일명       */
		  , FILE_SZ          /* 파일크기         */
		  , DEL_YN           /* 삭제여부         */
		  , WRTR_EMP_NM      /* 작성직원명       */
		  , WRTR_EMP_NO      /* 작성직원번호     */
		  , WRT_YMD          /* 작성일자         */
		  , WRT_DEPT_NM      /* 작성부서명       */
		  , WRT_DEPT_NO      /* 작성부서번호     */
		) VALUES (
		    #{LWS_DOC_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{DOC_KND_NM}
		  , REPLACE(#{DOC_CRTR_YMD}, '-', '')
		  , #{DOC_SN}
		  , #{DOC_NM}
		  , #{ASST_DOC_NO}
		  , #{ORGNL_FILE_NM}
		  , #{SRVR_FILE_NM}
		  , #{FILE_SZ}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<select id="selectFileList" resultType="HashMap">
		/* suitSql.selectFileList */
		SELECT FILE_MNG_NO        /* 파일관리번호 */
		     , INST_MNG_NO        /* 심급관리번호 */
		     , LWS_MNG_NO         /* 소송관리번호 */
		     , TRGT_PST_MNG_NO    /* 대상게시물관리번호 */
		     , FILE_SE            /* 파일구분 */
		     , CASE WHEN FILE_SE = 'CONF' THEN '입증자료'
		            WHEN FILE_SE = 'CONT' THEN '입증자료'
		            WHEN FILE_SE = 'INST' THEN '소장'
		            WHEN FILE_SE = 'RES'  THEN '판결문'
		            WHEN FILE_SE = 'DOC'  THEN '제출송달'
		            WHEN FILE_SE = 'COST'  THEN '비용'
		            WHEN FILE_SE = 'CHRG'  THEN '위임'
		            WHEN FILE_SE = 'BOND'  THEN '채권'
		            WHEN FILE_SE = 'REP'   THEN '보고'
		            WHEN FILE_SE = 'CHK'   THEN '검토진행'
		            WHEN FILE_SE = 'SO1'   THEN '소송사무보고'
		            WHEN FILE_SE = 'SO2'   THEN '소송진행상황보고'
		            WHEN FILE_SE = 'SO3'   THEN '응소관련 자료제출 양식'
		            WHEN FILE_SE = 'SO4'   THEN '협조요청문'
		            WHEN FILE_SE = 'SO5'   THEN '판결문 접수에 따른 지원부서 의견요청'
		            ELSE '기타'
		       END FILE_SE_NM
		     , DWNLD_FILE_NM      /* 다운로드파일명 */
		     , SRVR_FILE_NM       /* 서버파일명 */
		     , PHYS_FILE_NM       /* 물리파일명 */
		     , FILE_EXTN_NM       /* 파일확장자명 */
		     , FILE_SZ
		     , TO_CHAR(ROUND(FILE_SZ/POWER(1024, FLOOR(LOG(1024, FILE_SZ))), 2)) || DECODE(FLOOR(LOG(1024, FILE_SZ)), 0, 'B', 1, 'KB', 2, 'MB', 3, 'GB') AS VIEW_SZ
		     , TRGT_PST_TBL_NM    /* 대상게시물테이블명 */
		     , SORT_SEQ           /* 정렬순서 */
		FROM TB_LWS_FILE
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		<if test="INST_MNG_NO != '' and INST_MNG_NO != null">
		  AND INST_MNG_NO = #{INST_MNG_NO}
		</if>
		<if test="TRGT_PST_MNG_NO != '' and TRGT_PST_MNG_NO != null">
		  AND TRGT_PST_MNG_NO = #{TRGT_PST_MNG_NO}
		</if>
		<if test="TRGT_PST_TBL_NM != '' and TRGT_PST_TBL_NM != null">
		  AND TRGT_PST_TBL_NM = #{TRGT_PST_TBL_NM}
		</if>
		<if test="FILE_SE != '' and FILE_SE != null">
		  AND FILE_SE = #{FILE_SE}
		</if>
		<if test="schTxt != '' and schTxt != null">
		  AND PHYS_FILE_NM LIKE '%'||#{schTxt}||'%'
		</if>
		<if test="ordgbnList != null and ordgbnList != ''">
		  <if test="ordgbnList.size != 0 and ordgbn != '' and ordgbn != null">
		    AND FILE_SE IN
		    <foreach collection="ordgbnList" item="item" index="index" separator="," open="(" close=")">
		        #{item}
		    </foreach>
		  </if>
		</if>
	</select>
	
	<select id="selectCourtFileList" resultType="HashMap">
		/* suitSql.selectCourtFileList */
		SELECT LWS_DOC_MNG_NO
		     , INST_MNG_NO
		     , LWS_MNG_NO
		     , DOC_KND_NM
		     , TO_CHAR(TO_DATE(DOC_CRTR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DOC_CRTR_YMD
		     , DOC_SN
		     , DOC_NM
		     , ASST_DOC_NO
		     , ORGNL_FILE_NM
		     , SRVR_FILE_NM
		     , FILE_SZ
		     , TO_CHAR(ROUND(FILE_SZ/POWER(1024, FLOOR(LOG(1024, FILE_SZ))), 2)) || DECODE(FLOOR(LOG(1024, FILE_SZ)), 0, 'B', 1, 'KB', 2, 'MB', 3, 'GB') AS VIEW_SZ
		FROM TB_LWS_CT_FILE
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
		<if test="typeList != null and typeList != ''">
		  <if test="typeList.size != 0 and chkFile != '' and chkFile != null">
		    AND LWS_DOC_MNG_NO IN
		    <foreach collection="typeList" item="item" index="index" separator="," open="(" close=")">
		        #{item}
		    </foreach>
		  </if>
		</if>
		ORDER BY TO_CHAR(TO_DATE(DOC_CRTR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') ASC, DOC_NM ASC
	</select>
	
	<delete id="deleteFile">
		/* suitSql.deleteFile */
		DELETE TB_LWS_FILE WHERE FILE_MNG_NO = #{FILE_MNG_NO}
	</delete>
	
	<delete id="deleteCourtFileOne">
		/* suitSql.deleteCourtFileOne */
		DELETE TB_LWS_CT_FILE
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
		<if test="LWS_DOC_MNG_NO != '' and LWS_DOC_MNG_NO != null">
		  AND LWS_DOC_MNG_NO = #{LWS_DOC_MNG_NO}
		</if>
	</delete>
	
	<select id="selectSuitMainList" resultType="HashMap">
		SELECT A.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , B.INST_CD
		     , A.LWS_NO||' '||A.LWS_INCDNT_NM AS LWS_INCDNT_NM
		     , TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS FLGLW_YMD
		FROM TB_LWS_MNG A, TB_LWS_INST B
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.TRMN_YN = 'N'
		  AND A.DEL_YN = 'N'
		  AND A.LAST_INST_CD = B.INST_CD
		  AND B.JDGM_CFMTN_YMD IS NULL
		ORDER BY A.FLGLW_YMD DESC
	</select>
	
	<select id="selectSuitList" resultType="HashMap">
		/* suitSql.selectSuitList */
		WITH OPENYN AS (
		    SELECT DISTINCT DOC_MNG_NO, 'Y' AS OPEN_YN
		    FROM TB_COM_PRSL_AUTHRT
		    WHERE DOC_SE = 'SUIT'
		      AND (AUTHRT_EMP_NO = #{WRTR_EMP_NO} OR AUTHRT_DEPT_NO = #{WRT_DEPT_NO})
		    UNION
		    SELECT DISTINCT LWS_MNG_NO, 'Y' AS OPEN_YN
		    FROM TB_LWS_MNG
		    WHERE (SPRVSN_DEPT_NO = #{WRT_DEPT_NO} OR SPRVSN_EMP_NO = #{WRTR_EMP_NO})
		    UNION
		    SELECT DISTINCT L.LWS_MNG_NO, 'Y' AS OPEN_YN
		    FROM TB_LWS_FLFMT Z
		         JOIN TB_LWS_INST ZZ ON Z.INST_MNG_NO = ZZ.INST_MNG_NO
		         JOIN TB_LWS_MNG L ON ZZ.LWS_MNG_NO = L.LWS_MNG_NO
		    WHERE Z.LWS_FLFMT_EMP_NO = #{WRTR_EMP_NO}
		)
		SELECT B.*
		FROM (
		    SELECT A.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM (
		        SELECT L.LWS_MNG_NO
		             , LI.INST_MNG_NO
		             , (SELECT CASE WHEN Z.CD_NM = '민사집행' THEN '민집' ELSE SUBSTR(Z.CD_NM, 0, 2) END CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = L.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') ||
		                    ' ' || REPLACE(L.LWS_NO, '@', '') AS LWS_NO
		             , L.LWS_INCDNT_NM
		             , CCD1.CD_NM AS INST_NM
		             , REPLACE(LI.INCDNT_NO, '@', '') AS INCDNT_NO
		             , CNCPR.LWS_CNCPR_NM
		             , CASE 
		                   WHEN LI.INST_MNG_NO IS NULL THEN '소장접수'
		                   WHEN LI.JDGM_CFMTN_YMD IS NOT NULL THEN '판결확정'
		                   ELSE (CCD2.CD_NM || 
		                         CASE 
		                             WHEN LI.JDGM_ADJ_YMD IS NULL THEN ' 진행'
		                             ELSE ' 판결'
		                         END)
		               END AS LWS_PRGRS_STTS
		             , LI.INCDNT_SE_CD
		        <if test="grpcd != null and grpcd != ''">
		          <if test='grpcd == "Y"'>
		             , 'Y' AS OPEN_YN
		          </if>
		          <if test='grpcd == "P"'>
		          , OPEN.OPEN_YN
		          </if>
		        </if>
		        FROM TB_LWS_MNG L
		             /* 대표심급 데이터만 JOIN */
		             LEFT JOIN TB_LWS_INST LI ON LI.LWS_MNG_NO = L.LWS_MNG_NO AND LI.INST_CD = L.LAST_INST_CD
		             LEFT JOIN TB_LWS_AGT D ON D.INST_MNG_NO = L.LWS_MNG_NO
		             /* 소송 상대방 */
		             LEFT JOIN (
		                 SELECT INST_MNG_NO
		                      , LWS_CNCPR_SE
		                      , LISTAGG(LWS_CNCPR_NM, ',') 
		                        WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		                 FROM TB_LWS_CNCPR
		                 GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		             ) CNCPR ON LI.INST_MNG_NO = CNCPR.INST_MNG_NO 
		                    /*AND ((L.LWS_SE = 'J' AND CNCPR.LWS_CNCPR_SE = 'PI') OR (L.LWS_SE = 'P' AND CNCPR.LWS_CNCPR_SE = 'WON'))*/
		             /* INST_NM */
		             LEFT JOIN TB_COM_CD CCD1 
		               ON CCD1.CD_MNG_NO = LI.INST_CD AND CCD1.USE_YN = 'Y'
		             /* LAST_INST_CD 명칭 */
		             LEFT JOIN TB_COM_CD CCD2 
		               ON CCD2.CD_MNG_NO = L.LAST_INST_CD AND CCD2.USE_YN = 'Y'
		             LEFT JOIN OPENYN OPEN ON L.LWS_MNG_NO = OPEN.DOC_MNG_NO
		        WHERE (((L.LWS_SE = 'J' AND CNCPR.LWS_CNCPR_SE = 'PI') OR (L.LWS_SE = 'P' AND CNCPR.LWS_CNCPR_SE = 'WON'))  or CNCPR.LWS_CNCPR_SE is null)
		        <if test="schGbn != null and schGbn != ''">
		          <if test='schGbn == "R"'>
		            <!-- 진행중 -->
		          AND LI.JDGM_CFMTN_YMD IS NULL
		          </if>
		          <if test='schGbn == "E"'>
		            <!-- 종결 -->
		          AND LI.JDGM_CFMTN_YMD IS NOT NULL
		          </if>
		          <if test='schGbn == "M"'>
		            <!-- 나의사건 -->
		          AND (
		            <if test="grpcd != null and grpcd != ''">
		              <if test='grpcd == "Y"'>
		             (SELECT COUNT(*) FROM TB_LWS_TKCG ZZ WHERE ZZ.LWS_MNG_NO = L.LWS_MNG_NO AND ZZ.TKCG_EMP_NO = #{WRTR_EMP_NO}) > 0)
		              </if>
		              <if test='grpcd == "P"'>
		              OPEN.OPEN_YN = 'Y' OR
		              (SELECT COUNT(*) FROM TB_LWS_TKCG ZZ WHERE ZZ.LWS_MNG_NO = L.LWS_MNG_NO AND ZZ.TKCG_EMP_NO = #{WRTR_EMP_NO}) > 0)
		              </if>
		            </if>
		          </if>
		          <if test='schGbn == "S"'>
		            <!-- 민사 -->
		          AND L.LWS_UP_TYPE_CD IN (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = 'LWSTYPECD' AND Z.CD_NM LIKE '민사%' AND Z.USE_YN = 'Y')
		          </if>
		          <if test='schGbn == "H"'>
		            <!-- 행정 -->
		          AND L.LWS_UP_TYPE_CD IN (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = 'LWSTYPECD' AND Z.CD_NM LIKE '행정%' AND Z.USE_YN = 'Y')
		          </if>
		        </if>
		        <if test="FLGLW_YMD1 != '' and FLGLW_YMD1 != null">
		          AND <![CDATA[REPLACE(L.FLGLW_YMD,'-','') >= REPLACE(#{FLGLW_YMD1},'-','')]]>
		        </if>
		        <if test="FLGLW_YMD2 != '' and FLGLW_YMD2 != null">
		          AND <![CDATA[REPLACE(L.FLGLW_YMD,'-','') <= REPLACE(#{FLGLW_YMD2},'-','')]]>
		        </if>
		        
		        <if test="JDGM_ADJ_YMD1 != '' and JDGM_ADJ_YMD1 != null">
		          AND <![CDATA[REPLACE(LI.JDGM_ADJ_YMD,'-','') >= REPLACE(#{JDGM_ADJ_YMD1},'-','')]]>
		        </if>
		        <if test="JDGM_ADJ_YMD2 != '' and JDGM_ADJ_YMD2 != null">
		          AND <![CDATA[REPLACE(LI.JDGM_ADJ_YMD,'-','') <= REPLACE(#{JDGM_ADJ_YMD2},'-','')]]>
		        </if>
		        
		        <if test="JDGM_CFMTN_YMD1 != '' and JDGM_CFMTN_YMD1 != null">
		          AND <![CDATA[REPLACE(LI.JDGM_CFMTN_YMD,'-','') >= REPLACE(#{JDGM_CFMTN_YMD1},'-','')]]>
		        </if>
		        <if test="JDGM_CFMTN_YMD2 != '' and JDGM_CFMTN_YMD2 != null">
		          AND <![CDATA[REPLACE(LI.JDGM_CFMTN_YMD,'-','') <= REPLACE(#{JDGM_CFMTN_YMD2},'-','')]]>
		        </if>
		        <if test="SPRVSN_DEPT_NM != '' and SPRVSN_DEPT_NM != null">
		          AND L.SPRVSN_DEPT_NM LIKE '%'||#{SPRVSN_DEPT_NM}||'%'
		        </if>
		        <if test="CT_CD != '' and CT_CD != null">
		          AND LI.CT_CD = #{CT_CD}
		        </if>
		        
		        <if test="LWS_CNCPR != '' and LWS_CNCPR != null">
		          AND L.LWS_MNG_NO IN (
		            SELECT ZZ.LWS_MNG_NO
		            FROM TB_LWS_INST ZZ
		            WHERE ZZ.INST_MNG_NO IN (
		                SELECT Z.INST_MNG_NO
		                FROM TB_LWS_CNCPR Z
		                WHERE Z.LWS_CNCPR_NM LIKE '%'||#{LWS_CNCPR}||'%'
		            )
		          )
		        </if>
		        
		        <if test="LWS_UP_TYPE_CD != '' and LWS_UP_TYPE_CD != null">
		          AND L.LWS_UP_TYPE_CD = #{LWS_UP_TYPE_CD}
		        </if>
		        <if test="LWS_LWR_TYPE_CD != '' and LWS_LWR_TYPE_CD != null">
		          AND L.LWS_LWR_TYPE_CD = #{LWS_LWR_TYPE_CD}
		        </if>
		        <if test="JDGM_UP_TYPE_CD != '' and JDGM_UP_TYPE_CD != null">
		          AND LI.JDGM_UP_TYPE_CD = #{JDGM_UP_TYPE_CD}
		        </if>
		        
		        <if test="PROGRESSCD != '' and PROGRESSCD != null">
		          AND (
		              CASE WHEN LI.INST_MNG_NO IS NULL THEN '소장접수'
		                   WHEN LI.JDGM_CFMTN_YMD IS NOT NULL THEN '판결확정'
		                   ELSE (
		                       (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = L.LAST_INST_CD AND Z.USE_YN = 'Y') || 
		                       (
		                        CASE WHEN LI.JDGM_ADJ_YMD IS NULL THEN ' 진행'
		                             WHEN LI.JDGM_ADJ_YMD IS NOT NULL THEN ' 판결'
		                        END
		                       )
		                   )
		              END
		          ) = #{PROGRESSCD}
		        </if>
		        
		        <if test="INST_CD != '' and INST_CD != null">
		          AND LI.INST_CD = #{INST_CD}
		        </if>
		        
		        <if test="LWYR_MNG_NO != '' and LWYR_MNG_NO != null">
		          AND D.LWYR_MNG_NO = #{LWYR_MNG_NO}
		        </if>
		        
		        <if test="LWS_NO != '' and LWS_NO != null">
		          AND L.LWS_NO LIKE '%'||#{LWS_NO}||'%'
		        </if>
		        
		        <if test="LWS_INCDNT_NM != '' and LWS_INCDNT_NM != null">
		          AND (
		               L.LWS_INCDNT_NM LIKE '%'||#{LWS_INCDNT_NM}||'%' OR
		               L.INCDNT_OTLN LIKE '%'||#{LWS_INCDNT_NM}||'%' OR
		               L.MAIN_CN LIKE '%'||#{LWS_INCDNT_NM}||'%' OR
		               L.RMRK_CN LIKE '%'||#{LWS_INCDNT_NM}||'%'
		              )
		          OR L.LWS_MNG_NO IN (
		              SELECT Z.LWS_MNG_NO
		              FROM TB_LWS_INST Z
		              WHERE Z.RMRK_CN LIKE '%'||#{LWS_INCDNT_NM}||'%'
		          )
		        </if>
		        <if test="INCDNT_NO != '' and INCDNT_NO != null">
		          AND L.LWS_MNG_NO IN (
		              SELECT Z.LWS_MNG_NO FROM TB_LWS_INST Z WHERE REPLACE(Z.INCDNT_NO,'@','') LIKE '%'||#{INCDNT_NO}||'%'
		          )
		        </if>
		        <if test="INCDNT_SE_CD != '' and INCDNT_SE_CD != null">
		          AND LI.INCDNT_SE_CD = #{INCDNT_SE_CD}
		        </if>
		        <if test="orderby != ''">
		          ${orderby}
		        </if> 
		        <if test="orderby == '' or orderby == null ">
		          ORDER BY L.FLGLW_YMD DESC
		        </if>
		        ) A
		) B
		
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		    <if test="pageno != null and pageno != ''">
		        page = #{pageno}
		    </if>
		    </if>
		</trim>
	</select>
	
	<select id="selectSuitListCnt" resultType="int">
		/* suitSql.selectSuitListCnt */
		WITH OPENYN AS (
		    SELECT DISTINCT DOC_MNG_NO, 'Y' AS OPEN_YN
		    FROM TB_COM_PRSL_AUTHRT
		    WHERE DOC_SE = 'SUIT'
		      AND (AUTHRT_EMP_NO = #{WRTR_EMP_NO} OR AUTHRT_DEPT_NO = #{WRT_DEPT_NO})
		    UNION
		    SELECT DISTINCT LWS_MNG_NO, 'Y' AS OPEN_YN
		    FROM TB_LWS_MNG
		    WHERE (SPRVSN_DEPT_NO = #{WRT_DEPT_NO} OR SPRVSN_EMP_NO = #{WRTR_EMP_NO})
		    UNION
		    SELECT DISTINCT L.LWS_MNG_NO, 'Y' AS OPEN_YN
		    FROM TB_LWS_FLFMT Z
		         JOIN TB_LWS_INST ZZ ON Z.INST_MNG_NO = ZZ.INST_MNG_NO
		         JOIN TB_LWS_MNG L ON ZZ.LWS_MNG_NO = L.LWS_MNG_NO
		    WHERE Z.LWS_FLFMT_EMP_NO = #{WRTR_EMP_NO}
		)
		SELECT COUNT(*)
		FROM (
		    SELECT *
		    FROM TB_LWS_MNG L
		         /* 대표심급 데이터만 JOIN */
		         LEFT JOIN TB_LWS_INST LI ON LI.LWS_MNG_NO = L.LWS_MNG_NO AND LI.INST_CD = L.LAST_INST_CD
		         LEFT JOIN TB_LWS_AGT D ON D.INST_MNG_NO = L.LWS_MNG_NO
		         LEFT JOIN OPENYN OPEN ON L.LWS_MNG_NO = OPEN.DOC_MNG_NO
		    WHERE 1 = 1
		    <if test="schGbn != null and schGbn != ''">
		      <if test='schGbn == "R"'>
		        <!-- 진행중 -->
		      AND LI.JDGM_CFMTN_YMD IS NULL
		      </if>
		      <if test='schGbn == "E"'>
		        <!-- 종결 -->
		      AND LI.JDGM_CFMTN_YMD IS NOT NULL
		      </if>
		      <if test='schGbn == "M"'>
		        <!-- 나의사건 -->
		      AND (
		        <if test="grpcd != null and grpcd != ''">
		          <if test='grpcd == "Y"'>
		         (SELECT COUNT(*) FROM TB_LWS_TKCG ZZ WHERE ZZ.LWS_MNG_NO = L.LWS_MNG_NO AND ZZ.TKCG_EMP_NO = #{WRTR_EMP_NO}) > 0)
		          </if>
		          <if test='grpcd == "P"'>
		          OPEN.OPEN_YN = 'Y' OR
		          (SELECT COUNT(*) FROM TB_LWS_TKCG ZZ WHERE ZZ.LWS_MNG_NO = L.LWS_MNG_NO AND ZZ.TKCG_EMP_NO = #{WRTR_EMP_NO}) > 0)
		          </if>
		        </if>
		      </if>
		      <if test='schGbn == "S"'>
		        <!-- 민사 -->
		      AND L.LWS_UP_TYPE_CD IN (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = 'LWSTYPECD' AND Z.CD_NM LIKE '민사%' AND Z.USE_YN = 'Y')
		      </if>
		      <if test='schGbn == "H"'>
		        <!-- 행정 -->
		      AND L.LWS_UP_TYPE_CD IN (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = 'LWSTYPECD' AND Z.CD_NM LIKE '행정%' AND Z.USE_YN = 'Y')
		      </if>
		    </if>
		    <if test="FLGLW_YMD1 != '' and FLGLW_YMD1 != null">
		      AND <![CDATA[REPLACE(L.FLGLW_YMD,'-','') >= REPLACE(#{FLGLW_YMD1},'-','')]]>
		    </if>
		    <if test="FLGLW_YMD2 != '' and FLGLW_YMD2 != null">
		      AND <![CDATA[REPLACE(L.FLGLW_YMD,'-','') <= REPLACE(#{FLGLW_YMD2},'-','')]]>
		    </if>
		    
		    <if test="JDGM_ADJ_YMD1 != '' and JDGM_ADJ_YMD1 != null">
		      AND <![CDATA[REPLACE(LI.JDGM_ADJ_YMD,'-','') >= REPLACE(#{JDGM_ADJ_YMD1},'-','')]]>
		    </if>
		    <if test="JDGM_ADJ_YMD2 != '' and JDGM_ADJ_YMD2 != null">
		      AND <![CDATA[REPLACE(LI.JDGM_ADJ_YMD,'-','') <= REPLACE(#{JDGM_ADJ_YMD2},'-','')]]>
		    </if>
		    
		    <if test="JDGM_CFMTN_YMD1 != '' and JDGM_CFMTN_YMD1 != null">
		      AND <![CDATA[REPLACE(LI.JDGM_CFMTN_YMD,'-','') >= REPLACE(#{JDGM_CFMTN_YMD1},'-','')]]>
		    </if>
		    <if test="JDGM_CFMTN_YMD2 != '' and JDGM_CFMTN_YMD2 != null">
		      AND <![CDATA[REPLACE(LI.JDGM_CFMTN_YMD,'-','') <= REPLACE(#{JDGM_CFMTN_YMD2},'-','')]]>
		    </if>
		    <if test="SPRVSN_DEPT_NM != '' and SPRVSN_DEPT_NM != null">
		      AND L.SPRVSN_DEPT_NM LIKE '%'||#{SPRVSN_DEPT_NM}||'%'
		    </if>
		    <if test="CT_CD != '' and CT_CD != null">
		      AND LI.CT_CD = #{CT_CD}
		    </if>
		    
		    <if test="LWS_CNCPR != '' and LWS_CNCPR != null">
		      AND L.LWS_MNG_NO IN (
		        SELECT ZZ.LWS_MNG_NO
		        FROM TB_LWS_INST ZZ
		        WHERE ZZ.INST_MNG_NO IN (
		            SELECT Z.INST_MNG_NO
		            FROM TB_LWS_CNCPR Z
		            WHERE Z.LWS_CNCPR_NM LIKE '%'||#{LWS_CNCPR}||'%'
		        )
		      )
		    </if>
		    
		    <if test="LWS_UP_TYPE_CD != '' and LWS_UP_TYPE_CD != null">
		      AND L.LWS_UP_TYPE_CD = #{LWS_UP_TYPE_CD}
		    </if>
		    <if test="LWS_LWR_TYPE_CD != '' and LWS_LWR_TYPE_CD != null">
		      AND L.LWS_LWR_TYPE_CD = #{LWS_LWR_TYPE_CD}
		    </if>
		    <if test="JDGM_UP_TYPE_CD != '' and JDGM_UP_TYPE_CD != null">
		      AND LI.JDGM_UP_TYPE_CD = #{JDGM_UP_TYPE_CD}
		    </if>
		    
		    <if test="PROGRESSCD != '' and PROGRESSCD != null">
		      AND (
		          CASE WHEN LI.INST_MNG_NO IS NULL THEN '소장접수'
		               WHEN LI.JDGM_CFMTN_YMD IS NOT NULL THEN '판결확정'
		               ELSE (
		                   (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = L.LAST_INST_CD AND Z.USE_YN = 'Y') || 
		                   (
		                    CASE WHEN LI.JDGM_ADJ_YMD IS NULL THEN ' 진행'
		                         WHEN LI.JDGM_ADJ_YMD IS NOT NULL THEN ' 판결'
		                    END
		                   )
		               )
		          END
		      ) = #{PROGRESSCD}
		    </if>
		    
		    <if test="INST_CD != '' and INST_CD != null">
		      AND LI.INST_CD = #{INST_CD}
		    </if>
		    
		    <if test="LWYR_MNG_NO != '' and LWYR_MNG_NO != null">
		      AND D.LWYR_MNG_NO = #{LWYR_MNG_NO}
		    </if>
		    
		    <if test="LWS_NO != '' and LWS_NO != null">
		      AND L.LWS_NO LIKE '%'||#{LWS_NO}||'%'
		    </if>
		    
		    <if test="LWS_INCDNT_NM != '' and LWS_INCDNT_NM != null">
		      AND (
		           L.LWS_INCDNT_NM LIKE '%'||#{LWS_INCDNT_NM}||'%' OR
		           L.INCDNT_OTLN LIKE '%'||#{LWS_INCDNT_NM}||'%' OR
		           L.MAIN_CN LIKE '%'||#{LWS_INCDNT_NM}||'%' OR
		           L.RMRK_CN LIKE '%'||#{LWS_INCDNT_NM}||'%'
		          )
		      OR L.LWS_MNG_NO IN (
		          SELECT Z.LWS_MNG_NO
		          FROM TB_LWS_INST Z
		          WHERE Z.RMRK_CN LIKE '%'||#{LWS_INCDNT_NM}||'%'
		      )
		    </if>
		    <if test="INCDNT_NO != '' and INCDNT_NO != null">
		      AND L.LWS_MNG_NO IN (
		          SELECT Z.LWS_MNG_NO FROM TB_LWS_INST Z WHERE REPLACE(Z.INCDNT_NO,'@','') LIKE '%'||#{INCDNT_NO}||'%'
		      )
		    </if>
		    <if test="IMPT_LWS_YN != '' and IMPT_LWS_YN != null">
	          AND L.IMPT_LWS_YN = #{IMPT_LWS_YN}
	        </if>
 		    <if test="INCDNT_SE_CD != '' and INCDNT_SE_CD != null">
	          AND LI.INCDNT_SE_CD = #{INCDNT_SE_CD}
	        </if>
		)
	</select>
	
	<select id="selectConsultSuitList" resultType="HashMap">
		/* suitSql.selectConsultSuitList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM (
		        SELECT LWS_RQST_MNG_NO    /* 소송의뢰관리번호 */
		             , LWS_UP_TYPE_CD     /* 소송상위유형코드 */
		             , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		             , LWS_LWR_TYPE_CD    /* 소송하위유형코드 */
		             , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		             , IMPT_LWS_YN        /* 중요소송여부 */
		             , LWS_INCDNT_NM      /* 소송사건명 */
		             , PRGRS_STTS_NM      /* 진행상태명 */
		             , LWS_RLT_NM         /* 소송상대명 */
		             , LWS_RQST_EMP_NM    /* 소송의뢰직원명 */
		             , LWS_RQST_EMP_NO    /* 소송의뢰직원번호 */
		             , LWS_RQST_DEPT_NM   /* 소송의뢰부서명 */
		             , LWS_RQST_DEPT_NO   /* 소송의뢰부서번호 */
		             , TO_CHAR(TO_DATE(LWS_RQST_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS LWS_RQST_YMD /* 소송의뢰일자 */
		             , RQST_RCPT_EMP_NM   /* 의뢰접수직원명 */
		             , RQST_RCPT_EMP_NO   /* 의뢰접수직원번호 */
		             , TO_CHAR(TO_DATE(RQST_RCPT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS RQST_RCPT_YMD /* 의뢰접수일자 */
		        FROM TB_LWS_RQST
		        WHERE 1=1
		        <if test="PRGRS_STTS_NM != null and PRGRS_STTS_NM != ''">
		          AND PRGRS_STTS_NM = #{PRGRS_STTS_NM}
		        </if>
		        <if test="gbn != '' and gbn != null">
		          <if test='gbn == "main"'>
		        ORDER BY B.LWS_RQST_YMD ASC
		          </if>
		        </if>
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		    <if test="pageno != null and pageno != ''">
		        page = #{pageno}
		    </if>
		    </if>
		</trim>
	</select>
	
	<select id="selectConsultSuitListCnt" resultType="int">
		/* suitSql.selectConsultSuitListCnt */
		SELECT COUNT(*)
		FROM (
		    SELECT LWS_RQST_MNG_NO    /* 소송의뢰관리번호 */
		         , LWS_UP_TYPE_CD     /* 소송상위유형코드 */
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		         , LWS_LWR_TYPE_CD    /* 소송하위유형코드 */
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		         , IMPT_LWS_YN        /* 중요소송여부 */
		         , LWS_INCDNT_NM      /* 소송사건명 */
		         , PRGRS_STTS_NM      /* 진행상태명 */
		         , LWS_RLT_NM         /* 소송상대명 */
		         , LWS_RQST_EMP_NM    /* 소송의뢰직원명 */
		         , LWS_RQST_EMP_NO    /* 소송의뢰직원번호 */
		         , LWS_RQST_DEPT_NM   /* 소송의뢰부서명 */
		         , LWS_RQST_DEPT_NO   /* 소송의뢰부서번호 */
		         , LWS_RQST_YMD       /* 소송의뢰일자 */
		         , RQST_RCPT_EMP_NM   /* 의뢰접수직원명 */
		         , RQST_RCPT_EMP_NO   /* 의뢰접수직원번호 */
		         , RQST_RCPT_YMD      /* 의뢰접수일자 */
		    FROM TB_LWS_RQST
		    WHERE 1=1
		    <if test="PRGRS_STTS_NM != null and PRGRS_STTS_NM != ''">
		      AND PRGRS_STTS_NM = #{PRGRS_STTS_NM}
		    </if>
		)
	</select>
	
	<select id="getSuitSprvsn" resultType="HashMap">
		/* suitSql.getSuitSprvsn */
		SELECT A.SPRVSN_DEPT_NM
		     , A.SPRVSN_DEPT_NO
		     , A.SPRVSN_EMP_NM
		     , A.SPRVSN_EMP_NO
		     , A.FLGLW_YMD
		FROM TB_LWS_MNG A
		WHERE A.LWS_MNG_NO = #{LWS_MNG_NO}
	</select>
	
	<select id="getSuitDetail" resultType="HashMap">
		/* suitSql.getSuitDetail */
		SELECT A.LWS_MNG_NO
		     , A.MENU_MNG_NO
		     , A.LWS_NO
		     , A.LWS_SE
		     , CASE WHEN A.LWS_SE = 'J' THEN '제소' ELSE '피소' END LWS_SE_NM
		     , A.LWS_UP_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , A.LWS_LWR_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO =A. LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		     
		     , CASE WHEN REGEXP_LIKE(A.FLGLW_YMD, '^\d{4}-\d{2}-\d{2}$') THEN  TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE A.FLGLW_YMD
		       END AS FLGLW_YMD
		     , CASE WHEN REGEXP_LIKE(A.ADMA_RCPT_YMD, '^\d{4}-\d{2}-\d{2}$') THEN  TO_CHAR(TO_DATE(A.ADMA_RCPT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')
		            ELSE A.ADMA_RCPT_YMD
		       END AS ADMA_RCPT_YMD
		     , A.SPRVSN_DEPT_NM
		     , A.SPRVSN_DEPT_NO
		     , A.SPRVSN_EMP_NM
		     , A.SPRVSN_EMP_NO
		     , A.SPRVSN_TMLDR_NO
		     , A.SPRVSN_TMLDR_NM
		     , A.ETC_SPRVSN_DEPT_NM
		     , A.INCDNT_REL_LAND_NM
		     
		     , A.LAST_INST_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LAST_INST_CD AND Z.USE_YN = 'Y') AS LAST_INST_NM
		     , A.TRMN_YN
		     , A.IMPT_LWS_YN
		     , A.LWS_INCDNT_NM
		     , A.INCDNT_OTLN
		     , A.MAIN_CN
		     , A.LWS_CONF_DATA_CN
		     , A.RMRK_CN
		     
		     , CASE WHEN B.INST_MNG_NO IS NULL THEN '소장접수'
		            WHEN B.JDGM_CFMTN_YMD IS NOT NULL THEN '판결확정'
		            ELSE (
		                (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LAST_INST_CD AND Z.USE_YN = 'Y') || 
		                (
		                 CASE WHEN B.JDGM_ADJ_YMD IS NULL THEN ' 진행'
		                      WHEN B.JDGM_ADJ_YMD IS NOT NULL THEN ' 판결'
		                 END
		                )
		            )
		       END LWS_PRGRS_STTS
		     
		     , A.DEL_YN
		     , A.WRTR_EMP_NM
		     , A.WRTR_EMP_NO
		     , A.WRT_YMD
		     , A.WRT_DEPT_NM
		     , A.WRT_DEPT_NO
		     , B.INST_MNG_NO
		FROM TB_LWS_MNG A LEFT OUTER JOIN TB_LWS_INST B ON A.LWS_MNG_NO = B.LWS_MNG_NO AND A.LAST_INST_CD = B.INST_CD
		WHERE A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND ROWNUM = 1
		ORDER BY B.INST_MNG_NO DESC
	</select>
	
	<select id="getSuitConsultDetail" resultType="HashMap">
		/* suitSql.getSuitConsultDetail */
		SELECT LWS_RQST_MNG_NO         /* 소송의뢰관리번호 */
		     , LWS_UP_TYPE_CD          /* 소송상위유형코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , LWS_LWR_TYPE_CD         /* 소송하위유형코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		     , IMPT_LWS_YN             /* 중요소송여부 */
		     , LWS_INCDNT_NM           /* 소송사건명 */
		     , PRGRS_STTS_NM           /* 진행상태명 */
		     , LWS_RLT_NM              /* 소송상대명 */
		     , LWS_RQST_EMP_NM         /* 소송의뢰직원명 */
		     , LWS_RQST_EMP_NO         /* 소송의뢰직원번호 */
		     , LWS_RQST_DEPT_NM        /* 소송의뢰부서명 */
		     , LWS_RQST_DEPT_NO        /* 소송의뢰부서번호 */
		     , TO_CHAR(TO_DATE(LWS_RQST_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS LWS_RQST_YMD  /* 소송의뢰일자 */
		     , RQST_RCPT_EMP_NM        /* 의뢰접수직원명 */
		     , RQST_RCPT_EMP_NO        /* 의뢰접수직원번호 */
		     , TO_CHAR(TO_DATE(RQST_RCPT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS RQST_RCPT_YMD  /* 의뢰접수일자 */
		     , INCDNT_OTLN             /* 사건개요 */
		     , MAIN_CN                 /* 주요내용 */
		     , RMRK_CN                 /* 비고내용 */
		     , LWS_CONF_DATA_CN        /* 소송입증자료내용 */
		     , LWS_MNG_NO              /* 소송관리번호 */
		FROM TB_LWS_RQST
		WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</select>
	
	<select id="getLwsNo" resultType="String">
		/* suitSql.getLwsNo */
		SELECT CASE WHEN A.CNT = 0 THEN (SELECT TO_CHAR(SYSDATE, 'YYYY') FROM DUAL)||'-0001'
		            ELSE (
		                SELECT D.TODAY2||'-'||LPAD(MAX(TO_NUMBER(REPLACE(C.LWS_NO, D.TODAY2||'-')))+1, 4, '0')
		                FROM TB_LWS_MNG C,
		                     (
		                      SELECT TO_CHAR(SYSDATE, '%YYYY') AS TODAY1,
		                             TO_CHAR(SYSDATE, 'YYYY') AS TODAY2
		                      FROM DUAL
		                     ) D
		                WHERE C.LWS_UP_TYPE_CD = #{LWS_UP_TYPE_CD}
		                  AND C.LWS_NO LIKE D.TODAY1||'%'
		            )
		        END AS LWS_NO
		FROM (
		    SELECT COUNT(L.LWS_MNG_NO) AS CNT
		    FROM TB_LWS_MNG L,
		         (SELECT TO_CHAR(SYSDATE, '%YYYY') AS TODAY FROM DUAL) D
		    WHERE L.LWS_UP_TYPE_CD = #{LWS_UP_TYPE_CD}
		      AND L.LWS_NO LIKE TODAY||'%'
		) A
	</select>
	
	<insert id="insertSuitInfo" parameterType="HashMap">
		<selectKey keyProperty="LWS_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertSuitInfo */
		INSERT INTO TB_LWS_MNG (
		    LWS_MNG_NO          /* 소송관리번호     */
		  , MENU_MNG_NO         /* 메뉴관리번호     */
		  , LWS_NO              /* 소송번호         */
		  , LWS_SE              /* 소송구분         */
		  , LWS_UP_TYPE_CD      /* 소송상위유형코드 */
		  , LWS_LWR_TYPE_CD     /* 소송하위유형코드 */
		  
		  , FLGLW_YMD           /* 소제기일자 */
		  , ADMA_RCPT_YMD       /* 행정청접수일자 */
		  
		  , SPRVSN_DEPT_NM      /* 주관부서명       */
		  , SPRVSN_DEPT_NO      /* 주관부서번호     */
		  , SPRVSN_EMP_NM       /* 주관부서직원명   */
		  , SPRVSN_EMP_NO       /* 주관부서직원번호 */
		  
		  , SPRVSN_TMLDR_NO
		  , SPRVSN_TMLDR_NM
		  
		  , ETC_SPRVSN_DEPT_NM  /* 기타주관부서명   */
		  , INCDNT_REL_LAND_NM  /* 사건관련토지     */
		  
		  , LAST_INST_CD        /* 최종심급코드     */
		  , TRMN_YN             /* 종결여부         */
		  , IMPT_LWS_YN         /* 중요소송여부     */
		  , MER_YN              /* 병합여부         */
		  , LWS_INCDNT_NM       /* 소송사건명       */
		  , INCDNT_OTLN         /* 사건개요         */
		  , MAIN_CN             /* 주요내용         */
		  , LWS_CONF_DATA_CN    /* 소송입증자료내용 */
		  , RMRK_CN             /* 비고내용         */
		  , DEL_YN              /* 삭제여부         */
		  , WRTR_EMP_NM         /* 작성직원명       */
		  , WRTR_EMP_NO         /* 작성직원번호     */
		  , WRT_YMD             /* 작성일자         */
		  , WRT_DEPT_NM         /* 작성부서명       */
		  , WRT_DEPT_NO         /* 작성부서번호     */
		) VALUES (
		    #{LWS_MNG_NO}
		  , #{MENU_MNG_NO}
		  , #{LWS_NO}
		  , #{LWS_SE}
		  , #{LWS_UP_TYPE_CD}
		  , #{LWS_LWR_TYPE_CD}
		  
		  , REPLACE(#{FLGLW_YMD}, '-', '')
		  , REPLACE(#{ADMA_RCPT_YMD}, '-', '')
		  
		  , #{SPRVSN_DEPT_NM}
		  , #{SPRVSN_DEPT_NO}
		  , #{SPRVSN_EMP_NM}
		  , #{SPRVSN_EMP_NO}
		  
		  , #{SPRVSN_TMLDR_NO}
		  , #{SPRVSN_TMLDR_NM}
		  
		  , #{ETC_SPRVSN_DEPT_NM}
		  , #{INCDNT_REL_LAND_NM}
		  
		  , '10090007'
		  , 'N'
		  , #{IMPT_LWS_YN}
		  , 'N'
		  , #{LWS_INCDNT_NM}
		  , #{INCDNT_OTLN}
		  , #{MAIN_CN}
		  , #{LWS_CONF_DATA_CN}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateSuitInfo" parameterType="HashMap">
		/* suitSql.updateSuitInfo */
		UPDATE TB_LWS_MNG
		SET LWS_SE             = #{LWS_SE}
		  , LWS_LWR_TYPE_CD    = #{LWS_LWR_TYPE_CD}
		  , FLGLW_YMD          = REPLACE(#{FLGLW_YMD}, '-', '')
		  , ADMA_RCPT_YMD      = REPLACE(#{ADMA_RCPT_YMD}, '-', '')
		  , SPRVSN_DEPT_NM     = #{SPRVSN_DEPT_NM}
		  , SPRVSN_DEPT_NO     = #{SPRVSN_DEPT_NO}
		  , SPRVSN_EMP_NM      = #{SPRVSN_EMP_NM}
		  , SPRVSN_EMP_NO      = #{SPRVSN_EMP_NO}
		  , ETC_SPRVSN_DEPT_NM = #{ETC_SPRVSN_DEPT_NM}
		  , INCDNT_REL_LAND_NM = #{INCDNT_REL_LAND_NM}
		  , IMPT_LWS_YN        = #{IMPT_LWS_YN}
		  , LWS_INCDNT_NM      = #{LWS_INCDNT_NM}
		  , INCDNT_OTLN        = #{INCDNT_OTLN}
		  , MAIN_CN            = #{MAIN_CN}
		  , LWS_CONF_DATA_CN   = #{LWS_CONF_DATA_CN}
		  , RMRK_CN            = #{RMRK_CN}
		  , MDFCN_EMP_NM       = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO       = #{WRTR_EMP_NO}
		  , MDFCN_YMD          = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM      = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO      = #{WRT_DEPT_NO}
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
	</update>
	
	<insert id="insertSuitConsultInfo" parameterType="HashMap">
		<selectKey keyProperty="LWS_RQST_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertSuitConsultInfo */
		INSERT INTO TB_LWS_RQST (
		    LWS_RQST_MNG_NO     /* 소송의뢰관리번호 */
		  , LWS_UP_TYPE_CD      /* 소송상위유형코드 */
		  , LWS_LWR_TYPE_CD     /* 소송하위유형코드 */
		  , IMPT_LWS_YN         /* 중요소송여부     */
		  , LWS_INCDNT_NM       /* 소송사건명       */
		  , PRGRS_STTS_NM       /* 진행상태명       */
		  , LWS_RLT_NM          /* 소송상대명       */
		  , LWS_RQST_EMP_NM     /* 소송의뢰직원명   */
		  , LWS_RQST_EMP_NO     /* 소송의뢰직원번호 */
		  , LWS_RQST_DEPT_NM    /* 소송의뢰부서명   */
		  , LWS_RQST_DEPT_NO    /* 소송의뢰부서번호 */
		  , LWS_RQST_YMD        /* 소송의뢰일자     */
		  , INCDNT_OTLN         /* 사건개요         */
		  , MAIN_CN             /* 주요내용         */
		  , RMRK_CN             /* 비고내용         */
		  , LWS_CONF_DATA_CN    /* 소송입증자료내용 */
		  , DEL_YN              /* 삭제여부         */
		  , WRTR_EMP_NM         /* 작성직원명       */
		  , WRTR_EMP_NO         /* 작성직원번호     */
		  , WRT_YMD             /* 작성일자         */
		  , WRT_DEPT_NM         /* 작성부서명       */
		  , WRT_DEPT_NO         /* 작성부서번호     */
		) VALUES (
		    #{LWS_RQST_MNG_NO}
		  , #{LWS_UP_TYPE_CD}
		  , #{LWS_LWR_TYPE_CD}
		  , #{IMPT_LWS_YN}
		  , #{LWS_INCDNT_NM}
		  , '작성중'
		  , #{LWS_RLT_NM}
		  , #{LWS_RQST_EMP_NM}
		  , #{LWS_RQST_EMP_NO}
		  , #{LWS_RQST_DEPT_NM}
		  , #{LWS_RQST_DEPT_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{INCDNT_OTLN}
		  , #{MAIN_CN}
		  , #{RMRK_CN}
		  , #{LWS_CONF_DATA_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateSuitConsultInfo" parameterType="HashMap">
		/* suitSql.updateSuitConsultInfo */
		UPDATE TB_LWS_RQST
		SET LWS_UP_TYPE_CD   = #{LWS_UP_TYPE_CD}    /* 소송상위유형코드 */
		  , LWS_LWR_TYPE_CD  = #{LWS_LWR_TYPE_CD}   /* 소송하위유형코드 */
		  , IMPT_LWS_YN      = #{IMPT_LWS_YN}       /* 중요소송여부 */
		  , LWS_INCDNT_NM    = #{LWS_INCDNT_NM}     /* 소송사건명 */
		  , LWS_RLT_NM       = #{LWS_RLT_NM}        /* 소송상대명 */
		  , INCDNT_OTLN      = #{INCDNT_OTLN}       /* 사건개요 */
		  , MAIN_CN          = #{MAIN_CN}           /* 주요내용 */
		  , RMRK_CN          = #{RMRK_CN}           /* 비고내용 */
		  , LWS_CONF_DATA_CN = #{LWS_CONF_DATA_CN}  /* 소송입증자료내용 */
		  , MDFCN_EMP_NM     = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO     = #{WRTR_EMP_NO}
		  , MDFCN_YMD        = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM    = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO    = #{WRT_DEPT_NO}
		WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</update>
	
	<update id="updateSuitConsultProg" parameterType="HashMap">
		/* suitSql.updateSuitConsultInfo */
		UPDATE TB_LWS_RQST
		SET PRGRS_STTS_NM    = #{PRGRS_STTS_NM}
		<if test="empno != '' and empno != null">
		  , RQST_RCPT_EMP_NM = #{empnm}
		  , RQST_RCPT_EMP_NO = #{empno}
		  , RQST_RCPT_YMD    = to_char(sysdate,'YYYYMMDD')
		</if>
		WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</update>
	
	<update id="updateSuitConsultMngNo" parameterType="HashMap">
		/* suitSql.updateSuitConsultMngNo */
		UPDATE TB_LWS_RQST
		SET LWS_MNG_NO = #{LWS_MNG_NO}
		WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</update>
	
	<delete id="deleteSuitInfo">
		/* suitSql.deleteSuitInfo */
		DELETE FROM TB_LWS_MNG WHERE LWS_MNG_NO = #{LWS_MNG_NO}
	</delete>
	
	<delete id="deleteSuitConsultInfo">
		/* suitSql.deleteSuitConsultInfo */
		DELETE FROM TB_LWS_RQST WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</delete>
	
	<insert id="insertSuitToConsult" parameterType="HashMap">
		<selectKey keyProperty="LWS_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertSuitToConsult */
		INSERT INTO TB_LWS_MNG (
		    LWS_MNG_NO
		  , LWS_NO
		  , LWS_UP_TYPE_CD
		  , LWS_LWR_TYPE_CD
		  , MENU_MNG_NO
		  , LWS_SE
		  , LAST_INST_CD
		  , TRMN_YN
		  , IMPT_LWS_YN
		  , LWS_INCDNT_NM
		  , INCDNT_OTLN
		  , MAIN_CN
		  , RMRK_CN
		  , LWS_CONF_DATA_CN
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		  , WRT_YMD
		  , SPRVSN_DEPT_NM
		  , SPRVSN_DEPT_NO
		  , SPRVSN_EMP_NM
		  , SPRVSN_EMP_NO
		  , FLGLW_YMD
		  , ADMA_RCPT_YMD
		) 
		SELECT #{LWS_MNG_NO}
		     , #{LWS_NO}
		     , LWS_UP_TYPE_CD
		     , LWS_LWR_TYPE_CD
		     , (SELECT MENU_MNG_NO FROM TB_COM_MENU WHERE MENU_TTL = '소송관리' AND USE_YN = 'Y') AS MENU_MNG_NO
		     , 'J' AS LWS_SE
		     , '10090007' AS LAST_INST_CD
		     , 'N' AS TRMN_YN
		     , IMPT_LWS_YN
		     , LWS_INCDNT_NM
		     , INCDNT_OTLN
		     , MAIN_CN
		     , RMRK_CN
		     , LWS_CONF_DATA_CN
		     , 'N' AS DEL_YN
		     , LWS_RQST_EMP_NM AS WRTR_EMP_NM
		     , LWS_RQST_EMP_NO AS WRTR_EMP_NO
		     , LWS_RQST_DEPT_NM AS WRT_DEPT_NM
		     , LWS_RQST_DEPT_NO AS WRT_DEPT_NO
		     , RQST_RCPT_YMD AS WRT_YMD
		     , LWS_RQST_DEPT_NM AS SPRVSN_DEPT_NM
		     , LWS_RQST_DEPT_NO AS SPRVSN_DEPT_NO
		     , LWS_RQST_EMP_NM AS SPRVSN_EMP_NM
		     , LWS_RQST_EMP_NO AS SPRVSN_EMP_NO
		     , RQST_RCPT_YMD AS FLGLW_YMD
		     , RQST_RCPT_YMD AS ADMA_RCPT_YMD
		FROM TB_LWS_RQST
		WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</insert>
	
	<insert id="insertCaseToConsult" parameterType="HashMap">
		<selectKey keyProperty="INST_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertCaseToConsult */
		INSERT INTO TB_LWS_INST (
		    INST_MNG_NO
		  , LWS_MNG_NO
		  , INST_CD
		  , INCDNT_SE_CD
		  , FLGLW_YMD
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		  , WRT_YMD
		)
		SELECT #{INST_MNG_NO}
		     , #{LWS_MNG_NO}
		     , '10090007' AS INST_CD
		     , CASE WHEN IMPT_LWS_YN = 'Y' THEN 'B'
		            ELSE 'A'
		       END INCDNT_SE_CD
		     , to_char(sysdate,'YYYYMMDD') AS FLGLW_YMD
		     , 'N' AS DEL_YN
		     , LWS_RQST_EMP_NM AS WRTR_EMP_NM
		     , LWS_RQST_EMP_NO AS WRTR_EMP_NO
		     , LWS_RQST_DEPT_NM AS WRT_DEPT_NM
		     , LWS_RQST_DEPT_NO AS WRT_DEPT_NO
		     , RQST_RCPT_YMD AS WRT_YMD
		FROM TB_LWS_RQST
		WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</insert>
	
	<insert id="insertEmpToConsult" parameterType="HashMap">
		<selectKey keyProperty="LWS_CNCPR_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertEmpToConsult */
		INSERT INTO TB_LWS_CNCPR (
		    LWS_CNCPR_MNG_NO
		  , INST_MNG_NO
		  , LWS_CNCPR_SE
		  , LWS_CNCPR_NM
		  , LWS_CNCPR_CNPL
		  , LWS_CNCPR_ADDR
		  , RMRK_CN
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		  , WRT_YMD
		)
		SELECT #{LWS_CNCPR_MNG_NO}
		     , #{INST_MNG_NO}
		     , 'PI' AS LWS_CNCPR_SE
		     , LWS_RLT_NM AS LWS_CNCPR_NM
		     , '' AS LWS_CNCPR_CNPL
		     , '' AS LWS_CNCPR_ADDR
		     , '소송의뢰 등록건' AS RMRK_CN
		     , 'N' AS DEL_YN
		     , LWS_RQST_EMP_NM AS WRTR_EMP_NM
		     , LWS_RQST_EMP_NO AS WRTR_EMP_NO
		     , LWS_RQST_DEPT_NM AS WRT_DEPT_NM
		     , LWS_RQST_DEPT_NO AS WRT_DEPT_NO
		     , RQST_RCPT_YMD AS WRT_YMD
		FROM TB_LWS_RQST
		WHERE LWS_RQST_MNG_NO = #{LWS_RQST_MNG_NO}
	</insert>
	
	<select id="getCaseDetail" resultType="HashMap">
		/* suitSql.getCaseDetail */
		SELECT INST_MNG_NO                /* 심급관리번호 */
		     , LWS_MNG_NO                 /* 소송관리번호 */
		     , INST_CD                    /* 심급코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = INST_CD AND Z.USE_YN = 'Y') AS INST_NM
		     , INST_INCDNT_NM             /* 심급사건명 */
		     , INCDNT_SE_CD
		     , CASE WHEN INCDNT_SE_CD = 'A' THEN '일반사건'
		            WHEN INCDNT_SE_CD = 'B' THEN '주요소송'
		            WHEN INCDNT_SE_CD = 'C' THEN '특별관리소송'
		       END INCDNT_SE_NM
		     , PRGRS_STTS_CD              /* 진행상태코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = PRGRS_STTS_CD AND Z.USE_YN = 'Y') AS PRGRS_STTS_NM
		     , TO_CHAR(TO_DATE(FLGLW_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLGLW_YMD  /* 소제기일자 */
		     , REPLACE(INCDNT_NO, '@', '') AS INCDNT_NO /* 사건번호 */
		     , INCDNT_NO AS WINCDNT_NO
		     , CT_CD                      /* 법원코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = CT_CD AND Z.USE_YN = 'Y') AS CT_NM
		     , JSDP_NM                    /* 재판부명 */
		     , PPOF_INCDNT_NO             /* 검찰청사건번호 */
		     , JNT_FLFMT_YN               /* 공동수행여부 */
		     , PPOF_LWS_FLFMT_EMP_NM      /* 검찰청소송수행자 */
		     , TKCG_PROC_NM               /* 담당검사 */
		     , PLNTF_AGT_NM               /* 원고대리인명 */
		     , DFND_AGT_NM                /* 피고대리인명 */
		     , TO_CHAR( LWS_EQVL , '999,999,999,999,999') AS LWS_EQVL          /* 소송가액 */
		     , TO_CHAR( CHG_LWS_EQVL , '999,999,999,999,999') AS CHG_LWS_EQVL  /* 변경소송가액 */
		     , RMRK_CN                    /* 비고내용 */
		     , JDGM_UP_TYPE_CD            /* 판결상위유형코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = JDGM_UP_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_UP_TYPE_NM
		     , JDGM_LWR_TYPE_CD           /* 판결하위유형코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = JDGM_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_LWR_TYPE_NM
		     , WIN_RT_NM AS WIN_RT                     /* 승소율 */
		     , TO_CHAR(TO_DATE(JDGM_ADJ_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS JDGM_ADJ_YMD      /* 판결선고일자 */
		     , TO_CHAR(TO_DATE(RLNG_TMTL_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS RLNG_TMTL_YMD    /* 판결문송달일자 */
		     , TO_CHAR(TO_DATE(JDGM_CFMTN_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS JDGM_CFMTN_YMD  /* 판결확정일자 */
		     , TO_CHAR( JDGM_AMT , '999,999,999,999,999') AS JDGM_AMT          /* 판결금액 */
		     , TO_CHAR( JDGM_AMT_INT , '999,999,999,999,999') AS JDGM_AMT_INT  /* 판결금이자금액 */
		     , JDGM_CN                    /* 판결내용 */
		     , APLY_INCDNT_YN             /* 신청사건여부 */
		     , APLY_INCDNT_FAU_RSN        /* 신청사건불이행사유 */
		FROM TB_LWS_INST
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<update id="updateSuitLastInst" parameterType="HashMap">
		/* suitSql.updateSuitLastInst */
		UPDATE TB_LWS_MNG
		SET LAST_INST_CD = (
		    SELECT CD_MNG_NO
		    FROM (
		        SELECT DISTINCT CD_MNG_NO, A.SORT_SEQ
		        FROM TB_COM_CD A, TB_LWS_INST B
		        WHERE A.CD_LCLSF_ENG_NM = 'CASECD'
		          AND B.LWS_MNG_NO = #{LWS_MNG_NO}
		          AND A.CD_MNG_NO = B.INST_CD
		        ORDER BY A.SORT_SEQ DESC
		    )
		    WHERE ROWNUM = 1
		)
		<if test="JDGM_CFMTN_YMD!='' and JDGM_CFMTN_YMD!=null">
		  , TRMN_YN = 'Y'
		</if>
		<if test="JDGM_CFMTN_YMD=='' or JDGM_CFMTN_YMD==null">
		  , TRMN_YN = 'N'
		</if>
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
	</update>
	
	<update id="updateSuitEnd" parameterType="HashMap">
		/* suitSql.updateSuitEnd */
		UPDATE TB_LWS_MNG
		SET TRMN_YN = #{TRMN_YN}
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
	</update>
	
	<insert id="insertCaseInfo" parameterType="HashMap">
		<selectKey keyProperty="INST_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertCaseInfo */
		INSERT INTO TB_LWS_INST (
		    INST_MNG_NO             /* 심급관리번호       */
		  , LWS_MNG_NO              /* 소송관리번호       */
		  , INST_CD                 /* 심급코드           */
		  , INCDNT_SE_CD            /* 사건구분코드       */
		  , INST_INCDNT_NM          /* 심급사건명         */
		  , FLGLW_YMD               /* 소제기일자         */
		  , INCDNT_NO               /* 사건번호           */
		  , CT_CD                   /* 법원코드           */
		  , JSDP_NM                 /* 재판부명           */
		  , PPOF_INCDNT_NO          /* 검찰청사건번호     */
		  , JNT_FLFMT_YN            /* 공동수행여부       */
		  , PPOF_LWS_FLFMT_EMP_NM   /* 검찰청소송수행자   */
		  , TKCG_PROC_NM            /* 담당검사           */
		  , PLNTF_AGT_NM            /* 원고대리인명       */
		  , DFND_AGT_NM             /* 피고대리인명       */
		  , LWS_EQVL                /* 소송가액           */
		  , CHG_LWS_EQVL            /* 변경소송가액       */
		  , JDGM_UP_TYPE_CD         /* 판결상위유형코드   */
		  , WIN_RT_NM               /* 승소율             */
		  , JDGM_ADJ_YMD            /* 판결선고일자       */
		  , RLNG_TMTL_YMD           /* 판결문송달일자     */
		  , JDGM_CFMTN_YMD          /* 판결확정일자       */
		  , JDGM_AMT                /* 판결금액           */
		  , JDGM_AMT_INT            /* 판결금이자금액     */
		  , JDGM_CN                 /* 판결내용           */
		  , APLY_INCDNT_YN          /* 신청사건여부       */
		  , APLY_INCDNT_FAU_RSN     /* 신청사건불이행사유 */
		  , RMRK_CN                 /* 비고내용           */
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		) VALUES (
		    #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{INST_CD}
		  , #{INCDNT_SE_CD}
		  , #{INST_INCDNT_NM}
		  , REPLACE(#{FLGLW_YMD}, '-', '')
		  , #{INCDNT_NO}
		  , #{CT_CD}
		  , #{JSDP_NM}
		  , #{PPOF_INCDNT_NO}
		  , #{JNT_FLFMT_YN}
		  , #{PPOF_LWS_FLFMT_EMP_NM}
		  , #{TKCG_PROC_NM}
		  , #{PLNTF_AGT_NM}
		  , #{DFND_AGT_NM}
		  , #{LWS_EQVL}
		  , #{CHG_LWS_EQVL}
		  , #{JDGM_UP_TYPE_CD}
		  , #{WIN_RT}
		  , REPLACE(#{JDGM_ADJ_YMD}, '-', '')
		  , REPLACE(#{RLNG_TMTL_YMD}, '-', '')
		  , REPLACE(#{JDGM_CFMTN_YMD}, '-', '')
		  , #{JDGM_AMT}
		  , #{JDGM_AMT_INT}
		  , #{JDGM_CN}
		  , #{APLY_INCDNT_YN}
		  , #{APLY_INCDNT_FAU_RSN}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateCaseInfo" parameterType="HashMap">
		/* suitSql.updateCaseInfo */
		UPDATE TB_LWS_INST
		SET INST_CD               = #{INST_CD}
		  , INCDNT_SE_CD          = #{INCDNT_SE_CD}
		  , INST_INCDNT_NM        = #{INST_INCDNT_NM}
		  , PRGRS_STTS_CD         = #{PRGRS_STTS_CD}
		  , FLGLW_YMD             = REPLACE(#{FLGLW_YMD}, '-', '')
		  , INCDNT_NO             = #{INCDNT_NO}
		  , CT_CD                 = #{CT_CD}
		  , JSDP_NM               = #{JSDP_NM}
		  , PPOF_INCDNT_NO        = #{PPOF_INCDNT_NO}
		  , JNT_FLFMT_YN          = #{JNT_FLFMT_YN}
		  , PPOF_LWS_FLFMT_EMP_NM = #{PPOF_LWS_FLFMT_EMP_NM}
		  , TKCG_PROC_NM          = #{TKCG_PROC_NM}
		  , PLNTF_AGT_NM          = #{PLNTF_AGT_NM}
		  , DFND_AGT_NM           = #{DFND_AGT_NM}
		  , LWS_EQVL              = #{LWS_EQVL}
		  , CHG_LWS_EQVL          = #{CHG_LWS_EQVL}
		  , JDGM_UP_TYPE_CD       = #{JDGM_UP_TYPE_CD}
		  , WIN_RT_NM             = #{WIN_RT}
		  , JDGM_ADJ_YMD          = REPLACE(#{JDGM_ADJ_YMD}, '-', '')
		  , RLNG_TMTL_YMD         = REPLACE(#{RLNG_TMTL_YMD}, '-', '')
		  , JDGM_CFMTN_YMD        = REPLACE(#{JDGM_CFMTN_YMD}, '-', '')
		  , JDGM_AMT              = #{JDGM_AMT}
		  , JDGM_AMT_INT          = #{JDGM_AMT_INT}
		  , JDGM_CN               = #{JDGM_CN}
		  , APLY_INCDNT_YN        = #{APLY_INCDNT_YN}
		  , APLY_INCDNT_FAU_RSN   = #{APLY_INCDNT_FAU_RSN}
		  , RMRK_CN               = #{RMRK_CN}
		  , MDFCN_EMP_NM          = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO          = #{WRTR_EMP_NO}
		  , MDFCN_YMD             = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM         = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO         = #{WRT_DEPT_NO}
		WHERE INST_MNG_NO         = #{INST_MNG_NO}
	</update>
	
	<delete id="deleteCaseInfo">
		/* suitSql.deleteCaseInfo */
		DELETE FROM TB_LWS_INST WHERE INST_MNG_NO = #{INST_MNG_NO}
	</delete>
	
	<select id="getEmpInfo" resultType="HashMap">
		/* suitSql.getEmpInfo */
		SELECT LWS_CNCPR_MNG_NO /* 소송당사자관리번호 */
		     , INST_MNG_NO      /* 심급관리번호       */
		     , LWS_CNCPR_SE     /* 소송당사자구분     */
		     , CASE 
		            WHEN LWS_CNCPR_SE = 'WON'  THEN '원고'
		            WHEN LWS_CNCPR_SE = 'PI'   THEN '피고'
		            WHEN LWS_CNCPR_SE = 'SWON' THEN '원고보조'
		            WHEN LWS_CNCPR_SE = 'SPI'  THEN '피고보조'
		       END LWS_CNCPR_SE_NM
		     , LWS_CNCPR_NM     /* 소송당사자명       */
		     , LWS_CNCPR_CNPL   /* 소송당사자연락처   */
		     , LWS_CNCPR_ADDR   /* 소송당사자주소     */
		     , RMRK_CN          /* 비고내용           */
		FROM TB_LWS_CNCPR
		WHERE INST_MNG_NO = #{INST_MNG_NO}
		<if test="LWS_CNCPR_MNG_NO != '' and LWS_CNCPR_MNG_NO != null">
		  AND LWS_CNCPR_MNG_NO = #{LWS_CNCPR_MNG_NO}
		</if>
	</select>
	
	<select id="getLastEmpInfo" resultType="HashMap">
		/* suitSql.getLastEmpInfo */
		SELECT '' AS LWS_CNCPR_MNG_NO /* 소송당사자관리번호 */
		     , INST_MNG_NO      /* 심급관리번호       */
		     , LWS_CNCPR_SE     /* 소송당사자구분     */
		     , CASE 
		            WHEN LWS_CNCPR_SE = 'WON'  THEN '원고'
		            WHEN LWS_CNCPR_SE = 'PI'   THEN '피고'
		            WHEN LWS_CNCPR_SE = 'SWON' THEN '원고보조'
		            WHEN LWS_CNCPR_SE = 'SPI'  THEN '피고보조'
		       END LWS_CNCPR_SE_NM
		     , LWS_CNCPR_NM     /* 소송당사자명       */
		     , LWS_CNCPR_CNPL   /* 소송당사자연락처   */
		     , LWS_CNCPR_ADDR   /* 소송당사자주소     */
		     , RMRK_CN          /* 비고내용           */
		FROM TB_LWS_CNCPR
		WHERE INST_MNG_NO = (
		    SELECT MAX(Z.INST_MNG_NO) AS INST_MNG_NO
		    FROM TB_LWS_INST Z
		    WHERE Z.LWS_MNG_NO = #{LWS_MNG_NO}
		)
	</select>
	
	<insert id="insertEmpInfo" parameterType="HashMap">
		<selectKey keyProperty="LWS_CNCPR_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertEmpInfo */
		INSERT INTO TB_LWS_CNCPR (
		    LWS_CNCPR_MNG_NO
		  , INST_MNG_NO
		  , LWS_CNCPR_SE
		  , LWS_CNCPR_NM
		  , LWS_CNCPR_CNPL
		  , LWS_CNCPR_ADDR
		  , RMRK_CN
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		) VALUES (
		    #{LWS_CNCPR_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_CNCPR_SE}
		  , #{LWS_CNCPR_NM}
		  , #{LWS_CNCPR_CNPL}
		  , #{LWS_CNCPR_ADDR}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateEmpInfo" parameterType="HashMap">
		/* suitSql.updateEmpInfo */
		UPDATE TB_LWS_CNCPR
		SET LWS_CNCPR_SE   = #{LWS_CNCPR_SE}
		  , LWS_CNCPR_NM   = #{LWS_CNCPR_NM}
		  , LWS_CNCPR_CNPL = #{LWS_CNCPR_CNPL}
		  , LWS_CNCPR_ADDR = #{LWS_CNCPR_ADDR}
		  , RMRK_CN        = #{RMRK_CN}
		  , MDFCN_EMP_NM   = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO   = #{WRTR_EMP_NO}
		  , MDFCN_YMD      = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM  = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO  = #{WRT_DEPT_NO}
		WHERE LWS_CNCPR_MNG_NO = #{LWS_CNCPR_MNG_NO}
	</update>
	
	<delete id="deleteEmpInfo">
		/* suitSql.deleteEmpInfo */
		DELETE FROM TB_LWS_CNCPR
		WHERE INST_MNG_NO = #{INST_MNG_NO}
		<if test="LWS_CNCPR_MNG_NO != '' and LWS_CNCPR_MNG_NO != null">
		  AND LWS_CNCPR_MNG_NO = #{LWS_CNCPR_MNG_NO}
		</if>
	</delete>
	
	<select id="getCaseResultDetail" resultType="HashMap">
		/* suitSql.getCaseResultDetail */
		SELECT PRGRS_STTS_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = PRGRS_STTS_CD AND Z.USE_YN = 'Y') AS PRGRS_STTS_NM
		     , JDGM_UP_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = JDGM_UP_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_UP_TYPE_NM
		     , JDGM_LWR_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = JDGM_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_LWR_TYPE_NM
		     , WIN_RT_NM AS WIN_RT
		     , JDGM_ADJ_YMD
		     , RLNG_TMTL_YMD
		     , JDGM_CFMTN_YMD
		     , JDGM_AMT
		     , JDGM_AMT_INT
		     , JDGM_CN
		     , APLY_INCDNT_YN
		     , APLY_INCDNT_FAU_RSN
		FROM TB_LWS_INST
		WHERE INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<update id="insertCaseResultInfo" parameterType="HashMap">
		/* suitSql.insertCaseResultInfo */
		UPDATE TB_LWS_INST
		SET PRGRS_STTS_CD       = #{PRGRS_STTS_CD}
		  , JDGM_UP_TYPE_CD     = #{JDGM_UP_TYPE_CD}
		  , JDGM_LWR_TYPE_CD    = #{JDGM_LWR_TYPE_CD}
		  , WIN_RT_NM           = #{WIN_RT}
		  , JDGM_ADJ_YMD        = REPLACE(#{JDGM_ADJ_YMD}, '-', '')
		  , RLNG_TMTL_YMD       = REPLACE(#{RLNG_TMTL_YMD}, '-', '')
		  , JDGM_CFMTN_YMD      = REPLACE(#{JDGM_CFMTN_YMD}, '-', '')
		  , JDGM_AMT            = #{JDGM_AMT}
		  , JDGM_AMT_INT        = #{JDGM_AMT_INT}
		  , JDGM_CN             = #{JDGM_CN}
		  , APLY_INCDNT_YN      = #{APLY_INCDNT_YN}
		  , APLY_INCDNT_FAU_RSN = #{APLY_INCDNT_FAU_RSN}
		  , MDFCN_EMP_NM        = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO        = #{WRTR_EMP_NO}
		  , MDFCN_YMD           = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM       = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO       = #{WRT_DEPT_NO}
		WHERE INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	
	
	<insert id="insertAppCaseInfo" parameterType="HashMap">
		<selectKey keyProperty="INST_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertAppCaseInfo */
		INSERT INTO TB_LWS_INST (
		    INST_MNG_NO             /* 심급관리번호     */
		  , LWS_MNG_NO              /* 소송관리번호     */
		  , INST_CD                 /* 심급코드         */
		  , INCDNT_SE_CD
		  , INST_INCDNT_NM          /* 심급사건명       */
		  , FLGLW_YMD               /* 소제기일자       */
		  , INCDNT_NO               /* 사건번호         */
		  , CT_CD                   /* 법원코드         */
		  , JSDP_NM                 /* 재판부명         */
		  , PPOF_INCDNT_NO          /* 검찰청사건번호   */
		  , JNT_FLFMT_YN            /* 공동수행여부     */
		  , PPOF_LWS_FLFMT_EMP_NM   /* 검찰청소송수행자 */
		  , TKCG_PROC_NM            /* 담당검사         */
		  , PLNTF_AGT_NM            /* 원고대리인명     */
		  , DFND_AGT_NM             /* 피고대리인명     */
		  , LWS_EQVL                /* 소송가액         */
		  , CHG_LWS_EQVL            /* 변경소송가액     */
		  , RMRK_CN                 /* 비고내용         */
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		)
		SELECT #{INST_MNG_NO}
		     , LWS_MNG_NO
		     , (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = 'CASECD' AND Z.CD_NM LIKE '%신청1심%' AND ROWNUM = 1) AS INST_CD
		     , INCDNT_SE_CD
		     , '신청사건' AS INST_INCDNT_NM
		     , FLGLW_YMD               /* 소제기일자       */
		     , INCDNT_NO               /* 사건번호         */
		     , CT_CD                   /* 법원코드         */
		     , JSDP_NM                 /* 재판부명         */
		     , PPOF_INCDNT_NO          /* 검찰청사건번호   */
		     , JNT_FLFMT_YN            /* 공동수행여부     */
		     , PPOF_LWS_FLFMT_EMP_NM   /* 검찰청소송수행자 */
		     , TKCG_PROC_NM            /* 담당검사         */
		     , PLNTF_AGT_NM            /* 원고대리인명     */
		     , DFND_AGT_NM             /* 피고대리인명     */
		     , LWS_EQVL                /* 소송가액         */
		     , CHG_LWS_EQVL            /* 변경소송가액     */
		     , RMRK_CN                 /* 비고내용         */
		     , 'N'
		     , #{WRTR_EMP_NM}
		     , #{WRTR_EMP_NO}
		     , to_char(sysdate,'YYYYMMDD')
		     , #{WRT_DEPT_NM}
		     , #{WRT_DEPT_NO}
		FROM TB_LWS_INST
		WHERE INST_MNG_NO = #{SEL_INST_MNG_NO}
	</insert>
	
	<insert id="insertApEmpInfo" parameterType="HashMap">
		/* suitSql.insertApEmpInfo */
		INSERT INTO TB_LWS_CNCPR (
		    LWS_CNCPR_MNG_NO
		  , INST_MNG_NO
		  , LWS_CNCPR_SE
		  , LWS_CNCPR_NM
		  , LWS_CNCPR_CNPL
		  , LWS_CNCPR_ADDR
		  , RMRK_CN
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		)
		SELECT KEYID.NEXTVAL
		     , INST_MNG_NO
		     , LWS_CNCPR_SE
		     , LWS_CNCPR_NM
		     , LWS_CNCPR_CNPL
		     , LWS_CNCPR_ADDR
		     , RMRK_CN
		     , 'N'
		     , #{WRTR_EMP_NM}
		     , #{WRTR_EMP_NO}
		     , to_char(sysdate,'YYYYMMDD')
		     , #{WRT_DEPT_NM}
		     , #{WRT_DEPT_NO}
		FROM TB_LWS_CNCPR
		WHERE INST_MNG_NO = #{SEL_INST_MNG_NO}
	</insert>
	
	<select id="selectEmpUserList" resultType="HashMap">
		/* suitSql.selectEmpUserList */
		SELECT DISTINCT X.EMP_NO
		     , X.MNGR_EMP_NM
		     , X.MNGR_DEPT_NO
		     , X.MNGR_DEPT_NM
		     , NVL(INGCNT, 0) AS INGCNT
		     , NVL(ENDCNT, '0') AS ENDCNT
		FROM TB_COM_MNGR_AUTHRT X
		     LEFT OUTER JOIN (
		         SELECT B.TKCG_EMP_NO
		              , COUNT(CASE WHEN PRGRS_STTS_CD = '10001001' THEN 1 END) AS INGCNT
		              , COUNT(CASE WHEN PRGRS_STTS_CD = '10001003' THEN 1 END) AS ENDCNT
		         FROM TB_LWS_INST A JOIN TB_LWS_TKCG B ON A.INST_MNG_NO = B.INST_MNG_NO
		         WHERE 1=1
		           AND B.USE_YN = 'Y'
		         GROUP BY TKCG_EMP_NO
		     ) Y
		     ON X.EMP_NO = Y.TKCG_EMP_NO
		WHERE MNGR_AUTHRT_NM LIKE '%C%' OR MNGR_AUTHRT_NM LIKE '%Y%'
		ORDER BY INGCNT
	</select>
	
	<select id="selectEmpList" resultType="HashMap">
		/* suitSql.selectEmpList */
		SELECT *
		FROM TB_LWS_TKCG
		WHERE INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<update id="updateChgEmpUseYn" parameterType="HashMap">
		/* suitSql_updateChgEmpUseYn_소송담당자 해제 */
		UPDATE TB_LWS_TKCG
		SET USE_YN = 'N'
		  , MDFCN_EMP_NM  = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO  = #{WRTR_EMP_NO}
		  , MDFCN_YMD     = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO = #{WRT_DEPT_NO}
		WHERE INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	<select id="getChrgEmpInfo" resultType="HashMap">
		/* suitSql.getChrgEmpInfo */
		SELECT A.EMP_PK_NO
		     , A.EMP_NO
		     , A.EMP_NM
		     , B.DEPT_NO
		     , B.DEPT_NM
		FROM TB_COM_HRIS A, TB_COM_ORGCHT B
		WHERE A.DEPT_NO = B.DEPT_NO
		  AND A.EMP_NO = #{empno}
	</select>
	
	<select id="getEmpTeamReader" resultType="HashMap">
		/* suitSql.getEmpTeamReader */
		SELECT A.EMP_PK_NO
		     , A.EMP_NM
		FROM TB_COM_HRIS A
		WHERE A.DEPT_NO = (
		    SELECT Z.DEPT_NO
		    FROM TB_COM_HRIS Z
		    WHERE Z.EMP_NO = #{empno}
		  )
		  AND A.JBGD_NM LIKE '%팀장'
	</select>
	
	<insert id="insertChgEmpInfo" parameterType="HashMap">
		<selectKey keyProperty="TKCG_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertChgEmpInfo */
		INSERT INTO TB_LWS_TKCG (
		    TKCG_MNG_NO
		  , INST_MNG_NO
		  , LWS_MNG_NO
		  , TKCG_EMP_NO
		  , TKCG_DSGN_YMD
		  , USE_YN
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		) VALUES (
		    #{TKCG_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , 'Y'
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<select id="selectCaseList" resultType="HashMap">
		/* suitSql.selectCaseList */
		SELECT A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.INST_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.INST_CD AND Z.USE_YN = 'Y') AS INST_NM
		     , REPLACE(A.INCDNT_NO, '@', '') AS INCDNT_NO
		     , TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLGLW_YMD
		     , A.CT_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.CT_CD AND Z.USE_YN = 'Y') AS CT_NM
		     , TO_CHAR(TO_DATE(A.JDGM_ADJ_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS JDGM_ADJ_YMD
		     , A.JDGM_UP_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.JDGM_UP_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_UP_TYPE_NM
		     , A.JDGM_LWR_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.JDGM_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_LWR_TYPE_NM
		     , A.LWS_EQVL
		     , A.JDGM_AMT
		     , (
		        SELECT SUBSTR(XMLAGG(XMLELEMENT(X,',', HH.EMP_NM) ORDER BY HH.EMP_NM).EXTRACT('//text()'),2) AS EMPNM
		        FROM TB_LWS_TKCG ZZ, TB_COM_HRIS HH
		        WHERE ZZ.INST_MNG_NO = A.INST_MNG_NO
		          AND ZZ.USE_YN = 'Y'
		          AND ZZ.TKCG_EMP_NO = HH.EMP_NO
		       ) AS EMPNM
		FROM TB_LWS_INST A
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		ORDER BY A.INST_MNG_NO DESC
	</select>
	
	<select id="getInstMngNo" resultType="String">
		/* suitSql.getInstMngNo */
		SELECT B.INST_MNG_NO
		FROM TB_LWS_MNG A, TB_LWS_INST B
		WHERE A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.LAST_INST_CD = B.INST_CD
		  AND ROWNUM = 1
	</select>
	
	<select id="selectDateList" resultType="HashMap">
		/* suitSql.selectDateList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,'@', CASE WHEN LENGTH(F.PHYS_FILE_NM) > 5 THEN SUBSTR(F.PHYS_FILE_NM, 0, 5)||'...' ELSE F.PHYS_FILE_NM END) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,'@', F.SRVR_FILE_NM) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM
		         , F.LWS_MNG_NO
		         , F.INST_MNG_NO
		         , F.TRGT_PST_MNG_NO
		         , D.DATE_MNG_NO
		    FROM TB_LWS_FILE F
		       , TB_LWS_SBMSN_TMTL D
		    WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		      AND F.INST_MNG_NO = D.INST_MNG_NO
		      AND F.TRGT_PST_MNG_NO = D.DOC_MNG_NO
		      AND TRGT_PST_TBL_NM = 'TB_LWS_SBMSN_TMTL'
		    GROUP BY D.DATE_MNG_NO, F.LWS_MNG_NO, F.INST_MNG_NO, F.TRGT_PST_MNG_NO
		)
		SELECT A.DATE_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.DATE_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		     , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		     , A.DATE_PLC_NM
		     , A.DATE_CN
		     , A.DATE_TM
		     , SUBSTR(A.DATE_TM, 0, 2) AS FTIME /* 시 */
		     , SUBSTR(A.DATE_TM, 3, 4) AS BTIME /* 분 */
		     , DECODE(A.DATE_TM, '', '', SUBSTR(A.DATE_TM, 0, 2) || '시 ' || SUBSTR(A.DATE_TM, 3, 4) || '분') AS VIEWTIME  /* 시간표시 */
		     , A.DATE_RSLT_CN
		     , A.DATE_RSLT_MEMO_CN
		     , A.RMRK_CN
		     , A.NOTI_YN
		     , A.NOTI_INV
		     , A.HWRT_REG_YN
		     , F.VIEWFILENM       /* 파일명 */
		     , F.SERVERFILENM     /* 서버파일명 */
		FROM TB_LWS_DATE A
		        LEFT OUTER JOIN TB_LWS_SBMSN_TMTL O ON A.DATE_MNG_NO = O.DATE_MNG_NO
		        LEFT OUTER JOIN FILES F ON A.INST_MNG_NO = F.INST_MNG_NO AND A.LWS_MNG_NO = F.LWS_MNG_NO AND O.DATE_MNG_NO = F.DATE_MNG_NO
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		ORDER BY A.DATE_YMD DESC
	</select>
	
	<select id="getDateDetail" resultType="HashMap">
		/* suitSql.getDateDetail */
		SELECT DATE_MNG_NO
		     , INST_MNG_NO
		     , LWS_MNG_NO
		     , DATE_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		     , TO_CHAR(TO_DATE(DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		     , DATE_PLC_NM
		     , DATE_CN
		     , DATE_TM
		     , SUBSTR(DATE_TM, 0, 2) AS FTIME /* 시 */
		     , SUBSTR(DATE_TM, 3, 4) AS BTIME /* 분 */
		     , DECODE(DATE_TM, '', '', SUBSTR(DATE_TM, 0, 2) || '시 ' || SUBSTR(DATE_TM, 3, 4) || '분') AS VIEWTIME  /* 시간표시 */
		     , DATE_RSLT_CN
		     , DATE_RSLT_MEMO_CN
		     , RMRK_CN
		     , NOTI_YN
		     , NOTI_INV
		     , HWRT_REG_YN
		FROM TB_LWS_DATE
		WHERE DATE_MNG_NO = #{DATE_MNG_NO}
	</select>
	
	<select id="getDateDocFileList" resultType="HashMap">
		/* suitSql.getDateDocFileList */
		SELECT A.FILE_MNG_NO        /* 파일관리번호 */
		     , A.INST_MNG_NO        /* 심급관리번호 */
		     , A.LWS_MNG_NO         /* 소송관리번호 */
		     , A.TRGT_PST_MNG_NO    /* 대상게시물관리번호 */
		     , A.FILE_SE            /* 파일구분 */
		     , A.DWNLD_FILE_NM      /* 다운로드파일명 */
		     , A.SRVR_FILE_NM       /* 서버파일명 */
		     , A.PHYS_FILE_NM       /* 물리파일명 */
		     , A.FILE_EXTN_NM       /* 파일확장자명 */
		     , A.TRGT_PST_TBL_NM    /* 대상게시물테이블명 */
		     , A.SORT_SEQ           /* 정렬순서 */
		FROM TB_LWS_FILE A, TB_LWS_SBMSN_TMTL B
		WHERE B.DATE_MNG_NO = #{DATE_MNG_NO}
		  AND A.TRGT_PST_MNG_NO = B.DOC_MNG_NO
		  AND A.TRGT_PST_TBL_NM = 'TB_LWS_SBMSN_TMTL'
	</select>
	
	<insert id="insertDateInfo" parameterType="HashMap">
		<selectKey keyProperty="DATE_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertDateInfo */
		INSERT INTO TB_LWS_DATE (
		    DATE_MNG_NO        /* 기일관리번호 */
		  , INST_MNG_NO        /* 심급관리번호 */
		  , LWS_MNG_NO         /* 소송관리번호 */
		  , DATE_TYPE_CD       /* 기일유형코드 */
		  , DATE_YMD           /* 기일일자 */
		  , DATE_PLC_NM        /* 기일장소명 */
		  , DATE_CN            /* 기일내용 */
		  , DATE_TM            /* 기일시각 */
		  , DATE_RSLT_CN       /* 기일결과내용 */
		  , DATE_RSLT_MEMO_CN  /* 기일결과메모내용 */
		  , RMRK_CN            /* 비고내용 */
		  , NOTI_YN            /* 알림여부 */
		  , NOTI_INV           /* 알림간격 */
		  , HWRT_REG_YN        /* 수기등록여부 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{DATE_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{DATE_TYPE_CD}
		  , REPLACE(#{DATE_YMD}, '-', '')
		  , #{DATE_PLC_NM}
		  , #{DATE_CN}
		  , #{time}
		  , #{DATE_RSLT_CN}
		  , #{DATE_RSLT_MEMO_CN}
		  , #{RMRK_CN}
		  , #{NOTI_YN}
		  , #{NOTI_INV}
		  , 'Y'
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateDateInfo" parameterType="HashMap">
		/* suitSql.saveDateInfo */
		UPDATE TB_LWS_DATE
		SET DATE_TYPE_CD      = #{DATE_TYPE_CD}
		  , DATE_YMD          = REPLACE(#{DATE_YMD}, '-', '')
		  , DATE_PLC_NM       = #{DATE_PLC_NM}
		  , DATE_CN           = #{DATE_CN}
		  , DATE_TM           = #{time}
		  , DATE_RSLT_CN      = #{DATE_RSLT_CN}
		  , DATE_RSLT_MEMO_CN = #{DATE_RSLT_MEMO_CN}
		  , RMRK_CN           = #{RMRK_CN}
		  , NOTI_YN           = #{NOTI_YN}
		  , NOTI_INV          = #{NOTI_INV}
		  , MDFCN_EMP_NM      = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO      = #{WRTR_EMP_NO}
		  , MDFCN_YMD         = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM     = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO     = #{WRT_DEPT_NO}
		WHERE DATE_MNG_NO = #{DATE_MNG_NO}
	</update>
	
	<select id="selectDocid" resultType="String">
		/* suitSql.selectDocid */
		SELECT D.DOC_MNG_NO
		FROM TB_LWS_SBMSN_TMTL D LEFT OUTER JOIN TB_LWS_INST C ON D.LWS_MNG_NO = C.LWS_MNG_NO AND D.INST_MNG_NO = C.INST_MNG_NO
		WHERE D.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND D.INST_MNG_NO = #{INST_MNG_NO}
		  AND D.DATE_MNG_NO = #{DATE_MNG_NO}
	</select>
	
	<delete id="deleteDateInfo">
		/* suitSql.delCaseDateInfo */
		DELETE FROM TB_LWS_DATE
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		<if test="INST_MNG_NO != '' and INST_MNG_NO != null">
		  AND INST_MNG_NO = #{INST_MNG_NO}
		</if>
		<if test="DATE_MNG_NO != '' and DATE_MNG_NO != null">
		  AND DATE_MNG_NO = #{DATE_MNG_NO}
		</if>
	</delete>
	
	<delete id="deleteDocInfo">
		/* suitSql.deleteDocInfo */
		DELETE FROM TB_LWS_SBMSN_TMTL
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		<if test="INST_MNG_NO != '' and INST_MNG_NO != null">
		  AND INST_MNG_NO = #{INST_MNG_NO}
		</if>
		<if test="DOC_MNG_NO != '' and DOC_MNG_NO != null">
		  AND DOC_MNG_NO = #{DOC_MNG_NO}
		</if>
		<if test="DATE_MNG_NO != '' and DATE_MNG_NO != null">
		  AND DATE_MNG_NO = #{DATE_MNG_NO}
		</if>
	</delete>
	
	<select id="selectDocList" resultType="HashMap">
		/* suitSql.selectDocList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,'@', CASE WHEN LENGTH(F.PHYS_FILE_NM) > 5 THEN SUBSTR(F.PHYS_FILE_NM, 0, 5)||'...' ELSE F.PHYS_FILE_NM END) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,'@', F.SRVR_FILE_NM) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM
		         , F.LWS_MNG_NO
		         , F.INST_MNG_NO
		         , F.TRGT_PST_MNG_NO
		    FROM TB_LWS_FILE F
		    WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		      AND TRGT_PST_TBL_NM = 'TB_LWS_SBMSN_TMTL'
		    GROUP BY F.INST_MNG_NO, F.LWS_MNG_NO, F.TRGT_PST_MNG_NO
		)
		SELECT D.DOC_MNG_NO
		     , D.DATE_MNG_NO
		     , D.INST_MNG_NO
		     , D.LWS_MNG_NO
		     , D.DOC_SE
		     , CASE WHEN D.DOC_SE = 'J' THEN '제출'
		            WHEN D.DOC_SE = 'S' THEN '송달'
		            WHEN D.DOC_SE = 'C' THEN '명령'
		       END AS DOC_SE_NM
		     , TO_CHAR(TO_DATE(D.DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DOC_YMD
		     , D.DOC_RSLT_CN
		     , D.DOC_CN
		     , D.RMRK_CN
		     , D.DOC_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = D.DOC_TYPE_CD AND Z.USE_YN = 'Y') AS DOC_TYPE_NM
		     , D.HWRT_REG_YN
		     , F.VIEWFILENM
		     , F.SERVERFILENM
		FROM TB_LWS_SBMSN_TMTL D
		     LEFT OUTER JOIN FILES F ON D.INST_MNG_NO = F.INST_MNG_NO AND D.LWS_MNG_NO = F.LWS_MNG_NO AND D.DOC_MNG_NO = F.TRGT_PST_MNG_NO
		WHERE D.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<select id="getDocDetail" resultType="HashMap">
		/* suitSql.getDocDetail */
		SELECT A.DOC_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.DATE_MNG_NO
		     , A.DOC_SE
		     , CASE WHEN A.DOC_SE = 'J' THEN '제출'
		            WHEN A.DOC_SE = 'S' THEN '송달'
		            WHEN A.DOC_SE = 'C' THEN '명령'
		       END AS DOC_SE_NM
		     , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DOC_YMD
		     , A.DOC_RSLT_CN
		     , A.DOC_CN
		     , A.RMRK_CN
		     , A.DOC_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.DOC_TYPE_CD AND Z.USE_YN = 'Y') AS DOC_TYPE_NM
		     , A.HWRT_REG_YN
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		     , TO_CHAR(TO_DATE(B.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		FROM TB_LWS_SBMSN_TMTL A LEFT OUTER JOIN TB_LWS_DATE B ON A.DATE_MNG_NO = B.DATE_MNG_NO
		WHERE A.DOC_MNG_NO = #{DOC_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<insert id="insertDocInfo" parameterType="HashMap">
		<selectKey keyProperty="DOC_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertDocInfo */
		INSERT INTO TB_LWS_SBMSN_TMTL (
		    DOC_MNG_NO      /* 문서관리번호 */
		  , DATE_MNG_NO     /* 기일관리번호 */
		  , DOC_SE          /* 문서구분 */
		  , DOC_YMD         /* 문서일자 */
		  , DOC_RSLT_CN     /* 문서결과내용 */
		  , DOC_CN          /* 문서결과내용 */
		  , RMRK_CN         /* 비고내용 */
		  , INST_MNG_NO     /* 심급관리번호 */
		  , LWS_MNG_NO      /* 소송관리번호 */
		  , DOC_TYPE_CD     /* 문서유형코드 */
		  , HWRT_REG_YN     /* 수기등록여부 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{DOC_MNG_NO}
		  , #{DATE_MNG_NO}
		  , #{DOC_SE}
		  , REPLACE(#{DOC_YMD}, '-', '')
		  , #{DOC_RSLT_CN}
		  , #{DOC_CN}
		  , #{RMRK_CN}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{DOC_TYPE_CD}
		  , 'Y'
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateDocInfo" parameterType="HashMap">
		/* suitSql.updateDocInfo */
		UPDATE TB_LWS_SBMSN_TMTL
		SET DATE_MNG_NO   = #{DATE_MNG_NO}
		  , DOC_SE        = #{DOC_SE}
		  , DOC_YMD       = REPLACE(#{DOC_YMD}, '-', '')
		  , DOC_RSLT_CN   = #{DOC_RSLT_CN}
		  , DOC_CN        = #{DOC_CN}
		  , RMRK_CN       = #{RMRK_CN}
		  , DOC_TYPE_CD   = #{DOC_TYPE_CD}
		  , MDFCN_EMP_NM  = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO  = #{WRTR_EMP_NO}
		  , MDFCN_YMD     = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO = #{WRT_DEPT_NO}
		WHERE DOC_MNG_NO = #{DOC_MNG_NO}
	</update>
	
	<select id="selectRelEmpList" resultType="HashMap">
		/* suitSql.selectRelEmpList */
		SELECT LWS_FLFMT_MNG_NO     /* 소송수행관리번호 */
		     , INST_MNG_NO          /* 심급관리번호 */
		     , LWS_FLFMT_EMP_NM     /* 소송수행직원명 */
		     , LWS_FLFMT_EMP_NO     /* 소송수행직원번호 */
		     , DECODE(LWS_FLFMT_DEPT_NM, NULL, '정보없음', LWS_FLFMT_DEPT_NM) AS LWS_FLFMT_DEPT_NM /* 소송수행부서명 */
		     , LWS_FLFMT_DEPT_NO    /* 소송수행부서번호 */
		     , TO_CHAR(TO_DATE(FLFMT_BGNG, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLFMT_BGNG  /* 수행시작일자 */
		     , TO_CHAR(TO_DATE(FLFMT_END, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLFMT_END    /* 수행종료일자 */
		     , FLFMT_YN             /* 수행여부 */
		     , RMRK_CN              /* 비고내용 */
		FROM TB_LWS_FLFMT A
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<select id="getRelEmpDetail" resultType="HashMap">
		/* suitSql.getRelEmpDetail */
		SELECT LWS_FLFMT_MNG_NO     /* 소송수행관리번호 */
		     , INST_MNG_NO          /* 심급관리번호 */
		     , LWS_FLFMT_EMP_NM     /* 소송수행직원명 */
		     , LWS_FLFMT_EMP_NO     /* 소송수행직원번호 */
		     , LWS_FLFMT_DEPT_NM    /* 소송수행부서명 */
		     , LWS_FLFMT_DEPT_NO    /* 소송수행부서번호 */
		     , TO_CHAR(TO_DATE(FLFMT_BGNG, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLFMT_BGNG  /* 수행시작일자 */
		     , TO_CHAR(TO_DATE(FLFMT_END, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLFMT_END    /* 수행종료일자 */
		     , FLFMT_YN             /* 수행여부 */
		     , RMRK_CN              /* 비고내용 */
		FROM TB_LWS_FLFMT A
		WHERE LWS_FLFMT_MNG_NO = #{LWS_FLFMT_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<insert id="insertRelDeptInfo" parameterType="HashMap">
		<selectKey keyProperty="LWS_FLFMT_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertRelDeptInfo */
		INSERT INTO TB_LWS_FLFMT (
		    LWS_FLFMT_MNG_NO   /* 소송수행관리번호 */
		  , INST_MNG_NO        /* 심급관리번호 */
		  , LWS_FLFMT_EMP_NM   /* 소송수행직원명 */
		  , LWS_FLFMT_EMP_NO   /* 소송수행직원번호 */
		  , LWS_FLFMT_DEPT_NM  /* 소송수행부서명 */
		  , LWS_FLFMT_DEPT_NO  /* 소송수행부서번호 */
		  , FLFMT_BGNG         /* 수행시작일자 */
		  , FLFMT_END          /* 수행종료일자 */
		  , FLFMT_YN           /* 수행여부 */
		  , RMRK_CN            /* 비고내용 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{LWS_FLFMT_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_FLFMT_EMP_NM}
		  , #{LWS_FLFMT_EMP_NO}
		  , #{LWS_FLFMT_DEPT_NM}
		  , #{LWS_FLFMT_DEPT_NO}
		  , REPLACE(#{FLFMT_BGNG}, '-', '')
		  , REPLACE(#{FLFMT_END}, '-', '')
		  , #{FLFMT_YN}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateRelDeptInfo" parameterType="HashMap">
		/* suitSql.updateRelDeptInfo */
		UPDATE TB_LWS_FLFMT
		SET LWS_FLFMT_EMP_NM  = #{LWS_FLFMT_EMP_NM}
		  , LWS_FLFMT_EMP_NO  = #{LWS_FLFMT_EMP_NO}
		  , LWS_FLFMT_DEPT_NM = #{LWS_FLFMT_DEPT_NM}
		  , LWS_FLFMT_DEPT_NO = #{LWS_FLFMT_DEPT_NO}
		  , FLFMT_BGNG        = REPLACE(#{FLFMT_BGNG}, '-', '')
		  , FLFMT_END         = REPLACE(#{FLFMT_END}, '-', '')
		  , FLFMT_YN          = #{FLFMT_YN}
		  , RMRK_CN           = #{RMRK_CN}
		WHERE LWS_FLFMT_MNG_NO = #{LWS_FLFMT_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	<delete id="delRelEmpInfo">
		/* suitSql.delRelEmpInfo */
		DELETE FROM TB_LWS_FLFMT
		WHERE INST_MNG_NO = #{INST_MNG_NO}
		<if test="LWS_FLFMT_MNG_NO != null and LWS_FLFMT_MNG_NO != ''">
		  AND LWS_FLFMT_MNG_NO = #{LWS_FLFMT_MNG_NO}
		</if>
	</delete>
	
	<update id="updateRelDeptUsed" parameterType="HashMap">
		/* suitSql.updateRelDeptUsed */
		UPDATE TB_LWS_FLFMT
		SET FLFMT_YN  = 'N',
		    FLFMT_END = to_char(sysdate, 'YYYYMMDD')
		WHERE LWS_FLFMT_MNG_NO = #{LWS_FLFMT_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	<select id="getDeptList" resultType="HashMap">
		/* suitSql.getDeptList */
		SELECT DEPT_NO,
		       UP_DEPT_NO,
		       SORT_SEQ,
		       DEPT_NM,
		       DEPT_GROUP_NM,
		       USE_YN
		FROM TB_COM_ORGCHT
		WHERE UP_DEPT_NO = #{node}
		ORDER BY NVL(SORT_SEQ,9999999)
	</select>
	
	<select id="selectDeptList" resultType="HashMap">
		/* suitSql.selectDeptList */
		SELECT ROWNUM AS RNUM,
		       T.DEPT_NO,
		       T.UP_DEPT_NO,
		       T.DEPT_NM,
		       LEVEL AS LVL
		FROM TB_COM_ORGCHT T
		WHERE T.USE_YN='Y'
		START WITH T.UP_DEPT_NO = '6110000'
		CONNECT BY PRIOR T.DEPT_NO=T.UP_DEPT_NO
	</select>
	
	<select id="selectUserList" resultType="HashMap">
		/* suitSql.selectUserList */
		SELECT U.EMP_NO,
		       U.EMP_NM,
		       NVL(U.JBGD_CD, '') AS JBGD_CD,
		       U.DEPT_NO,
		       (SELECT DEPT_NM FROM TB_COM_ORGCHT WHERE DEPT_NO = U.DEPT_NO) AS DEPT_NM,
		       NVL(U.JBGD_NM, '') AS JBGD_NM
		FROM TB_COM_HRIS U
		WHERE 1=1
		<if test="DEPT_NO != '' and DEPT_NO != null">
		  <if test='DEPT_NO != "6110000" and DEPT_NO != "0"'>
		  AND U.DEPT_NO = #{DEPT_NO}
		  </if>
		</if>
		<if test="schtxt2 != '' and schtxt2 != null">
		  AND U.EMP_NM LIKE '%'||#{schtxt2}||'%'
		</if>
		ORDER BY EMP_NM ASC
	</select>
	
	
	<select id="selectLawFirmList" resultType="HashMap">
		/* suitSql.selectLawFirmList */
		SELECT B.*
		FROM (
		    SELECT A.*
		         , CEIL(ROWNUM/#{pagesize}) PAGE
		         , ROWNUM AS ROWNUMBER
		    FROM (
		        SELECT A.JDAF_CORP_MNG_NO     /* 법무법인관리번호 */
		             , A.JDAF_CORP_NM         /* 법무법인명 */
		             , A.CORP_SE              /* 법인구분 */
		             , A.OFC_ADDR             /* 사무실주소 */
		             , A.ZIP                  /* 우편번호 */
		             , A.OFC_TELNO            /* 사무실전화번호 */
		             , A.OFC_FXNO             /* 사무실팩스번호 */
		             
		             , A.CORP_NOZ_YN          /* 법인공증여부 */
		             , A.CORP_INTL_CNSTN_CN   /* 법인국제자문내용 */
		             , A.CORP_IPR_CNSTN_CN    /* 법인지식재산권자문내용 */
		             
		             , A.RPRS_LWYR_NM         /* 대표변호사명 */
		             , A.RPRS_LWYR_TELNO      /* 대표변호사전화번호 */
		             , A.RPRS_LWYR_EML_ADDR   /* 대표변호사이메일주소 */
		             , A.RMRK_CN              /* 비고내용 */
		             , (SELECT COUNT(*) FROM TB_COM_LWYR Z WHERE Z.JDAF_CORP_MNG_NO = A.JDAF_CORP_MNG_NO) AS LWYR_CNT
		        FROM TB_COM_JDAF_CORP A
		        <trim prefix="WHERE" prefixOverrides="AND |OR ">
		            <if test="JDAF_CORP_NM != '' and JDAF_CORP_NM != null">
		                AND A.JDAF_CORP_NM LIKE '%'||#{JDAF_CORP_NM}||'%'
		            </if>
		        </trim>
		        ORDER BY A.JDAF_CORP_NM ASC
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pageno != null and pageno != ''">
		        page = #{pageno}
		    </if>
		</trim> 
	</select>
	
	<select id="selectLawFirmListCnt" resultType="int">
		/* suitSql.selectLawFirmListCnt */
		SELECT COUNT(*)
		FROM TB_COM_JDAF_CORP
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="JDAF_CORP_NM != '' and JDAF_CORP_NM != null">
		        AND JDAF_CORP_NM LIKE '%'||#{JDAF_CORP_NM}||'%'
		    </if>
		</trim>
	</select>
	
	<select id="getLawfirmDetail" resultType="HashMap">
		/* suitSql.getLawfirmDetail */
		SELECT JDAF_CORP_MNG_NO       /* 법무법인관리번호 */
		     , JDAF_CORP_NM           /* 법무법인명 */
		     , OFC_ADDR               /* 사무실주소 */
		     , ZIP                    /* 우편번호 */
		     , OFC_TELNO              /* 사무실전화번호 */
		     , OFC_FXNO               /* 사무실팩스번호 */
		     
		     , CORP_NOZ_YN            /* 법인공증여부 */
		     , CORP_INTL_CNSTN_CN     /* 법인국제자문내용 */
		     , CORP_IPR_CNSTN_CN      /* 법인지식재산권자문내용 */
		     
		     , RPRS_LWYR_NM           /* 대표변호사명 */
		     , RPRS_LWYR_TELNO        /* 대표변호사전화번호 */
		     , RPRS_LWYR_EML_ADDR     /* 대표변호사이메일주소 */
		     , RMRK_CN                /* 비고내용 */
		FROM TB_COM_JDAF_CORP
		WHERE JDAF_CORP_MNG_NO = #{JDAF_CORP_MNG_NO}
	</select>
	
	<insert id="insertLawfirmInfo" parameterType="HashMap">
		<selectKey keyProperty="JDAF_CORP_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertLawfirmInfo */
		INSERT INTO TB_COM_JDAF_CORP (
		    JDAF_CORP_MNG_NO    /* 법무법인관리번호 */
		  , JDAF_CORP_NM        /* 법무법인명 */
		  , OFC_ADDR            /* 사무실주소 */
		  , ZIP                 /* 우편번호 */
		  , OFC_TELNO           /* 사무실전화번호 */
		  , OFC_FXNO            /* 사무실팩스번호 */
		  
		  , CORP_NOZ_YN         /* 법인공증여부 */
		  , CORP_INTL_CNSTN_CN  /* 법인국제자문내용 */
		  , CORP_IPR_CNSTN_CN   /* 법인지식재산권자문내용 */
		  
		  , RPRS_LWYR_NM        /* 대표변호사명 */
		  , RPRS_LWYR_TELNO     /* 대표변호사전화번호 */
		  , RPRS_LWYR_EML_ADDR  /* 대표변호사이메일주소 */
		  , RMRK_CN             /* 비고내용 */
		  , DEL_YN              /* 삭제여부 */
		  , WRTR_EMP_NM         /* 작성직원명 */
		  , WRTR_EMP_NO         /* 작성직원번호 */
		  , WRT_YMD             /* 작성일자 */
		  , WRT_DEPT_NM         /* 작성부서명 */
		  , WRT_DEPT_NO         /* 작성부서번호 */
		) VALUES (
		    #{JDAF_CORP_MNG_NO}
		  , #{JDAF_CORP_NM}
		  , #{OFC_ADDR}
		  , #{ZIP}
		  , REPLACE(#{OFC_TELNO}, '-', '')
		  , REPLACE(#{OFC_FXNO}, '-', '')
		  
		  , #{CORP_NOZ_YN}
		  , #{CORP_INTL_CNSTN_CN}
		  , #{CORP_IPR_CNSTN_CN}
		  
		  , #{RPRS_LWYR_NM}
		  , REPLACE(#{RPRS_LWYR_TELNO}, '-', '')
		  , #{RPRS_LWYR_EML_ADDR}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateLawfirmInfo" parameterType="HashMap">
		/* suitSql.updateLawfirmInfo */
		UPDATE TB_COM_JDAF_CORP
		SET JDAF_CORP_NM       = #{JDAF_CORP_NM}
		  , OFC_ADDR           = #{OFC_ADDR}
		  , ZIP                = #{ZIP}
		  , OFC_TELNO          = REPLACE(#{OFC_TELNO}, '-', '')
		  , OFC_FXNO           = REPLACE(#{OFC_FXNO}, '-', '')
		  
		  , CORP_NOZ_YN        = #{CORP_NOZ_YN}
		  , CORP_INTL_CNSTN_CN = #{CORP_INTL_CNSTN_CN}
		  , CORP_IPR_CNSTN_CN  = #{CORP_IPR_CNSTN_CN}
		  
		  , RPRS_LWYR_NM       = #{RPRS_LWYR_NM}
		  , RPRS_LWYR_TELNO    = REPLACE(#{RPRS_LWYR_TELNO}, '-', '')
		  , RPRS_LWYR_EML_ADDR = #{RPRS_LWYR_EML_ADDR}
		  , RMRK_CN            = #{RMRK_CN}
		  , MDFCN_EMP_NM       = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO       = #{WRTR_EMP_NO}
		  , MDFCN_YMD          = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM      = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO      = #{WRT_DEPT_NO}
		WHERE JDAF_CORP_MNG_NO = #{JDAF_CORP_MNG_NO}
	</update>
	
	<update id="updateLawfirmInfo2" parameterType="HashMap">
		/* suitSql.updateLawfirmInfo2 */
		UPDATE TB_COM_JDAF_CORP
		SET CORP_NOZ_YN        = #{CORP_NOZ_YN}
		  , CORP_INTL_CNSTN_CN = #{CORP_INTL_CNSTN_CN}
		  , CORP_IPR_CNSTN_CN  = #{CORP_IPR_CNSTN_CN}
		WHERE JDAF_CORP_MNG_NO = #{JDAF_CORP_MNG_NO}
	</update>
	
	<delete id="deleteLawfirmInfo">
		/* suitSql.deleteLawfirmInfo */
		DELETE FROM TB_COM_JDAF_CORP
		WHERE JDAF_CORP_MNG_NO = #{JDAF_CORP_MNG_NO}
	</delete>
	
	<select id="selectLawyerList" resultType="HashMap">
		/* suitSql.selectLawyerList */
		SELECT B.*
		FROM (
		    SELECT A.*
		         , CEIL(ROWNUM/#{pagesize}) PAGE
		         , ROWNUM AS ROWNUMBER
		    FROM (
		        SELECT A.LWYR_MNG_NO       /* 변호사관리번호 */
		             , A.JDAF_CORP_MNG_NO  /* 법무법인관리번호 */
		             , A.LWYR_NM           /* 변호사명 */
		             , B.JDAF_CORP_NM      /* 법무법인명 */
		             , DECODE(A.LGN_LCK_YN, NULL, 'N', A.LGN_LCK_YN) AS LGN_LCK_YN
		             , A.BRDT                 /* 생년월일 */
		             , A.GNDR_SE              
		             , A.ACBG_CN              /* 학력내용 */
		             
		             , CASE WHEN A.TEST_SE_NM = '사법시험' THEN A.TEST_PASS_YR || '(제' || A.TEST_PASS_CYCL || '회)'
		                    WHEN A.TEST_SE_NM = '변호사시험' THEN A.TEST_PASS_YR || '(변시' || A.TEST_PASS_CYCL || '회)'
		                    WHEN A.TEST_SE_NM = '군법무관' THEN '군법무관(제' || A.TEST_PASS_CYCL || '기)'
		                    ELSE ''
		               END TEST_INFO
		             <!-- , A.TEST_SE_NM || ' ' || A.TEST_PASS_YR || '년 ' || A.TEST_PASS_CYCL || '차' AS TEST_INFO -->
		             , TO_CHAR(TO_DATE(C.FRST_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FRST_YMD
		             , TO_CHAR(TO_DATE(C.NOW_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS NOW_YMD
		             , TO_CHAR(TO_DATE(C.LST_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS LST_YMD
		             , (TRUNC(SYSDATE) - TRUNC(TO_DATE(C.FRST_YMD, 'YYYY-MM-DD'))) AS TERM_DT
		             , CASE WHEN C.TNR_CNT = 1 THEN '최초'
		                    WHEN C.TNR_CNT = 4 THEN '연임만료'
		                    ELSE C.TNR_CNT || '차'
		               END TNR_CNT
		             , A.MBL_TELNO
		             , A.CRR_MTTR
		             , CASE WHEN A.LWYR_CTRT_STTS_NM = 'Y' THEN '임기중'
		                    WHEN A.LWYR_CTRT_STTS_NM = 'N' THEN '해촉'
		                    WHEN A.LWYR_CTRT_STTS_NM = 'A' THEN '해촉(사임)'
		               END LWYR_CTRT_STTS_NM
		             , A.ARSP_NM
		             , A.SPC_FLD_NM
		             , TO_CHAR(TO_DATE(C.NOW_YMD, 'YYYY-MM-DD'), 'YYYY.MM.DD') || ' (' ||
		               TO_CHAR(TO_DATE(C.FRST_YMD, 'YYYY-MM-DD'), 'YYYY.MM.DD') || ')' AS EXCELYMD
		             , A.PHOTO_MNG_PATH_NM
		        FROM TB_COM_LWYR A LEFT OUTER JOIN (
		            SELECT MIN(ENTRST_BGNG_YMD) AS FRST_YMD
		                 , MAX(ENTRST_BGNG_YMD) AS NOW_YMD
		                 , MAX(ENTRST_END_YMD) AS LST_YMD
		                 , COUNT(TNR_MNG_NO) AS TNR_CNT
		                 , LWYR_MNG_NO
		            FROM TB_COM_LWYR_TNR
		            GROUP BY LWYR_MNG_NO
		        ) C ON A.LWYR_MNG_NO = C.LWYR_MNG_NO, TB_COM_JDAF_CORP B
		        WHERE A.JDAF_CORP_MNG_NO = B.JDAF_CORP_MNG_NO
		        <if test="schGbn != '' and schGbn != null">
		          AND A.LWYR_CTRT_STTS_NM = #{schGbn}
		        </if>
		        <if test="LWYR_NM != '' and LWYR_NM != null">
		          AND A.LWYR_NM LIKE '%'||#{LWYR_NM}||'%'
		        </if>
		        <if test="JDAF_CORP_NM != '' and JDAF_CORP_NM != null">
		          AND B.JDAF_CORP_NM LIKE '%'||#{JDAF_CORP_NM}||'%'
		        </if>
		        <if test="LGN_LCK_YN != '' and LGN_LCK_YN != null">
		          AND DECODE(A.LGN_LCK_YN, NULL, 'N', A.LGN_LCK_YN) = #{LGN_LCK_YN}
		        </if>
		        <if test="TNR_CNT != '' and TNR_CNT != null">
		          AND C.TNR_CNT = #{TNR_CNT}
		        </if>
		        <if test="TERM_DT != '' and TERM_DT != null">
		          AND (TRUNC(SYSDATE) - TRUNC(TO_DATE(C.FRST_YMD, 'YYYY-MM-DD'))) = #{TERM_DT}
		        </if>
		        <if test="CRR_MTTR != '' and CRR_MTTR != null">
		          AND A.CRR_MTTR LIKE '%'||#{CRR_MTTR}||'%'
		        </if>
		        <if test="ARSP_NM != '' and ARSP_NM != null">
		          AND A.ARSP_NM = #{ARSP_NM}
		        </if>
		        <if test="BRDT != '' and BRDT != null">
		          AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'), TRUNC(TO_DATE(BRDT,'YYYY'),'YEAR')) /12 +1) = #{BRDT}
		        </if>
		        <if test="SPC_FLD_NM != '' and SPC_FLD_NM != null">
		          AND A.SPC_FLD_NM LIKE '%'||#{SPC_FLD_NM}||'%'
		        </if>
		        
		        <if test="LWYR_INTL_CNSTN_CN != '' and LWYR_INTL_CNSTN_CN != null">
		          AND A.LWYR_INTL_CNSTN_CN LIKE '%'||#{LWYR_INTL_CNSTN_CN}||'%'
		        </if>
		        <if test="LWYR_IPR_CNSTN_CN != '' and LWYR_IPR_CNSTN_CN != null">
		          AND A.LWYR_IPR_CNSTN_CN LIKE '%'||#{LWYR_IPR_CNSTN_CN}||'%'
		        </if>
		        <if test="ENDTERM != null and ENDTERM != ''">
		          AND TO_DATE(C.LST_YMD, 'YYYYMMDD') BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(SYSDATE+#{ENDTERM}, 'YYYYMMDD')
		        </if>
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pageno != null and pageno != ''">
		        page = #{pageno}
		    </if>
		</trim> 
	</select>
	
	<select id="selectLawyerListCnt" resultType="int">
		/* suitSql.selectLawyerListCnt */
		SELECT COUNT(*)
		FROM TB_COM_LWYR A LEFT OUTER JOIN (
		    SELECT MIN(ENTRST_BGNG_YMD) AS FRST_YMD
		         , MAX(ENTRST_BGNG_YMD) AS NOW_YMD
		         , MAX(ENTRST_END_YMD) AS LST_YMD
		         , COUNT(TNR_MNG_NO) AS TNR_CNT
		         , LWYR_MNG_NO
		    FROM TB_COM_LWYR_TNR
		    GROUP BY LWYR_MNG_NO
		) C ON A.LWYR_MNG_NO = C.LWYR_MNG_NO, TB_COM_JDAF_CORP B
		WHERE A.JDAF_CORP_MNG_NO = B.JDAF_CORP_MNG_NO
		<if test="schGbn != '' and schGbn != null">
		  AND A.LWYR_CTRT_STTS_NM = #{schGbn}
		</if>
		<if test="LWYR_NM != '' and LWYR_NM != null">
		  AND A.LWYR_NM LIKE '%'||#{LWYR_NM}||'%'
		</if>
		<if test="JDAF_CORP_NM != '' and JDAF_CORP_NM != null">
		  AND B.JDAF_CORP_NM LIKE '%'||#{JDAF_CORP_NM}||'%'
		</if>
		<if test="LGN_LCK_YN != '' and LGN_LCK_YN != null">
		  AND DECODE(A.LGN_LCK_YN, NULL, 'N', A.LGN_LCK_YN) = #{LGN_LCK_YN}
		</if>
		<if test="TNR_CNT != '' and TNR_CNT != null">
		  AND C.TNR_CNT = #{TNR_CNT}
		</if>
		<if test="TERM_DT != '' and TERM_DT != null">
		  AND (TRUNC(SYSDATE) - TRUNC(TO_DATE(C.FRST_YMD, 'YYYY-MM-DD'))) = #{TERM_DT}
		</if>
		<if test="CRR_MTTR != '' and CRR_MTTR != null">
		  AND A.CRR_MTTR LIKE '%'||#{CRR_MTTR}||'%'
		</if>
		<if test="ARSP_NM != '' and ARSP_NM != null">
		  AND A.ARSP_NM = #{ARSP_NM}
		</if>
		<if test="BRDT != '' and BRDT != null">
		  AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'), TRUNC(TO_DATE(BRDT,'YYYY'),'YEAR')) /12 +1) = #{BRDT}
		</if>
		<if test="SPC_FLD_NM != '' and SPC_FLD_NM != null">
		  AND A.SPC_FLD_NM LIKE '%'||#{SPC_FLD_NM}||'%'
		</if>
		
		<if test="LWYR_INTL_CNSTN_CN != '' and LWYR_INTL_CNSTN_CN != null">
		  AND A.LWYR_INTL_CNSTN_CN LIKE '%'||#{LWYR_INTL_CNSTN_CN}||'%'
		</if>
		<if test="LWYR_IPR_CNSTN_CN != '' and LWYR_IPR_CNSTN_CN != null">
		  AND A.LWYR_IPR_CNSTN_CN LIKE '%'||#{LWYR_IPR_CNSTN_CN}||'%'
		</if>
		<if test="ENDTERM != null and ENDTERM != ''">
		  AND TO_DATE(C.LST_YMD, 'YYYYMMDD') BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(SYSDATE+#{ENDTERM}, 'YYYYMMDD')
		</if>
	</select>
	
	<select id="getLawyerDetail" resultType="HashMap">
		/* suitSql.getLawyerDetail */
		SELECT A.LWYR_MNG_NO                /* 변호사관리번호           */
		     , A.JDAF_CORP_MNG_NO           /* 법무법인관리번호         */
		     , A.LWYR_NM                    /* 변호사명                 */
		     , A.LWYR_SE                    /* 변호사구분               */
		     , A.LWYR_CTRT_STTS_NM          /* 변호사계약상태명         */
		     , A.OGDP_CORP_LWYR_CNT         /* 소속법인변호사수         */
		     , A.PHOTO_MNG_PATH_NM          /* 사진관리경로명           */
		     , A.BRDT                       /* 생년월일                 */
		     , A.GNDR_SE                    /* 성별구분                 */
		     , A.TEST_SE_NM                 /* 시험구분명               */
		     , A.TEST_PASS_YR               /* 시험합격연도             */
		     , A.TEST_PASS_CYCL             /* 시험합격차수             */
		     , A.OFC_TELNO                  /* 사무실전화번호           */
		     , A.OFC_FXNO                   /* 사무실팩스번호           */
		     , A.MBL_TELNO                  /* 휴대전화번호             */
		     , A.EML_ADDR                   /* 이메일주소               */
		     , A.TKCG_EMP_EML_ADDR_CN       /* 담당직원이메일주소내용   */
		     , A.LGN_ID                     /* 로그인아이디             */
		     , A.LGN_PSWD                   /* 로그인비밀번호           */
		     , A.LGN_LCK_YN                 /* 로그인잠금여부           */
		     , A.LGN_FAIL_NMTM              /* 로그인실패횟수           */
		     , A.OTP_NO                     /* OTP번호                  */
		     
		     , A.ASST_LGN_ID
		     , A.ASST_LGN_PSWD
		     , A.ASST_LGN_LCK_YN
		     , A.ASST_LGN_FAIL_NMTM
		     , A.ASST_OTP_NO
		     
		     , A.CRR_MTTR                   /* 경력사항                 */
		     , A.ARSP_NM                    /* 전문분야명               */
		     , A.SPC_FLD_NM AS SPC_FLD_CD   /* 특별분야번호             */
		     , A.ACBG_CN                    /* 학력내용                 */
		     , A.RMRK_CN                    /* 비고내용                 */
		     , A.MEMO_CN                    /* 메모내용                 */
		     , A.LWYR_INTL_CNSTN_CN         /* 변호사국제자문내용       */
		     , A.LWYR_IPR_CNSTN_CN          /* 변호사지식재산권자문내용 */
		     , A.CVLCPT_CN                  /* 민원내용                 */
		     , A.ACAP_RFSL_CN               /* 수임거절내용             */
		     , B.JDAF_CORP_NM
		     , B.CORP_NOZ_YN
		     , B.CORP_INTL_CNSTN_CN
		     , B.CORP_IPR_CNSTN_CN
		FROM TB_COM_LWYR A, TB_COM_JDAF_CORP B
		WHERE (A.LWYR_MNG_NO = #{LWYR_MNG_NO} OR A.LGN_ID = #{LWYR_MNG_NO})
		  AND A.JDAF_CORP_MNG_NO = B.JDAF_CORP_MNG_NO
	</select>
	
	<select id="getSpcFldNm" resultType="String">
		/* suitSql.getSpcFldNm */
		SELECT CD_NM
		FROM TB_COM_CD
		WHERE CD_LCLSF_ENG_NM = 'SPC_FLD_NM'
		  AND CD_MNG_NO = #{SPC_FLD_NM}
	</select>
	
	<select id="getArspNm" resultType="String">
		/* suitSql.getArspNm */
		SELECT CD_NM
		FROM TB_COM_CD
		WHERE CD_LCLSF_ENG_NM = 'ARSP_NM'
		  AND CD_MNG_NO = #{ARSP_NM}
	</select>
	
	<select id="getTnrList" resultType="HashMap">
		/* suitSql.getTnrList */
		SELECT TNR_MNG_NO
		     , LWYR_MNG_NO
		     , ENTRST_BGNG_YMD
		     , ENTRST_END_YMD
		FROM TB_COM_LWYR_TNR
		WHERE LWYR_MNG_NO = #{LWYR_MNG_NO}
	</select>
	
	<update id="passwordChg" parameterType="HashMap">
		<if test="GRPCD != null and GRPCD != ''">
		  <if test='GRPCD == "Z"'>
		UPDATE TB_COM_LWYR
		SET ASST_LGN_PSWD = #{LGN_PSWD},
		    ASST_LGN_LCK_YN = 'N',
		    ASST_LGN_FAIL_NMTM = '0'
		WHERE LWYR_MNG_NO = #{LWYR_MNG_NO}
		  </if>
		  <if test='GRPCD == "X"'>
		UPDATE TB_COM_LWYR
		SET LGN_PSWD = #{LGN_PSWD},
		    LGN_LCK_YN = 'N',
		    LGN_FAIL_NMTM = '0'
		WHERE LWYR_MNG_NO = #{LWYR_MNG_NO}
		  </if>
		</if>
		<if test="GRPCD == null or GRPCD == ''">
		UPDATE TB_COM_LWYR
		SET LGN_PSWD = #{LGN_PSWD},
		    LGN_LCK_YN = 'N',
		    LGN_FAIL_NMTM = '0'
		WHERE LWYR_MNG_NO = #{LWYR_MNG_NO}
		</if>
	</update>
	
	<insert id="insertLawyerInfo" parameterType="HashMap">
		<selectKey keyProperty="LWYR_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_COM_LWYR (
		    LWYR_MNG_NO
		  , JDAF_CORP_MNG_NO
		  , LWYR_NM
		  , LWYR_SE
		  , LWYR_CTRT_STTS_NM
		  , OGDP_CORP_LWYR_CNT
		  , PHOTO_MNG_PATH_NM
		  , BRDT
		  , GNDR_SE
		  , TEST_SE_NM
		  , TEST_PASS_YR
		  , TEST_PASS_CYCL
		  , OFC_TELNO
		  , OFC_FXNO
		  , MBL_TELNO
		  , EML_ADDR
		  , TKCG_EMP_EML_ADDR_CN
		  , LGN_ID
		  , LGN_PSWD
		  , LGN_LCK_YN
		  , LGN_FAIL_NMTM
		  , OTP_NO
		  , CRR_MTTR
		  , ARSP_NM
		  , SPC_FLD_NM
		  , ACBG_CN
		  , RMRK_CN
		  , MEMO_CN
		  , LWYR_INTL_CNSTN_CN
		  , LWYR_IPR_CNSTN_CN
		  , CVLCPT_CN
		  , ACAP_RFSL_CN
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		  
		  , ASST_LGN_LCK_YN
		  , ASST_LGN_FAIL_NMTM
		  , ASST_OTP_NO
		  
		) VALUES (
		    #{LWYR_MNG_NO}
		  , #{JDAF_CORP_MNG_NO}
		  , #{LWYR_NM}
		  , #{LWYR_SE}
		  , #{LWYR_CTRT_STTS_NM}
		  , #{OGDP_CORP_LWYR_CNT}
		  , #{PHOTO_MNG_PATH_NM}
		  , #{BRDT}
		  , #{GNDR_SE}
		  , #{TEST_SE_NM}
		  , #{TEST_PASS_YR}
		  , #{TEST_PASS_CYCL}
		  , REPLACE(#{OFC_TELNO}, '-', '')
		  , REPLACE(#{OFC_FXNO}, '-', '')
		  , REPLACE(#{MBL_TELNO}, '-', '')
		  , #{EML_ADDR}
		  , #{TKCG_EMP_EML_ADDR_CN}
		  , #{LGN_ID}
		  , 'seoul123!!!'
		  , #{LGN_LCK_YN}
		  , #{LGN_FAIL_NMTM}
		  , #{OTP_NO}
		  , #{CRR_MTTR}
		  , #{ARSP_NM}
		  , #{SPC_FLD_NM}
		  , #{ACBG_CN}
		  , #{RMRK_CN}
		  , #{MEMO_CN}
		  , #{LWYR_INTL_CNSTN_CN}
		  , #{LWYR_IPR_CNSTN_CN}
		  , #{CVLCPT_CN}
		  , #{ACAP_RFSL_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		  
		  , 'N'
		  , 0
		  , ''
		)
	</insert>
	
	<update id="updateLawyerInfo" parameterType="HashMap">
		/* suitSql.updateLawyerInfo */
		UPDATE TB_COM_LWYR
		SET JDAF_CORP_MNG_NO     = #{JDAF_CORP_MNG_NO}
		  , LWYR_NM              = #{LWYR_NM}                 /* 변호사명 */
		  , LWYR_SE              = #{LWYR_SE}                 /* 변호사구분 */
		  , LWYR_CTRT_STTS_NM    = #{LWYR_CTRT_STTS_NM}       /* 변호사계약상태명 */
		  , OGDP_CORP_LWYR_CNT   = #{OGDP_CORP_LWYR_CNT}      /* 소속법인변호사수 */
		  , PHOTO_MNG_PATH_NM    = #{PHOTO_MNG_PATH_NM}       /* 사진관리경로명 */
		  , BRDT                 = #{BRDT}                    /* 생년월일 */
		  , GNDR_SE              = #{GNDR_SE}                 /* 성별구분 */
		  , TEST_SE_NM           = #{TEST_SE_NM}              /* 시험구분명 */
		  , TEST_PASS_YR         = #{TEST_PASS_YR}            /* 시험합격연도 */
		  , TEST_PASS_CYCL       = #{TEST_PASS_CYCL}          /* 시험합격차수 */
		  , OFC_TELNO            = REPLACE(#{OFC_TELNO}, '-', '')  /* 사무실전화번호 */
		  , OFC_FXNO             = REPLACE(#{OFC_FXNO}, '-', '')   /* 사무실팩스번호 */
		  , MBL_TELNO            = REPLACE(#{MBL_TELNO}, '-', '')  /* 휴대전화번호 */
		  , EML_ADDR             = #{EML_ADDR}                /* 이메일주소 */
		  , TKCG_EMP_EML_ADDR_CN = #{TKCG_EMP_EML_ADDR_CN}    /* 담당직원이메일주소내용 */
		  , LGN_ID               = #{LGN_ID}                  /* 로그인아이디 */
		  , CRR_MTTR             = #{CRR_MTTR}                /* 경력사항 */
		  , ARSP_NM              = #{ARSP_NM}                 /* 전문분야명 */
		  , SPC_FLD_NM           = #{SPC_FLD_NM}              /* 특별분야명 */
		  , ACBG_CN              = #{ACBG_CN}                 /* 학력내용 */
		  , MEMO_CN              = #{MEMO_CN}                 /* 메모내용 */
		  , RMRK_CN              = #{RMRK_CN}                 /* 비고내용 */
		  , LWYR_INTL_CNSTN_CN   = #{LWYR_INTL_CNSTN_CN}      /* 변호사국제자문내용 */
		  , LWYR_IPR_CNSTN_CN    = #{LWYR_IPR_CNSTN_CN}       /* 변호사지식재산권자문내용 */
		  , CVLCPT_CN            = #{CVLCPT_CN}               /* 민원내용 */
		  , ACAP_RFSL_CN         = #{ACAP_RFSL_CN}            /* 수임거절내용 */
		WHERE LWYR_MNG_NO = #{LWYR_MNG_NO}
	</update>
	
	<update id="updateLawyerInfoOut" parameterType="HashMap">
		/* suitSql.updateLawyerInfoOut */
		UPDATE TB_COM_LWYR
		SET ASST_LGN_ID   = #{ASST_LGN_ID}
		  , ASST_LGN_PSWD = #{ASST_LGN_PSWD}
		WHERE LWYR_MNG_NO = #{LWYR_MNG_NO}
	</update>
	
	<update id="updateLwyrImg" parameterType="HashMap">
		/* suitSql.updateLwyrImg */
		UPDATE TB_COM_LWYR
		SET PHOTO_MNG_PATH_NM = #{PHOTO_MNG_PATH_NM}
		WHERE LWYR_MNG_NO = #{TRGT_PST_MNG_NO}
	</update>
	
	<delete id="deleteLawyerInfo">
		/* suitSql.deleteLawyerInfo */
		DELETE FROM TB_COM_LWYR
		WHERE JDAF_CORP_MNG_NO = #{JDAF_CORP_MNG_NO}
		<if test="LWYR_MNG_NO != '' and LWYR_MNG_NO != null">
		  AND LWYR_MNG_NO = #{LWYR_MNG_NO}
		</if>
	</delete>
	
	<select id="getBankList" resultType="HashMap">
		/* suitSql.getBankList */
		SELECT BACNT_MNG_NO
		     , LWYR_MNG_NO
		     , DPSTR_NM
		     , BANK_NM
		     , BANK_SE_NO
		     , ACTNO
		     , USE_YN
		     , RMRK_CN
		FROM TB_COM_LWYR_BACNT
		WHERE LWYR_MNG_NO = #{LWYR_MNG_NO}
		<if test="BACNT_MNG_NO != '' and BACNT_MNG_NO != null">
		  AND BACNT_MNG_NO = #{BACNT_MNG_NO}
		</if>
	</select>
	
	<insert id="insertBankInfo" parameterType="HashMap">
		<selectKey keyProperty="BACNT_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertBankInfo */
		INSERT INTO TB_COM_LWYR_BACNT (
		    BACNT_MNG_NO       /* 계좌관리번호 */
		  , LWYR_MNG_NO        /* 변호사관리번호 */
		  , DPSTR_NM           /* 예금주명 */
		  , BANK_NM            /* 은행명 */
		  , BANK_SE_NO         /* 은행구분코드 */
		  , ACTNO              /* 계좌번호 */
		  , USE_YN             /* 사용여부 */
		  , RMRK_CN            /* 비고내용 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{BACNT_MNG_NO}
		  , #{LWYR_MNG_NO}
		  , #{DPSTR_NM}
		  , #{BANK_NM}
		  , #{BANK_SE_NO}
		  , #{ACTNO}
		  , #{USE_YN}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateBankInfo" parameterType="HashMap">
		/* suitSql.updateBankInfo */
		UPDATE TB_COM_LWYR_BACNT
		SET DPSTR_NM      = #{DPSTR_NM}
		  , BANK_NM       = #{BANK_NM}
		  , BANK_SE_NO    = #{BANK_SE_NO}
		  , ACTNO         = #{ACTNO}
		  , USE_YN        = #{USE_YN}
		  , RMRK_CN       = #{RMRK_CN}
		  , MDFCN_EMP_NM  = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO  = #{WRTR_EMP_NO}
		  , MDFCN_YMD     = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO = #{WRT_DEPT_NO}
		WHERE BACNT_MNG_NO = #{BACNT_MNG_NO}
	</update>
	
	<insert id="insertTnrInfo" parameterType="HashMap">
		<selectKey keyProperty="TNR_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertTnrInfo */
		INSERT INTO TB_COM_LWYR_TNR (
		    TNR_MNG_NO
		  , LWYR_MNG_NO
		  , ENTRST_BGNG_YMD
		  , ENTRST_END_YMD
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{TNR_MNG_NO}
		  , #{LWYR_MNG_NO}
		  , REPLACE(#{ENTRST_BGNG_YMD}, '-', '')
		  , REPLACE(#{ENTRST_END_YMD}, '-', '')
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateTnrInfo" parameterType="HashMap">
		/* suitSql.updateTnrInfo */
		UPDATE TB_COM_LWYR_TNR
		SET ENTRST_BGNG_YMD      = REPLACE(#{ENTRST_BGNG_YMD}, '-', '')
		  , ENTRST_END_YMD       = REPLACE(#{ENTRST_END_YMD}, '-', '')
		WHERE TNR_MNG_NO = #{TNR_MNG_NO}
	</update>
	
	<select id="selectLawyerPopList" resultType="HashMap">
		/* suitSql.selectLawyerPopList */
		SELECT *
		FROM (
		    SELECT L.LWYR_MNG_NO
		         , L.LWYR_NM
		         , L.JDAF_CORP_MNG_NO
		         , F.JDAF_CORP_NM
		         , L.LWYR_SE
		         , L.LWYR_CTRT_STTS_NM
		    FROM TB_COM_LWYR L, TB_COM_JDAF_CORP F
		    WHERE L.JDAF_CORP_MNG_NO = F.JDAF_CORP_MNG_NO
		    <if test="schText != '' and schText != null">
		      AND L.LWYR_NM LIKE '%'||#{schText}||'%'
		    </if>
		    ) A
		WHERE A.LWYR_CTRT_STTS_NM = 'Y'
		ORDER BY A.JDAF_CORP_NM
	</select>
	
	<select id="selectLawfirmPopList" resultType="HashMap">
		/* suitSql.selectLawfirmPopList */
		SELECT *
		FROM (
		    SELECT JDAF_CORP_MNG_NO
		         , JDAF_CORP_NM
		    FROM TB_COM_JDAF_CORP
		    WHERE 1=1
		    <if test="schText != '' and schText != null">
		      AND JDAF_CORP_NM LIKE '%'||#{schText}||'%'
		    </if>
		) A
		ORDER BY A.JDAF_CORP_NM
	</select>
	
	
	<select id="selectCostList" resultType="HashMap">
		/* suitSql.selectCostList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,'@', CASE WHEN LENGTH(F.PHYS_FILE_NM) > 5 THEN SUBSTR(F.PHYS_FILE_NM, 0, 5)||'...' ELSE F.PHYS_FILE_NM END) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,'@', F.SRVR_FILE_NM) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM
		         , F.LWS_MNG_NO
		         , F.INST_MNG_NO
		         , F.TRGT_PST_MNG_NO
		    FROM TB_LWS_FILE F
		    WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		      AND TRGT_PST_TBL_NM = 'TB_LWS_CST'
		    GROUP BY F.INST_MNG_NO, F.LWS_MNG_NO, F.TRGT_PST_MNG_NO
		)
		SELECT A.CST_MNG_NO        /* 비용관리번호 */
		     , A.INST_MNG_NO       /* 심급관리번호 */
		     , A.LWS_MNG_NO        /* 소송관리번호 */
		     , A.CST_PRCS_SE       /* 비용처리구분 */
		     , CASE WHEN A.CST_PRCS_SE = 'J' THEN '지급'
		            WHEN A.CST_PRCS_SE = 'H' THEN '회수'
		       END CST_PRCS_NM
		     , A.CST_SE_CD         /* 비용구분코드 */
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.CST_SE_CD AND Z.USE_YN = 'Y') AS CST_SE_NM
		     , TO_CHAR(TO_DATE(A.CST_PRCS_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS CST_PRCS_YMD  /* 비용처리일자 */
		     , A.PRCS_AMT          /* 처리금액 */
		     , A.CST_TRGT_MNG_NO   /* 비용대상관리번호 */
		     , (SELECT Z.JDAF_CORP_NM || ' ' || Z.LWYR_NM FROM TB_LWS_AGT Z WHERE Z.AGT_MNG_NO = A.CST_TRGT_MNG_NO) AS CST_TRGT_MNG_NM
		     , A.CST_PRCS_CMPTN_YN /* 비용처리완료여부 */
		     , A.RMRK_CN           /* 비고내용 */
		     , F.VIEWFILENM        /* 파일명 */
		     , F.SERVERFILENM      /* 서버파일명 */
		FROM TB_LWS_CST A
		     LEFT OUTER JOIN FILES F ON A.INST_MNG_NO = F.INST_MNG_NO AND A.LWS_MNG_NO = F.LWS_MNG_NO AND A.CST_MNG_NO = F.TRGT_PST_MNG_NO
		WHERE A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<select id="getCostDetail" resultType="HashMap">
		/* suitSql.getCostDetail */
		SELECT CST_MNG_NO
		     , INST_MNG_NO
		     , LWS_MNG_NO
		     , CST_PRCS_SE
		     , CASE WHEN CST_PRCS_SE = 'J' THEN '지급'
		            WHEN CST_PRCS_SE = 'H' THEN '회수'
		       END CST_PRCS_NM
		     , CST_SE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = CST_SE_CD AND Z.USE_YN = 'Y') AS CST_SE_NM
		     , TO_CHAR(TO_DATE(CST_PRCS_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS CST_PRCS_YMD
		     , PRCS_AMT
		     , CST_TRGT_MNG_NO
		     , (SELECT Z.JDAF_CORP_NM || ' ' || Z.LWYR_NM FROM TB_LWS_AGT Z WHERE Z.AGT_MNG_NO = CST_TRGT_MNG_NO) AS CST_TRGT_MNG_NM
		     , CST_PRCS_CMPTN_YN
		     , RMRK_CN
		     
		     , APRV_YN
		     , CASE WHEN APRV_YN = 'N' THEN '미신청'
		            WHEN APRV_YN = 'G' THEN '신청완료'
		            WHEN APRV_YN = 'R' THEN '보완필요'
		            WHEN APRV_YN = 'T' THEN '보완완료'
		            WHEN APRV_YN = 'Y' THEN '승인완료'
		       END APRV_NM
		     , GIVE_YN
		     , TO_CHAR(TO_DATE(APRV_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS APRV_YMD
		     , TO_CHAR(TO_DATE(GIVE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_YMD
		     , TO_CHAR(TO_DATE(GIVE_APLY_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_APLY_YMD
		     , CST_SE
		FROM TB_LWS_CST
		WHERE CST_MNG_NO = #{CST_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<insert id="insertCostInfo" parameterType="HashMap">
		<selectKey keyProperty="CST_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertCostInfo */
		INSERT INTO TB_LWS_CST (
		    CST_MNG_NO         /* 비용관리번호 */
		  , INST_MNG_NO        /* 심급관리번호 */
		  , LWS_MNG_NO         /* 소송관리번호 */
		  , CST_PRCS_SE        /* 비용처리구분 */
		  , CST_SE_CD          /* 비용구분코드 */
		  , CST_PRCS_YMD       /* 비용처리일자 */
		  , PRCS_AMT           /* 처리금액 */
		  , CST_TRGT_MNG_NO    /* 비용대상관리번호 */
		  , CST_PRCS_CMPTN_YN  /* 비용처리완료여부 */
		  , RMRK_CN            /* 비고내용 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		  
		  , APRV_YN
		  , GIVE_YN
		  , CST_SE
		) VALUES (
		    #{CST_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{CST_PRCS_SE}
		  , #{CST_SE_CD}
		  , REPLACE(#{CST_PRCS_YMD}, '-', '')
		  , #{PRCS_AMT}
		  , #{CST_TRGT_MNG_NO}
		  , #{CST_PRCS_CMPTN_YN}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		  
		  , 'N'
		  , 'N'
		  , #{CST_SE}
		)
	</insert>
	
	<update id="updateCostInfo" parameterType="HashMap">
		/* suitSql.updateCostInfo */
		UPDATE TB_LWS_CST
		SET CST_PRCS_SE       = #{CST_PRCS_SE}
		  , CST_SE_CD         = #{CST_SE_CD}
		  , CST_PRCS_YMD      = REPLACE(#{CST_PRCS_YMD}, '-', '')
		  , PRCS_AMT          = #{PRCS_AMT}
		  , CST_TRGT_MNG_NO   = #{CST_TRGT_MNG_NO}
		  , CST_PRCS_CMPTN_YN = #{CST_PRCS_CMPTN_YN}
		  , RMRK_CN           = #{RMRK_CN}
		  , MDFCN_EMP_NM  = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO  = #{WRTR_EMP_NO}
		  , MDFCN_YMD     = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO = #{WRT_DEPT_NO}
		WHERE CST_MNG_NO = #{CST_MNG_NO}
	</update>
	
	<delete id="deleteCostInfo">
		/* suitSql.deleteCostInfo */
		DELETE FROM TB_LWS_CST
		WHERE CST_MNG_NO = #{CST_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</delete>
	
	<select id="selectCalList" resultType="HashMap">
		SELECT CALFM_MNG_NO
		     , CAL_BGNG_AMT
		     , CAL_END_AMT
		     , ADD_AMT
		     , SBTR_AMT
		     , CAL_PER
		     , CALFM_SE
		     , RMRK_CN
		FROM TB_LWS_CST_CALFM
		WHERE 1=1
		<if test="gbn != '' and gbn != null">
		  AND CALFM_SE = #{gbn}
		  <if test="amt != '' and amt != null">
		      <if test="gbn == 1">
		          AND <![CDATA[ CAL_BGNG_AMT < #{amt} ]]>
		          AND <![CDATA[ CAL_END_AMT >= #{amt} ]]>
		      </if>
		      <if test="gbn == 2">
		          AND <![CDATA[ CAL_BGNG_AMT < #{amt} ]]>
		          AND <![CDATA[ CAL_END_AMT > #{amt} ]]>
		      </if>
		  </if>
		</if>
	</select>
	
	<insert id="insertCalInfo" parameterType="HashMap">
		<selectKey keyProperty="CALFM_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertCalInfo */
		INSERT INTO TB_LWS_CST_CALFM (
		    CALFM_MNG_NO       /* 계산식관리번호 */
		  , CAL_BGNG_AMT       /* 계산시작금액 */
		  , CAL_END_AMT        /* 계산종료금액 */
		  , ADD_AMT            /* 추가금액 */
		  , SBTR_AMT           /* 차감금액 */
		  , CAL_PER            /* 계산백분율 */
		  , CALFM_SE           /* 계산식구분 */
		  , RMRK_CN            /* 비고내용 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{CALFM_MNG_NO}
		  , #{CAL_BGNG_AMT}
		  , #{CAL_END_AMT}
		  , #{ADD_AMT}
		  , #{SBTR_AMT}
		  , #{CAL_PER}
		  , #{CALFM_SE}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateCalInfo" parameterType="HashMap">
		/* suitSql.insertCalInfo */
		UPDATE TB_LWS_CST_CALFM
		SET CAL_BGNG_AMT  = #{CAL_BGNG_AMT}
		  , CAL_END_AMT   = #{CAL_END_AMT}
		  , ADD_AMT       = #{ADD_AMT}
		  , SBTR_AMT      = #{SBTR_AMT}
		  , CAL_PER       = #{CAL_PER}
		  , CALFM_SE      = #{CALFM_SE}
		  , RMRK_CN       = #{RMRK_CN}
		  , MDFCN_EMP_NM  = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO  = #{WRTR_EMP_NO}
		  , MDFCN_YMD     = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO = #{WRT_DEPT_NO}
		WHERE CALFM_MNG_NO = #{CALFM_MNG_NO}
	</update>
	
	<delete id="deleteCalInfo">
		/* suitSql.deleteCalInfo */
		DELETE FROM TB_LWS_CST_CALFM WHERE CALFM_MNG_NO = #{CALFM_MNG_NO}
	</delete>
	
	
	<select id="selectChrgLawyerList" resultType="HashMap">
		/* suitSql.selectChrgLawyerList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,'@', CASE WHEN LENGTH(F.PHYS_FILE_NM) > 5 THEN SUBSTR(F.PHYS_FILE_NM, 0, 5)||'...' ELSE F.PHYS_FILE_NM END) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,'@', F.SRVR_FILE_NM) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM
		         , F.LWS_MNG_NO
		         , F.INST_MNG_NO
		         , F.TRGT_PST_MNG_NO
		    FROM TB_LWS_FILE F
		    WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		      AND TRGT_PST_TBL_NM = 'TB_LWS_AGT'
		    GROUP BY F.INST_MNG_NO, F.LWS_MNG_NO, F.TRGT_PST_MNG_NO
		)
		SELECT A.AGT_MNG_NO        /* 대리인관리번호 */
		     , A.INST_MNG_NO       /* 심급관리번호 */
		     , A.LWS_MNG_NO        /* 소송관리번호 */
		     , A.LWYR_MNG_NO       /* 변호사관리번호 */
		     , A.LWYR_NM           /* 변호사명 */
		     , A.JDAF_CORP_MNG_NO  /* 법무법인관리번호 */
		     , A.JDAF_CORP_NM      /* 법무법인명 */
		     , TO_CHAR(TO_DATE(A.DLGT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLGT_YMD          /* 위임일자 */
		     , TO_CHAR(TO_DATE(A.DLGT_END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLGT_END_YMD  /* 위임종료일자 */
		     
		     , CASE WHEN <![CDATA[A.DLGT_END_YMD <= TO_CHAR(SYSDATE, 'YYYYMMDD')]]> THEN '종료'
		            ELSE '위임'
		       END ENDYN
		       
		     , A.OTST_AMT          /* 착수금액 */
		     , A.SCS_PAY_AMT       /* 성공보수금액 */
		     , A.ACAP_AMT          /* 수임금액 */
		     , A.APRV_YN           /* 승인여부 */
		     , A.GIVE_YN           /* 지급여부 */
		     , A.GIVE_YMD          /* 지급일자 */
		     , A.RMRK_CN           /* 비고내용 */
		     , A.PRSL_PSBLTY_YN    /* 열람가능여부 */
		     , A.RCPT_YN
		     , A.RFSL_RSN
		     , CASE WHEN A.ACAP_AMT IS NULL THEN '금액미등록'
		            WHEN A.ACAP_AMT IS NOT NULL AND A.APRV_YN = 'N' THEN '금액미승인'
		            WHEN A.ACAP_AMT IS NOT NULL AND A.APRV_YN = 'Y' AND A.GIVE_YN = 'N' THEN '금액미지급'
		            WHEN A.ACAP_AMT IS NOT NULL AND A.APRV_YN = 'Y' AND A.GIVE_YN = 'Y' THEN '금액지급'
		       END AMT_STAT        /* 비용처리상황 */
		     , F.VIEWFILENM        /* 파일명 */
		     , F.SERVERFILENM      /* 서버파일명 */
		FROM TB_LWS_AGT A
		     LEFT OUTER JOIN FILES F
		     ON A.INST_MNG_NO = F.INST_MNG_NO
		     AND A.LWS_MNG_NO = F.LWS_MNG_NO
		     AND A.AGT_MNG_NO = F.TRGT_PST_MNG_NO
		WHERE A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.INST_MNG_NO = #{INST_MNG_NO}
		ORDER BY A.DLGT_YMD DESC
	</select>
	
	<select id="getChrgLawyerDetail" resultType="HashMap">
		/* suitSql.getChrgLawyerDetail */
		SELECT A.AGT_MNG_NO        /* 대리인관리번호 */
		     , A.INST_MNG_NO       /* 심급관리번호 */
		     , A.LWS_MNG_NO        /* 소송관리번호 */
		     , A.LWYR_MNG_NO       /* 변호사관리번호 */
		     , A.LWYR_NM           /* 변호사명 */
		     , A.JDAF_CORP_MNG_NO  /* 법무법인관리번호 */
		     , A.JDAF_CORP_NM      /* 법무법인명 */
		     , TO_CHAR(TO_DATE(A.DLGT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLGT_YMD          /* 위임일자 */
		     , TO_CHAR(TO_DATE(A.DLGT_END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLGT_END_YMD  /* 위임종료일자 */
		     , CASE WHEN <![CDATA[A.DLGT_END_YMD <= TO_CHAR(SYSDATE, 'YYYYMMDD')]]> THEN '종료'
		            ELSE '위임'
		       END ENDYN
		     , A.RCPT_YN
		     , A.RFSL_RSN
		     , TO_CHAR(A.OTST_AMT, 'FM999,999,999,999') AS OTST_AMT        /* 착수금액 */
		     , TO_CHAR(A.SCS_PAY_AMT, 'FM999,999,999,999') AS SCS_PAY_AMT  /* 성공보수금액 */
		     , TO_CHAR(A.ACAP_AMT, 'FM999,999,999,999') AS ACAP_AMT        /* 수임금액 */
		     , TO_CHAR(TO_DATE(A.GIVE_APLY_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_APLY_YMD
		     , A.APRV_YN           /* 승인여부 */
		     , A.GIVE_YN           /* 지급여부 */
		     , TO_CHAR(TO_DATE(A.GIVE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_YMD          /* 지급일자 */
		     , A.RMRK_CN           /* 비고내용 */
		     , A.PRSL_PSBLTY_YN    /* 열람가능여부 */
		     , B.BACNT_MNG_NO
		     , B.DPSTR_NM
		     , B.BANK_NM
		     , B.BANK_SE_NO
		     , B.ACTNO
		FROM TB_LWS_AGT A LEFT OUTER JOIN TB_COM_LWYR_BACNT B ON A.BACNT_MNG_NO = B.BACNT_MNG_NO
		WHERE A.AGT_MNG_NO = #{AGT_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<insert id="insertChrgLawyer" parameterType="HashMap">
		<selectKey keyProperty="AGT_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertChrgLawyer */
		INSERT INTO TB_LWS_AGT (
		    AGT_MNG_NO         /* 대리인관리번호 */
		  , INST_MNG_NO        /* 심급관리번호 */
		  , LWS_MNG_NO         /* 소송관리번호 */
		  , LWYR_MNG_NO        /* 변호사관리번호 */
		  , LWYR_NM            /* 변호사명 */
		  , JDAF_CORP_MNG_NO   /* 법무법인관리번호 */
		  , JDAF_CORP_NM       /* 법무법인명 */
		  , DLGT_YMD           /* 위임일자 */
		  , DLGT_END_YMD       /* 위임종료일자 */
		  
		  , APRV_YN            /* 승인여부 */
		  , GIVE_YN            /* 지급여부 */
		  
		  , RMRK_CN            /* 비고내용 */
		  , PRSL_PSBLTY_YN     /* 열람가능여부 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		  
		  , RCPT_YN
		) VALUES (
		    #{AGT_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{LWYR_MNG_NO}
		  , #{LWYR_NM}
		  , #{JDAF_CORP_MNG_NO}
		  , #{JDAF_CORP_NM}
		  , REPLACE(#{DLGT_YMD}, '-', '')
		  , REPLACE(#{DLGT_END_YMD}, '-', '')
		  
		  , 'N'
		  , 'N'
		  
		  , #{RMRK_CN}
		  , 'Y'
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		  
		  , 'A'
		)
	</insert>
	
	<update id="updateChrgLawyer" parameterType="HashMap">
		/* suitSql.updateChrgLawyer */
		UPDATE TB_LWS_AGT
		SET LWYR_MNG_NO       = #{LWYR_MNG_NO}
		  , LWYR_NM           = #{LWYR_NM}
		  , JDAF_CORP_MNG_NO  = #{JDAF_CORP_MNG_NO}
		  , JDAF_CORP_NM      = #{JDAF_CORP_NM}
		  , DLGT_YMD          = REPLACE(#{DLGT_YMD}, '-', '')
		  , DLGT_END_YMD      = REPLACE(#{DLGT_END_YMD}, '-', '')
		  , OTST_AMT          = #{OTST_AMT}
		  , SCS_PAY_AMT       = #{SCS_PAY_AMT}
		  , ACAP_AMT          = #{ACAP_AMT}
		  , APRV_YN           = #{APRV_YN}
		  , GIVE_YN           = #{GIVE_YN}
		  , GIVE_YMD          = #{GIVE_YMD}
		  , RMRK_CN           = #{RMRK_CN}
		  , PRSL_PSBLTY_YN    = #{PRSL_PSBLTY_YN}
		  , MDFCN_EMP_NM      = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO      = #{WRTR_EMP_NO}
		  , MDFCN_YMD         = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM     = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO     = #{WRT_DEPT_NO}
		WHERE AGT_MNG_NO  = #{AGT_MNG_NO}
		  AND LWS_MNG_NO  = #{LWS_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	<delete id="deleteChrgLawyer">
		/* suitSql.deleteChrgLawyer */
		DELETE FROM TB_LWS_AGT WHERE AGT_MNG_NO = #{AGT_MNG_NO}
	</delete>
	
	<update id="insertChrgCost" parameterType="HashMap">
		/* suitSql.insertChrgCost */
		UPDATE TB_LWS_AGT
		SET OTST_AMT      = #{OTST_AMT}
		  , SCS_PAY_AMT   = #{SCS_PAY_AMT}
		  , ACAP_AMT      = #{ACAP_AMT}
		  , GIVE_APLY_YMD = to_char(sysdate,'YYYYMMDD')
		  , APRV_YN       = #{APRV_YN}
		  , BACNT_MNG_NO  = #{BACNT_MNG_NO}
		WHERE AGT_MNG_NO  = #{AGT_MNG_NO}
		  AND LWS_MNG_NO  = #{LWS_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	<update id="updateChrgLawyerAmt" parameterType="HashMap">
		/* suitSql.updateChrgLawyerAmt */
		UPDATE TB_LWS_AGT
		SET MDFCN_EMP_NM      = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO      = #{WRTR_EMP_NO}
		  , MDFCN_YMD         = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM     = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO     = #{WRT_DEPT_NO}
		<if test="APRV_YN != '' and APRV_YN != null">
		  , APRV_YN           = #{APRV_YN}
		  <if test='APRV_YN == "Y"'>
		  , APRV_YMD          = to_char(sysdate,'YYYYMMDD')
		  </if>
		</if>
		<if test="GIVE_YN != '' and GIVE_YN != null">
		  , GIVE_YN           = #{GIVE_YN}
		</if>
		<if test="GIVE_YMD != '' and GIVE_YMD != null">
		  , GIVE_YMD          = REPLACE(#{GIVE_YMD}, '-', '')
		</if>
		WHERE AGT_MNG_NO  = #{AGT_MNG_NO}
		  AND LWS_MNG_NO  = #{LWS_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	<select id="sendLawyerInfo" resultType="String">
		/* suitSql.sendLawyerInfo */
		SELECT B.MBL_TELNO
		FROM TB_LWS_AGT A, TB_COM_LWYR B
		WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
		  AND A.AGT_MNG_NO = #{AGT_MNG_NO}
	</select>
	
	<select id="selectBondList" resultType="HashMap">
		/* suitSql.selectBondList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,'@', CASE WHEN LENGTH(F.PHYS_FILE_NM) > 5 THEN SUBSTR(F.PHYS_FILE_NM, 0, 5)||'...' ELSE F.PHYS_FILE_NM END) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,'@', F.SRVR_FILE_NM) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM
		         , F.LWS_MNG_NO
		         , F.INST_MNG_NO
		         , F.TRGT_PST_MNG_NO
		    FROM TB_LWS_FILE F
		    WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		      AND TRGT_PST_TBL_NM = 'TB_LWS_BND'
		    GROUP BY F.INST_MNG_NO, F.LWS_MNG_NO, F.TRGT_PST_MNG_NO
		)
		SELECT A.BND_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.BND_DBT_SE
		     , CASE WHEN A.BND_DBT_SE = 'B' THEN '채권'
		            WHEN A.BND_DBT_SE = 'D' THEN '채무'
		       END BND_DBT_SE_NM
		     , A.CNCPR_NM
		     , A.CNCPR_ADDR
		     , A.CNCPR_TELNO
		     , A.BND_SE_CD
		     , TO_CHAR(TO_DATE(A.BND_PBLCN_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS BND_PBLCN_YMD
		     , TO_CHAR(TO_DATE(A.JDGM_CFMTN_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS JDGM_CFMTN_YMD
		     , A.LWS_INCDNT_NM
		     , A.BND_INCDNT_NO
		     , A.BND_AMT
		     , A.RMRK_CN
		     , NVL(B.GIVE_RTRVL_AMT, 0) AS GIVE_RTRVL_AMT
		     , NVL((A.BND_AMT-NVL(B.GIVE_RTRVL_AMT, 0)), 0) AS BND_BLNC
		     , F.VIEWFILENM
		     , F.SERVERFILENM
		FROM TB_LWS_BND A LEFT OUTER JOIN (
		        SELECT SUM(GIVE_RTRVL_AMT) AS GIVE_RTRVL_AMT, BND_MNG_NO
		        FROM TB_LWS_BND_RTRVL
		        GROUP BY BND_MNG_NO
		    ) B ON A.BND_MNG_NO = B.BND_MNG_NO
		    LEFT OUTER JOIN FILES F ON A.INST_MNG_NO = F.INST_MNG_NO AND A.LWS_MNG_NO = F.LWS_MNG_NO AND A.BND_MNG_NO = F.TRGT_PST_MNG_NO
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
	</select>
	
	<select id="getBondDetail" resultType="HashMap">
		/* suitSql.getBondDetail */
		SELECT A.BND_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.BND_DBT_SE
		     , CASE WHEN A.BND_DBT_SE = 'B' THEN '채권'
		            WHEN A.BND_DBT_SE = 'D' THEN '채무'
		       END BND_DBT_SE_NM
		     , A.CNCPR_NM
		     
		     , A.CNCPR_ZIP
		     , A.CNCPR_ADDR
		     
		     , A.CNCPR_TELNO
		     , A.BND_SE_CD
		     , TO_CHAR(TO_DATE(A.BND_PBLCN_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS BND_PBLCN_YMD
		     , TO_CHAR(TO_DATE(A.JDGM_CFMTN_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS JDGM_CFMTN_YMD
		     , A.LWS_INCDNT_NM
		     , A.BND_INCDNT_NO
		     , A.BND_AMT
		     , A.RMRK_CN
		     
		     , A.SYS_ID
		     , A.TXTN_YMD
		     , A.DUDT_YMD
		     , A.TXTN_NO
		     , A.PRGRS_STTS_SE_NM
		     , A.TXPR_SE_NO
		     , CASE WHEN A.TXPR_SE_NO = '' THEN '미지정'
		            WHEN A.TXPR_SE_NO = '10' THEN '개인'
		            WHEN A.TXPR_SE_NO = '12' THEN '외국인'
		            WHEN A.TXPR_SE_NO = '20' THEN '단체'
		            WHEN A.TXPR_SE_NO = '30' THEN '법인'
		            WHEN A.TXPR_SE_NO = '40' THEN '공공기관'
		            WHEN A.TXPR_SE_NO = '50' THEN '외국기관'
		            WHEN A.TXPR_SE_NO = '99' THEN '기타'
		       END TXPR_SE_NM
		     
		     
		     , NVL(B.GIVE_RTRVL_AMT, 0) AS GIVE_RTRVL_AMT
		     , NVL((A.BND_AMT-NVL(B.GIVE_RTRVL_AMT, 0)), 0) AS BND_BLNC
		     
		     , A.INFRM_NO
		FROM TB_LWS_BND A LEFT OUTER JOIN (
		        SELECT SUM(GIVE_RTRVL_AMT) AS GIVE_RTRVL_AMT, BND_MNG_NO
		        FROM TB_LWS_BND_RTRVL
		        GROUP BY BND_MNG_NO
		    ) B ON A.BND_MNG_NO = B.BND_MNG_NO
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.BND_MNG_NO = #{BND_MNG_NO}
	</select>
	
	<select id="selectRecInfoList" resultType="HashMap">
		/* suitSql.selectRecInfoList */
		SELECT BND_RTRVL_MNG_NO
		     , BND_MNG_NO
		     , GIVE_RTRVL_AMT
		     , TO_CHAR(TO_DATE(GIVE_RTRVL_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_RTRVL_YMD
		FROM TB_LWS_BND_RTRVL
		WHERE BND_MNG_NO = #{BND_MNG_NO}
		ORDER BY GIVE_RTRVL_YMD ASC
	</select>
	
	<select id="getBondRecDetail" resultType="HashMap">
		/* suitSql.getBondRecDetail */
		SELECT BND_RTRVL_MNG_NO
		     , BND_MNG_NO
		     , GIVE_RTRVL_AMT
		     , TO_CHAR(TO_DATE(GIVE_RTRVL_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_RTRVL_YMD
		FROM TB_LWS_BND_RTRVL
		WHERE BND_RTRVL_MNG_NO = #{BND_RTRVL_MNG_NO}
	</select>
	
	<insert id="insertBondInfo" parameterType="HashMap">
		<selectKey keyProperty="BND_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertBondInfo */
		INSERT INTO TB_LWS_BND (
		    BND_MNG_NO        /* 채권관리번호 */
		  , INST_MNG_NO       /* 심급관리번호 */
		  , LWS_MNG_NO        /* 소송관리번호 */
		  , BND_DBT_SE        /* 채권채무구분 */
		  , CNCPR_NM          /* 당사자명 */
		  , CNCPR_ADDR        /* 당사자주소 */
		  , CNCPR_TELNO       /* 당사자전화번호 */
		  , BND_SE_CD         /* 채권구분코드 */
		  , BND_PBLCN_YMD     /* 채권발행일자 */
		  , JDGM_CFMTN_YMD    /* 판결확정일자 */
		  , LWS_INCDNT_NM     /* 소송사건명 */
		  , BND_INCDNT_NO     /* 채권사건번호 */
		  , BND_AMT           /* 채권금액 */
		  
		  , CNCPR_ZIP         /* 당사자우편번호 */
		  , SYS_ID            /* 시스템아이디 */
		  , TXTN_YMD          /* 과세일자 */
		  , DUDT_YMD          /* 납기일자 */
		  , TXTN_NO           /* 과세번호 */
		  , TXPR_SE_NO        /* 과세번호 */
		  
		  , RMRK_CN           /* 비고내용 */
		  , DEL_YN            /* 삭제여부 */
		  , WRTR_EMP_NM       /* 작성직원명 */
		  , WRTR_EMP_NO       /* 작성직원번호 */
		  , WRT_YMD           /* 작성일자 */
		  , WRT_DEPT_NM       /* 작성부서명 */
		  , WRT_DEPT_NO       /* 작성부서번호 */
		) VALUES (
		    #{BND_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{BND_DBT_SE}
		  , #{CNCPR_NM}
		  , #{CNCPR_ADDR}
		  , REPLACE(#{CNCPR_TELNO}, '-', '')
		  , #{BND_SE_CD}
		  , REPLACE(#{BND_PBLCN_YMD}, '-', '')
		  , REPLACE(#{JDGM_CFMTN_YMD}, '-', '')
		  , #{LWS_INCDNT_NM}
		  , #{BND_INCDNT_NO}
		  , #{BND_AMT}
		  
		  , #{CNCPR_ZIP}
		  , #{SYS_ID}
		  , REPLACE(#{TXTN_YMD}, '-', '')
		  , REPLACE(#{DUDT_YMD}, '-', '')
		  , #{TXTN_NO}
		  , #{TXPR_SE_NO}
		  
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateBondInfo" parameterType="HashMap">
		/* suitSql.updateBondInfo */
		UPDATE TB_LWS_BND
		SET BND_DBT_SE       = #{BND_DBT_SE}
		  , CNCPR_NM         = #{CNCPR_NM}
		  , CNCPR_ADDR       = #{CNCPR_ADDR}
		  , CNCPR_TELNO      = #{CNCPR_TELNO}
		  , BND_SE_CD        = #{BND_SE_CD}
		  , BND_PBLCN_YMD    = REPLACE(#{BND_PBLCN_YMD}, '-', '')
		  , JDGM_CFMTN_YMD   = REPLACE(#{JDGM_CFMTN_YMD}, '-', '')
		  , LWS_INCDNT_NM    = #{LWS_INCDNT_NM}
		  , BND_INCDNT_NO    = #{BND_INCDNT_NO}
		  , BND_AMT          = #{BND_AMT}
		  
		  , CNCPR_ZIP        = #{CNCPR_ZIP}
		  , SYS_ID           = #{SYS_ID}
		  , TXTN_YMD         = #{TXTN_YMD}
		  , DUDT_YMD         = #{DUDT_YMD}
		  , TXTN_NO          = #{TXTN_NO}
		  , TXPR_SE_NO       = #{TXPR_SE_NO}
		  
		  , RMRK_CN          = #{RMRK_CN}
		  , MDFCN_EMP_NM     = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO     = #{WRTR_EMP_NO}
		  , MDFCN_YMD        = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM    = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO    = #{WRT_DEPT_NO}
		WHERE BND_MNG_NO = #{BND_MNG_NO}
	</update>
	
	<update id="updateBondBuga" parameterType="HashMap">
		/* suitSql.updateBondBuga */
		UPDATE TB_LWS_BND
		SET PRGRS_STTS_SE_NM = #{PRGRS_STTS_SE_NM}
		<if test="TXTN_NO != null and TXTN_NO != ''">
		  , TXTN_NO = #{TXTN_NO}
		</if>
		<if test="INFRM_NO != null and INFRM_NO != ''">
		  , INFRM_NO = #{INFRM_NO}
		</if>
		WHERE BND_MNG_NO = #{BND_MNG_NO}
	</update>
	
	<insert id="insertRecInfo" parameterType="HashMap">
		<selectKey keyProperty="BND_RTRVL_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertRecInfo */
		INSERT INTO TB_LWS_BND_RTRVL (
		    BND_RTRVL_MNG_NO   /* 관리번호 */
		  , BND_MNG_NO         /* 채권관리번호 */
		  , GIVE_RTRVL_AMT     /* 지급/회수 금액 */
		  , GIVE_RTRVL_YMD     /* 지급/회수일 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{BND_RTRVL_MNG_NO}
		  , #{BND_MNG_NO}
		  , #{GIVE_RTRVL_AMT}
		  , REPLACE(#{GIVE_RTRVL_YMD}, '-', '')
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateRecInfo" parameterType="HashMap">
		/* suitSql.updateRecInfo */
		UPDATE TB_LWS_BND_RTRVL
		SET GIVE_RTRVL_AMT = #{GIVE_RTRVL_AMT}
		  , GIVE_RTRVL_YMD = #{GIVE_RTRVL_YMD}
		  , MDFCN_EMP_NM   = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO   = #{WRTR_EMP_NO}
		  , MDFCN_YMD      = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM  = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO  = #{WRT_DEPT_NO}
		WHERE BND_RTRVL_MNG_NO = #{BND_RTRVL_MNG_NO}
	</update>
	
	<delete id="deleteBondInfo">
		/* suitSql.deleteBondInfo */
		DELETE FROM TB_LWS_AGT WHERE BND_MNG_NO = #{BND_MNG_NO}
	</delete>
	
	<delete id="deleteRecInfo">
		/* suitSql.deleteRecInfo */
		DELETE FROM TB_LWS_BND_RTRVL
		WHERE BND_MNG_NO = #{BND_MNG_NO}
		<if test="BND_RTRVL_MNG_NO != '' and BND_RTRVL_MNG_NO != null">
		  AND BND_RTRVL_MNG_NO = #{BND_RTRVL_MNG_NO}
		</if>
	</delete>
	
	
	
	
	<select id="selectReportList" resultType="HashMap">
		/* suitSql.selectReportList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,'@', CASE WHEN LENGTH(F.PHYS_FILE_NM) > 5 THEN SUBSTR(F.PHYS_FILE_NM, 0, 5)||'...' ELSE F.PHYS_FILE_NM END) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,'@', F.SRVR_FILE_NM) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM
		         , F.LWS_MNG_NO
		         , F.INST_MNG_NO
		         , F.TRGT_PST_MNG_NO
		    FROM TB_LWS_FILE F
		    WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		      AND TRGT_PST_TBL_NM = 'TB_LWS_RPTP'
		    GROUP BY F.INST_MNG_NO, F.LWS_MNG_NO, F.TRGT_PST_MNG_NO
		)
		SELECT A.RPTP_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.RPTP_TTL
		     , A.RPTP_CN
		     , A.RMRK_CN
		     , TO_CHAR(TO_DATE(A.WRT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS WRT_YMD
		     , A.WRTR_EMP_NM
		     , F.VIEWFILENM
		     , F.SERVERFILENM
		FROM TB_LWS_RPTP A
		    LEFT OUTER JOIN FILES F ON A.INST_MNG_NO = F.INST_MNG_NO AND A.LWS_MNG_NO = F.LWS_MNG_NO AND A.RPTP_MNG_NO = F.TRGT_PST_MNG_NO
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
	</select>
	
	<select id="getReportDetail" resultType="HashMap">
		/* suitSql.getReportDetail */
		SELECT A.RPTP_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.RPTP_TTL
		     , A.RPTP_CN
		     , A.RMRK_CN
		     , TO_CHAR(TO_DATE(A.WRT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS WRT_YMD
		     , A.WRTR_EMP_NM
		FROM TB_LWS_RPTP A
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.RPTP_MNG_NO = #{RPTP_MNG_NO}
	</select>
	
	<insert id="insertReportInfo" parameterType="HashMap">
		<selectKey keyProperty="RPTP_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertReportInfo */
		INSERT INTO TB_LWS_RPTP (
		    RPTP_MNG_NO   /* 보고서관리번호 */
		  , INST_MNG_NO   /* 심급관리번호 */
		  , LWS_MNG_NO    /* 소송관리번호 */
		  , RPTP_TTL      /* 보고서제목 */
		  , RPTP_CN       /* 보고서내용 */
		  , RMRK_CN       /* 비고내용 */
		  , DEL_YN        /* 삭제여부 */
		  , WRTR_EMP_NM   /* 작성직원명 */
		  , WRTR_EMP_NO   /* 작성직원번호 */
		  , WRT_YMD       /* 작성일자 */
		  , WRT_DEPT_NM   /* 작성부서명 */
		  , WRT_DEPT_NO   /* 작성부서번호 */
		) VALUES (
		    #{RPTP_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{RPTP_TTL}
		  , #{RPTP_CN}
		  , #{RMRK_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateReportInfo" parameterType="HashMap">
		/* suitSql.updateReportInfo */
		UPDATE TB_LWS_RPTP
		SET RPTP_TTL       = #{RPTP_TTL}
		  , RPTP_CN        = #{RPTP_CN}
		  , RMRK_CN        = #{RMRK_CN}
		  , MDFCN_EMP_NM   = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO   = #{WRTR_EMP_NO}
		  , MDFCN_YMD      = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM  = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO  = #{WRT_DEPT_NO}
		WHERE RPTP_MNG_NO = #{RPTP_MNG_NO}
	</update>
	
	<delete id="deleteReportInfo">
		/* suitSql.deleteReportInfo */
		DELETE FROM TB_LWS_RPTP WHERE RPTP_MNG_NO = #{RPTP_MNG_NO}
	</delete>
	
	
	
	<select id="selectChkList" resultType="HashMap">
		/* suitSql.selectChkList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,'@', CASE WHEN LENGTH(F.PHYS_FILE_NM) > 5 THEN SUBSTR(F.PHYS_FILE_NM, 0, 5)||'...' ELSE F.PHYS_FILE_NM END) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,'@', F.SRVR_FILE_NM) ORDER BY F.PHYS_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM
		         , F.LWS_MNG_NO
		         , F.INST_MNG_NO
		         , F.TRGT_PST_MNG_NO
		    FROM TB_LWS_FILE F
		    WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		      AND TRGT_PST_TBL_NM = 'TB_LWS_RVW_PRGRS'
		    GROUP BY F.INST_MNG_NO, F.LWS_MNG_NO, F.TRGT_PST_MNG_NO
		)
		SELECT A.RVW_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.UP_RVW_MNG_NO
		     , A.ANS_SEQ
		     , A.RVW_DMND_TTL
		     , A.RVW_DMND_CN
		     , A.WRTR_EMP_NM
		     , TO_CHAR(TO_DATE(A.WRT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS WRT_YMD
		     , F.VIEWFILENM
		     , F.SERVERFILENM
		FROM TB_LWS_RVW_PRGRS A
		    LEFT OUTER JOIN FILES F ON A.INST_MNG_NO = F.INST_MNG_NO AND A.LWS_MNG_NO = F.LWS_MNG_NO AND A.RVW_MNG_NO = F.TRGT_PST_MNG_NO
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		ORDER BY A.LWS_MNG_NO, A.ANS_SEQ
	</select>
	
	<select id="getChkInfoDetail" resultType="HashMap">
		/* suitSql.getChkInfoDetail */
		SELECT A.RVW_MNG_NO
		     , A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , A.UP_RVW_MNG_NO
		     , A.ANS_SEQ
		     , A.RVW_DMND_TTL
		     , A.RVW_DMND_CN
		     , A.WRTR_EMP_NM
		     , TO_CHAR(TO_DATE(A.WRT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS WRT_YMD
		FROM TB_LWS_RVW_PRGRS A
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND A.RVW_MNG_NO = #{RVW_MNG_NO}
	</select>
	
	<select id="selectChkDepthCnt" resultType="int">
		SELECT CASE WHEN UP_RVW_MNG_NO = RVW_MNG_NO THEN 1
		            WHEN UP_RVW_MNG_NO != RVW_MNG_NO THEN ANS_SEQ+1
		       END CNT
		FROM TB_LWS_RVW_PRGRS
		WHERE RVW_MNG_NO = #{RVW_MNG_NO}
	</select>
	
	<insert id="insertChkInfo" parameterType="HashMap">
		<selectKey keyProperty="RVW_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertChkInfo */
		INSERT INTO TB_LWS_RVW_PRGRS (
		    RVW_MNG_NO     /* 검토관리번호 */
		  , INST_MNG_NO    /* 심급관리번호 */
		  , LWS_MNG_NO     /* 소송관리번호 */
		  , UP_RVW_MNG_NO  /* 상위검토관리번호 */
		  , ANS_SEQ        /* 답변순서 */
		  , RVW_DMND_TTL   /* 검토요청제목 */
		  , RVW_DMND_CN    /* 검토요청내용 */
		  , DEL_YN         /* 삭제여부 */
		  , WRTR_EMP_NM    /* 작성직원명 */
		  , WRTR_EMP_NO    /* 작성직원번호 */
		  , WRT_YMD        /* 작성일자 */
		  , WRT_DEPT_NM    /* 작성부서명 */
		  , WRT_DEPT_NO    /* 작성부서번호 */
		) VALUES (
		    #{RVW_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  <if test='gbn != "insert"'>
		  , #{UP_RVW_MNG_NO}
		  </if>
		  <if test='gbn == "insert"'>
		  , #{RVW_MNG_NO}
		  </if>
		  , #{ANS_SEQ}
		  , #{RVW_DMND_TTL}
		  , #{RVW_DMND_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateChkInfo" parameterType="HashMap">
		/* suitSql.updateChkInfo */
		UPDATE TB_LWS_RVW_PRGRS
		SET RVW_DMND_TTL   = #{RVW_DMND_TTL}
		  , RVW_DMND_CN    = #{RVW_DMND_CN}
		  , MDFCN_EMP_NM   = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO   = #{WRTR_EMP_NO}
		  , MDFCN_YMD      = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM  = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO  = #{WRT_DEPT_NO}
		WHERE RVW_MNG_NO = #{RVW_MNG_NO}
	</update>
	
	<delete id="deleteChkInfo">
		/* suitSql.deleteChkInfo */
		DELETE FROM TB_LWS_RVW_PRGRS WHERE RVW_MNG_NO = #{RVW_MNG_NO}
	</delete>
	
	<select id="selectMemoList" resultType="HashMap">
		/* suitSql.selectMemoList */
		SELECT MEMO_MNG_NO
		     , INST_MNG_NO
		     , LWS_MNG_NO
		     , MEMO_CN
		     , DECODE(RLS_YN, NULL, 'Y', RLS_YN) AS RLS_YN
		     , WRTR_EMP_NM
		     , WRTR_EMP_NO
		     , TO_CHAR(TO_DATE(WRT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS WRT_YMD
		     , WRT_DEPT_NM
		     , WRT_DEPT_NO
		FROM TB_LWS_MEMO
		WHERE INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<insert id="insertMemo" parameterType="HashMap">
		<selectKey keyProperty="MEMO_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertMemo */
		INSERT INTO TB_LWS_MEMO (
		    MEMO_MNG_NO   /* 메모관리번호 */
		  , INST_MNG_NO   /* 심급관리번호 */
		  , LWS_MNG_NO    /* 소송관리번호 */
		  , MEMO_CN       /* 메모내용 */
		  , RLS_YN
		  , DEL_YN        /* 삭제여부 */
		  , WRTR_EMP_NM   /* 작성직원명 */
		  , WRTR_EMP_NO   /* 작성직원번호 */
		  , WRT_YMD       /* 작성일자 */
		  , WRT_DEPT_NM   /* 작성부서명 */
		  , WRT_DEPT_NO   /* 작성부서번호 */
		) VALUES (
		    #{MEMO_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{MEMO_CN}
		  , #{RLS_YN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateMemo" parameterType="HashMap">
		/* suitSql.updateMemo */
		UPDATE TB_LWS_MEMO
		SET MEMO_CN        = #{MEMO_CN}
		  , RLS_YN         = #{RLS_YN}
		  , MDFCN_EMP_NM   = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO   = #{WRTR_EMP_NO}
		  , MDFCN_YMD      = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM  = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO  = #{WRT_DEPT_NO}
		WHERE MEMO_MNG_NO = #{MEMO_MNG_NO}
	</update>
	
	<delete id="deleteMemo">
		/* suitSql.deleteMemo */
		DELETE FROM TB_LWS_MEMO WHERE MEMO_MNG_NO = #{MEMO_MNG_NO}
	</delete>
	
	<select id="getSatisitemList" resultType="HashMap">
		/* suitSql.getSatisitemList */
		SELECT DGSTFN_SRVY_MNG_NO   /* 만족도관리번호 */
		     , DGSTFN_SRVY_CN       /* 만족도설문내용 */
		     , USE_YN               /* 사용여부 */
		     , DGSTFN_SRVY_TRGT_SE  /* 만족도설문대상구분 */
		     , CASE WHEN DGSTFN_SRVY_TRGT_SE = 'L' THEN '법무팀'
		            WHEN DGSTFN_SRVY_TRGT_SE = 'N' THEN '부서'
		       END DGSTFN_SRVY_TRGT_NM
		     , DGSTFN_EVL_TYPE_NM   /* 만족도평가유형명 */
		     , FST_ANS_ARTCL_NM     /* 첫번째답변항목명 */
		     , SEC_ANS_ARTCL_NM     /* 두번째답변항목명 */
		     , THR_ANS_ARTCL_NM     /* 세번째답변항목명 */
		     , FOUR_ANS_ARTCL_NM    /* 네번째답변항목명 */
		     , FIFTH_ANS_ARTCL_NM   /* 다섯번째답변항목명 */
		     , SRVY_SE              /* 설문구분 */
		FROM TB_COM_DGSTFN_ARTC
		WHERE SRVY_SE = #{SRVY_SE}
		  <if test="USE_YN != null and USE_YN != ''">
		  AND USE_YN = #{USE_YN}
		  </if>
	</select>
	
	<insert id="insertSatisitem" parameterType="HashMap">
		<selectKey keyProperty="DGSTFN_SRVY_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertSatisitem */
		INSERT INTO TB_COM_DGSTFN_ARTC (
		    DGSTFN_SRVY_MNG_NO
		  , DGSTFN_SRVY_CN
		  , USE_YN
		  , DGSTFN_SRVY_TRGT_SE
		  , DGSTFN_EVL_TYPE_NM
		  , FST_ANS_ARTCL_NM
		  , SEC_ANS_ARTCL_NM
		  , THR_ANS_ARTCL_NM
		  , FOUR_ANS_ARTCL_NM
		  , FIFTH_ANS_ARTCL_NM
		  , SRVY_SE
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		) VALUES (
		    #{DGSTFN_SRVY_MNG_NO}
		  , #{DGSTFN_SRVY_CN}
		  , #{USE_YN}
		  , #{DGSTFN_SRVY_TRGT_SE}
		  , #{DGSTFN_EVL_TYPE_NM}
		  , #{FST_ANS_ARTCL_NM}
		  , #{SEC_ANS_ARTCL_NM}
		  , #{THR_ANS_ARTCL_NM}
		  , #{FOUR_ANS_ARTCL_NM}
		  , #{FIFTH_ANS_ARTCL_NM}
		  , #{SRVY_SE}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateSatisitem" parameterType="HashMap">
		/* suitSql.updateSatisitem */
		UPDATE TB_COM_DGSTFN_ARTC
		SET DGSTFN_SRVY_CN       = #{DGSTFN_SRVY_CN}
		  , USE_YN               = #{USE_YN}
		  , DGSTFN_SRVY_TRGT_SE  = #{DGSTFN_SRVY_TRGT_SE}
		  , DGSTFN_EVL_TYPE_NM   = #{DGSTFN_EVL_TYPE_NM}
		  , FST_ANS_ARTCL_NM     = #{FST_ANS_ARTCL_NM}
		  , SEC_ANS_ARTCL_NM     = #{SEC_ANS_ARTCL_NM}
		  , THR_ANS_ARTCL_NM     = #{THR_ANS_ARTCL_NM}
		  , FOUR_ANS_ARTCL_NM    = #{FOUR_ANS_ARTCL_NM}
		  , FIFTH_ANS_ARTCL_NM   = #{FIFTH_ANS_ARTCL_NM}
		  , SRVY_SE              = #{SRVY_SE}
		WHERE DGSTFN_SRVY_MNG_NO = #{DGSTFN_SRVY_MNG_NO}
	</update>
	
	
	<select id="getSatisfactionList" resultType="HashMap">
		/* suitSql.getSatisfactionList */
		SELECT SATIS.DGSTFN_ANS_MNG_NO,
		       SATIS.TRGT_PST_MNG_NO,
		       SATIS.DGSTFN_ANS_SCR,
		       SATIS.WRTR_EMP_NM,
		       SATIS.WRTR_EMP_NO,
		       SATIS.DGSTFN_SRVY_TRGT_MNG_NO,
		       
		       ITEM.DGSTFN_SRVY_MNG_NO,
		       ITEM.DGSTFN_SRVY_CN,
		       ITEM.USE_YN,
		       ITEM.DGSTFN_SRVY_TRGT_SE,
		       ITEM.DGSTFN_EVL_TYPE_NM,
		       ITEM.FST_ANS_ARTCL_NM,
		       ITEM.SEC_ANS_ARTCL_NM,
		       ITEM.THR_ANS_ARTCL_NM,
		       ITEM.FOUR_ANS_ARTCL_NM,
		       ITEM.FIFTH_ANS_ARTCL_NM
		FROM TB_COM_DGSTFN_ARTC ITEM
		         LEFT OUTER JOIN TB_COM_DGSTFN_EXMN SATIS
		         ON ITEM.DGSTFN_SRVY_MNG_NO = SATIS.DGSTFN_SRVY_MNG_NO
		           AND TRGT_PST_MNG_NO = #{INST_MNG_NO}
		WHERE ITEM.USE_YN = 'Y'
		  AND ITEM.SRVY_SE = 'SUIT'
		ORDER BY SATIS.DGSTFN_SRVY_MNG_NO ASC
	</select>
	
	<select id="getProcSatisList" resultType="HashMap">
		/* suitSql.getProcSatisList */
		SELECT *
		FROM TB_COM_DGSTFN_EXMN
		WHERE TRGT_PST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<update id="updateSatisfaction" parameterType="java.util.Map">
		/* suitSql.updateSatisfaction */
		UPDATE TB_COM_DGSTFN_EXMN SET 
		<if test="DGSTFN_ANS_SCR != null and DGSTFN_ANS_SCR != ''">
			DGSTFN_ANS_SCR = #{DGSTFN_ANS_SCR}
		</if>
		WHERE DGSTFN_ANS_MNG_NO = #{DGSTFN_ANS_MNG_NO}
	</update>
	
	<insert id="insertSatisfaction" parameterType="HashMap">
		<selectKey keyProperty="DGSTFN_ANS_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertSatisitem */
		INSERT INTO TB_COM_DGSTFN_EXMN (
		    DGSTFN_ANS_MNG_NO         /* 만족도답변관리번호 */
		  , TRGT_PST_MNG_NO           /* 대상게시물관리번호 */
		  , DGSTFN_SRVY_MNG_NO        /* 만족도설문관리번호 */
		  , DGSTFN_ANS_SCR            /* 만족도답변점수 */
		  , DGSTFN_ETC_ANS_CN         /* 만족도기타답변내용 */
		  , DGSTFN_SRVY_TRGT_MNG_NO   /* 만족도설문대상관리번호 */
		  , DEL_YN                    /* 삭제여부 */
		  , WRTR_EMP_NM               /* 작성직원명 */
		  , WRTR_EMP_NO               /* 작성직원번호 */
		  , WRT_YMD                   /* 작성일자 */
		  , WRT_DEPT_NM               /* 작성부서명 */
		  , WRT_DEPT_NO               /* 작성부서번호 */
		) VALUES (
		    #{DGSTFN_ANS_MNG_NO}
		  , #{TRGT_PST_MNG_NO}
		  , #{DGSTFN_SRVY_MNG_NO}
		  , #{DGSTFN_ANS_SCR}
		  , #{DGSTFN_ETC_ANS_CN}
		  , #{DGSTFN_SRVY_TRGT_MNG_NO}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<select id="selectSatisfactionList" resultType="HashMap">
		/* suitSql.selectSatisfactionList */
		SELECT A.DGSTFN_ANS_MNG_NO
		     , A.TRGT_PST_MNG_NO
		     , B.SRVY_SE
		     , CASE WHEN B.DGSTFN_SRVY_TRGT_SE = 'N' THEN '부서'
		            WHEN B.DGSTFN_SRVY_TRGT_SE = 'L' THEN '법무팀'
		       END DGSTFN_SRVY_TRGT_SE
		     , B.DGSTFN_EVL_TYPE_NM
		     , C.JDAF_CORP_NM
		     , CASE WHEN A.DGSTFN_SRVY_MNG_NO = '0' THEN '기타의견'
		            ELSE B.DGSTFN_SRVY_CN
		       END DGSTFN_SRVY_CN
		     , (A.DGSTFN_ANS_SCR-1)/(5-1)*100 AS DGSTFN_ANS_SCR
		     , A.DGSTFN_ETC_ANS_CN
		FROM TB_COM_DGSTFN_EXMN A 
		     LEFT OUTER JOIN TB_COM_DGSTFN_ARTC B ON A.DGSTFN_SRVY_MNG_NO = B.DGSTFN_SRVY_MNG_NO
		     JOIN (
		         SELECT F.AGT_MNG_NO, F.JDAF_CORP_MNG_NO, F.JDAF_CORP_NM
		         FROM TB_LWS_AGT F
		         WHERE F.INST_MNG_NO = #{INST_MNG_NO}
		     ) C ON A.DGSTFN_SRVY_TRGT_MNG_NO = C.AGT_MNG_NO
		WHERE A.TRGT_PST_MNG_NO = #{INST_MNG_NO}
		ORDER BY A.DGSTFN_ANS_MNG_NO
	</select>
	
	<select id="getAgtList" resultType="HashMap">
		/* suitSql.getAgtList */
		<!-- 
		SELECT A.AGT_MNG_NO
		     , A.INST_MNG_NO
		     , A.DLGT_YMD
		     , A.PRSL_PSBLTY_YN
		     , REPLACE(B.INCDNT_NO, '@' ,'') AS INCDNT_NO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.PRGRS_STTS_CD AND Z.USE_YN = 'Y') AS PRGRS_STTS_NM
		     , CASE WHEN C.LWS_CNCPR_SE = 'PI' THEN C.LWS_CNCPR_NM END PIGO
		     , CASE WHEN C.LWS_CNCPR_SE = 'WON' THEN C.LWS_CNCPR_NM END WONGO
		FROM TB_LWS_AGT A, TB_LWS_INST B LEFT OUTER JOIN (
		    SELECT Z.INST_MNG_NO, Z.LWS_CNCPR_SE, SUBSTR(XMLAGG(XMLELEMENT(X,'@', Z.LWS_CNCPR_NM) ORDER BY Z.LWS_CNCPR_NM).EXTRACT('//text()'),2) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR Z, TB_LWS_AGT ZZ
		    WHERE ZZ.LWYR_MNG_NO = #{LWYR_MNG_NO}
		      AND Z.INST_MNG_NO = ZZ.INST_MNG_NO
		    GROUP BY Z.INST_MNG_NO, Z.LWS_CNCPR_SE
		) C ON B.INST_MNG_NO = C.INST_MNG_NO
		WHERE A.LWYR_MNG_NO = #{LWYR_MNG_NO}
		  AND A.INST_MNG_NO = B.INST_MNG_NO
		 -->
		<!-- 자문, 협약 추가하기 -->
		
		SELECT DOC_GBN
		     , DOC_NO1
		     , DOC_NO2
		     , LAWYER_PK
		     , DOC_NM
		     , EMP_NM
		     , PRGRS_STTS
		     , DECODE(PRSL_PSBLTY_YN, '', 'Y', PRSL_PSBLTY_YN) AS PRSL_PSBLTY_YN
		FROM (
		    SELECT 'SUIT' AS DOC_GBN
		         , B.LWS_MNG_NO  AS DOC_NO1
		         , C.INST_MNG_NO AS DOC_NO2
		         , A.AGT_MNG_NO  AS LAWYER_PK
		         , '(' || B.LWS_NO || ') ' || REPLACE(C.INCDNT_NO, '@', '') || ' ' ||B.LWS_INCDNT_NM AS DOC_NM
		         , B.SPRVSN_DEPT_NM || ' ' || B.SPRVSN_EMP_NM AS EMP_NM
		         , CASE WHEN C.INST_MNG_NO IS NULL THEN '소장접수'
		                WHEN C.JDGM_CFMTN_YMD IS NOT NULL THEN '판결확정'
		                ELSE (
		                    (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.LAST_INST_CD AND Z.USE_YN = 'Y') || 
		                    (
		                     CASE WHEN C.JDGM_ADJ_YMD IS NULL THEN ' 진행'
		                          WHEN C.JDGM_ADJ_YMD IS NOT NULL THEN ' 판결'
		                     END
		                    )
		                )
		           END PRGRS_STTS
		         , A.PRSL_PSBLTY_YN
		    FROM TB_LWS_AGT A, TB_LWS_MNG B, TB_LWS_INST C
		    WHERE A.INST_MNG_NO = C.INST_MNG_NO
		      AND B.LWS_MNG_NO = C.LWS_MNG_NO
		      AND A.LWYR_MNG_NO = #{LWYR_MNG_NO}
		    UNION ALL
		    SELECT 'AGREE' AS DOC_GBN
		         , B.CVTN_MNG_NO AS DOC_NO1
		         , B.CVTN_MNG_NO AS DOC_NO2
		         , A.RVW_TKCG_MNG_NO AS LAWYER_PK
		         , '(' || B.CVTN_DOC_NO || ') ' || B.CVTN_TTL AS DOC_NM
		         , B.CVTN_RQST_DEPT_NM || ' ' || B.CVTN_RQST_EMP_NM AS EMP_NM
		         , B.PRGRS_STTS_SE_NM AS PRGRS_STTS
		         , A.PRSL_PSBLTY_YN
		    FROM TB_CVTN_RVW_PIC A, TB_CVTN_MNG B
		    WHERE A.CVTN_MNG_NO = B.CVTN_MNG_NO
		      AND A.RVW_TKCG_EMP_NO = #{LWYR_MNG_NO}
		    UNION ALL
		    SELECT 'CONSULT' AS DOC_GBN
		         , B.CNSTN_MNG_NO AS DOC_NO1
		         , B.CNSTN_MNG_NO AS DOC_NO2
		         , A.RVW_TKCG_MNG_NO AS LAWYER_PK
		         , '(' || B.CNSTN_DOC_NO || ') ' || B.CNSTN_TTL AS DOC_NM
		         , B.CNSTN_RQST_DEPT_NM || ' ' || B.CNSTN_RQST_EMP_NM AS EMP_NM
		         , B.PRGRS_STTS_SE_NM AS PRGRS_STTS
		         , A.PRSL_PSBLTY_YN
		    FROM TB_CNSTN_RVW_PIC A, TB_CNSTN_MNG B
		    WHERE A.CNSTN_MNG_NO = B.CNSTN_MNG_NO
		      AND A.RVW_TKCG_EMP_NO = #{LWYR_MNG_NO}
		)
		ORDER BY DOC_GBN
	</select>
	
	<update id="setViewYn" parameterType="HashMap">
		/* suitSql.setViewYn */
		<if test='gbn=="SUIT"'>
		UPDATE TB_LWS_AGT
		SET PRSL_PSBLTY_YN = #{PRSL_PSBLTY_YN}
		WHERE AGT_MNG_NO = #{AGT_MNG_NO}
		</if>
		<if test='gbn=="CONSULT"'>
		UPDATE TB_CNSTN_RVW_PIC
		SET PRSL_PSBLTY_YN = #{PRSL_PSBLTY_YN}
		WHERE RVW_TKCG_MNG_NO = #{AGT_MNG_NO}
		</if>
		<if test='gbn=="AGREE"'>
		UPDATE TB_CVTN_RVW_PIC
		SET PRSL_PSBLTY_YN = #{PRSL_PSBLTY_YN}
		WHERE RVW_TKCG_MNG_NO = #{AGT_MNG_NO}
		</if>
	</update>
	
	<select id="selectUnchDateList" resultType="HashMap">
		/* suitSql.selectUnchDateList */
		SELECT B.*
		FROM (
		    SELECT A.*
		         , CEIL(ROWNUM/#{pagesize}) PAGE
		         , ROWNUM AS ROWNUMBER
		    FROM (
		        SELECT UNCH_DATE_MNG_NO
		             , UNCH_DATE_NM
		             , CASE WHEN INV_SE = 'D' THEN INV_DAY_CNT || '일'
		                    WHEN INV_SE = 'M' THEN (INV_DAY_CNT/30) || '개월'
		                    WHEN INV_SE = 'Y' THEN (INV_DAY_CNT/30/12) || '년'
		               END INV_DAY
		             , INV_DAY_CNT
		             , INV_SE
		             , NOTI_INV || '일' AS NOTI_INV_DAY_NM
		             , NOTI_INV
		             , NOTI_YN
		             , USE_YN
		             , REL_ARTCL_SE
		             , REL_ARTCL_TYPE_CD
		             , UNCH_DATE_CN
		        FROM TB_LWS_UNCH_DATE
		        <trim prefix="WHERE" prefixOverrides="AND |OR ">
		          <if test="UNCH_DATE_NM != '' and UNCH_DATE_NM != null">
		            AND UNCH_DATE_NM LIKE '%'||#{UNCH_DATE_NM}||'%'
		          </if>
		          <if test="USE_YN != '' and USE_YN != null">
		            AND USE_YN = #{NOTI_YN}
		          </if>
		        </trim>
		        <if test="orderby == '' or orderby == null ">
		            ORDER BY UNCH_DATE_MNG_NO DESC
		        </if>
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pageno != null and pageno != ''">
		        page = #{pageno}
		    </if>
		</trim>
	</select>
	
	<select id="selectUnchDateListCnt" resultType="int">
		/* suitSql.selectUnchDateListCnt */
		SELECT COUNT(*)
		FROM TB_LWS_UNCH_DATE
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		  <if test="UNCH_DATE_NM != '' and UNCH_DATE_NM != null">
		    AND UNCH_DATE_NM LIKE '%'||#{UNCH_DATE_NM}||'%'
		  </if>
		  <if test="USE_YN != '' and USE_YN != null">
		    AND USE_YN = #{USE_YN}
		  </if>
		</trim>
	</select>
	
	<select id="selectUnchDateInfo" resultType="HashMap">
		/* suitSql.selectUnchDateInfo */
		SELECT UNCH_DATE_MNG_NO
		     , UNCH_DATE_NM
		     , CASE WHEN INV_SE = 'D' THEN INV_DAY_CNT || '일'
		            WHEN INV_SE = 'M' THEN (INV_DAY_CNT/30) || '개월'
		            WHEN INV_SE = 'Y' THEN (INV_DAY_CNT/30/12) || '년'
		       END INV_DAY
		     , INV_DAY_CNT
		     , INV_SE
		     , NOTI_INV
		     , NOTI_INV || '일' AS NOTI_INV_DAY_NM
		     , NOTI_YN
		     , USE_YN
		     , REL_ARTCL_SE
		     , REL_ARTCL_TYPE_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = REL_ARTCL_TYPE_CD AND Z.USE_YN = 'Y') AS REL_ARTCL_TYPE_NM
		     , UNCH_DATE_CN
		FROM TB_LWS_UNCH_DATE
		WHERE UNCH_DATE_MNG_NO = #{UNCH_DATE_MNG_NO}
	</select>
	
	<insert id="insertUnchDate" parameterType="HashMap">
		<selectKey keyProperty="UNCH_DATE_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertUnchDate */
		INSERT INTO TB_LWS_UNCH_DATE (
		    UNCH_DATE_MNG_NO   /* 불변기일관리번호 */
		  , UNCH_DATE_NM       /* 불변기일명 */
		  , INV_DAY_CNT        /* 간격일수 */
		  , INV_SE             /* 간격구분 */
		  , NOTI_INV           /* 알림간격일수 */
		  , NOTI_YN            /* 알림여부 */
		  , USE_YN             /* 사용여부 */
		  , REL_ARTCL_SE       /* 관련항목구분 */
		  , REL_ARTCL_TYPE_CD  /* 관련항목유형코드 */
		  , UNCH_DATE_CN       /* 불변기일내용 */
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{UNCH_DATE_MNG_NO}
		  , #{UNCH_DATE_NM}
		  , #{INV_DAY_CNT}
		  , #{INV_SE}
		  , #{NOTI_INV}
		  , #{NOTI_YN}
		  , #{USE_YN}
		  , #{REL_ARTCL_SE}
		  , #{REL_ARTCL_TYPE_CD}
		  , #{UNCH_DATE_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateUnchDate" parameterType="HashMap">
		/* suitSql.updateUnchDate */
		UPDATE TB_LWS_UNCH_DATE
		SET UNCH_DATE_NM      = #{UNCH_DATE_NM}
		  , INV_DAY_CNT       = #{INV_DAY_CNT}
		  , INV_SE            = #{INV_SE}
		  , NOTI_INV          = #{NOTI_INV}
		  , NOTI_YN           = #{NOTI_YN}
		  , USE_YN            = #{USE_YN}
		  , REL_ARTCL_SE      = #{REL_ARTCL_SE}
		  , REL_ARTCL_TYPE_CD = #{REL_ARTCL_TYPE_CD}
		  , UNCH_DATE_CN      = #{UNCH_DATE_CN}
		  , MDFCN_EMP_NM      = #{WRTR_EMP_NM}
		  , MDFCN_EMP_NO      = #{WRTR_EMP_NO}
		  , MDFCN_YMD         = to_char(sysdate,'YYYYMMDD')
		  , MDFCN_DEPT_NM     = #{WRT_DEPT_NM}
		  , MDFCN_DEPT_NO     = #{WRT_DEPT_NO}
		WHERE UNCH_DATE_MNG_NO = #{UNCH_DATE_MNG_NO}
	</update>
	
	<delete id="deleteUnchDate">
		/* suitSql.deleteUnchDate */
		DELETE FROM TB_LWS_UNCH_DATE WHERE UNCH_DATE_MNG_NO = #{UNCH_DATE_MNG_NO}
	</delete>
	
	<select id="selectCalData" resultType="HashMap">
		/* suitSql.selectCalData */
		<if test='gbn == "S"'>
		SELECT A.*
		     , C.INCDNT_OTLN
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = C.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , C.LWS_INCDNT_NM
		     , (
		        SELECT SUBSTR(XMLAGG(XMLELEMENT(X,',', HH.EMP_NM) ORDER BY HH.EMP_NM).EXTRACT('//text()'),2) AS EMPNM
		        FROM TB_LWS_TKCG ZZ, TB_COM_HRIS HH
		        WHERE ZZ.INST_MNG_NO = A.INST_MNG_NO
		          AND ZZ.USE_YN = 'Y'
		          AND ZZ.TKCG_EMP_NO = HH.EMP_NO
		       ) AS EMPNM
		     <![CDATA[
		     , '<p><strong>담당자 : ' || 
		       (
		            SELECT SUBSTR(XMLAGG(XMLELEMENT(X,',', HH.EMP_NM) ORDER BY HH.EMP_NM).EXTRACT('//text()'),2) AS EMPNM
		            FROM TB_LWS_TKCG ZZ, TB_COM_HRIS HH
		            WHERE ZZ.INST_MNG_NO = A.INST_MNG_NO
		              AND ZZ.USE_YN = 'Y'
		              AND ZZ.TKCG_EMP_NO = HH.EMP_NO
		       ) || '</strong></p>' 
		       || '<p><strong>시간 : ' || A.VIEWTIME || '</strong></p>'
		       || '<p><strong>내용 : ' || C.INCDNT_OTLN || '</strong></p>'
		       AS MSG
		     ]]>
		FROM (
		        SELECT 'SUIT' AS GBN
		             , 'date' AS SUBGBN
		             , A.DATE_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		             , DECODE(A.DATE_TM, '', '', SUBSTR(A.DATE_TM, 0, 2) || '시 ' || SUBSTR(A.DATE_TM, 3, 4) || '분') AS VIEWTIME
		             , A.DATE_PLC_NM
		        FROM TB_LWS_DATE A
		           , TB_LWS_INST B
		        WHERE A.INST_MNG_NO = B.INST_MNG_NO
		        UNION ALL
		        SELECT 'SUIT' AS GBN
		             , 'bul' AS SUBGBN
		             , A.DOC_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		             , '' AS VIEWTIME
		             , '' AS DATE_PLC_NM
		        FROM TB_LWS_SBMSN_TMTL A
		           , TB_LWS_INST B
		           , TB_LWS_UNCH_DATE C
		        WHERE A.DOC_TYPE_CD = C.REL_ARTCL_TYPE_CD
		          AND A.INST_MNG_NO = B.INST_MNG_NO
		          AND C.USE_YN = 'Y'
		        UNION ALL
		        SELECT 'SUIT' AS GBN
		             , 'bul' AS SUBGBN
		             , A.DATE_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		             , '' AS VIEWTIME
		             , '' AS DATE_PLC_NM
		        FROM TB_LWS_DATE A
		           , TB_LWS_INST B
		           , TB_LWS_UNCH_DATE C
		        WHERE A.DATE_TYPE_CD = C.REL_ARTCL_TYPE_CD
		          AND A.INST_MNG_NO = B.INST_MNG_NO
		          AND C.USE_YN = 'Y'
		        UNION ALL
		        SELECT 'SUIT' AS GBN
		             , 'doc' AS SUBGBN
		             , A.DOC_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || A.DOC_YMD AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		             , '' AS VIEWTIME
		             , '' AS DATE_PLC_NM
		        FROM TB_LWS_SBMSN_TMTL A
		           , TB_LWS_INST B
		        WHERE A.INST_MNG_NO = B.INST_MNG_NO
		    ) A, TB_LWS_INST B, TB_LWS_MNG C
		WHERE A.LWS_MNG_NO = C.LWS_MNG_NO
		  AND A.INST_MNG_NO = B.INST_MNG_NO
		  AND B.LWS_MNG_NO = C.LWS_MNG_NO
		</if>
		<if test='gbn == "C"'>
		SELECT *
		FROM (
		    SELECT 'CONSULT' AS GBN
		         , A.CNSTN_MNG_NO
		         , A.CNSTN_DOC_NO
		         , '[' || A.CNSTN_DOC_NO || '] ' || A.CNSTN_TTL AS DATE_TYPE_NM
		         , B.RVW_TKCG_EMP_NM
		         , A.EMRG_YN
		         , TO_CHAR((TO_DATE(B.WRT_YMD, 'YYYY-MM-DD') + CASE WHEN A.EMRG_YN = 'Y' THEN 5 ELSE 10 END), 'YYYY-MM-DD') AS DATE_YMD
		         
		         , TO_CHAR(TO_DATE(B.WRT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS WRT_YMD
		         , A.CNSTN_TKCG_EMP_NM
		         , A.CNSTN_RQST_CN
		         , '[' ||
		           CASE WHEN B.INSD_OTSD_TASK_SE = 'I' THEN '내부'
		                WHEN B.INSD_OTSD_TASK_SE = 'O' THEN '외부'
		           END ||
		           '] ' ||
		           B.RVW_TKCG_EMP_NM || ' 변호사' AS RESULT_NM
		         <![CDATA[
		         , '<p><strong>담당자 : ' || A.CNSTN_TKCG_EMP_NM || '</strong></p>' 
		           || '<p><strong>의뢰직원 : ' || CNSTN_RQST_DEPT_NM || ' ' || A.CNSTN_RQST_EMP_NM || '</strong></p>'
		           || '<p><strong>변호사 : ' || 
		               '[' ||
		               CASE WHEN B.INSD_OTSD_TASK_SE = 'I' THEN '내부'
		                    WHEN B.INSD_OTSD_TASK_SE = 'O' THEN '외부'
		               END ||
		               '] ' ||
		               B.RVW_TKCG_EMP_NM || ' 변호사'
		           || '</strong></p>'
		           || '<p><strong>내용 : ' || A.CNSTN_RQST_CN || '</strong></p>'
		           AS MSG
		         ]]>
		    FROM TB_CNSTN_MNG A, TB_CNSTN_RVW_PIC B
		    WHERE A.CNSTN_MNG_NO = B.CNSTN_MNG_NO
		) A
		WHERE A.DATE_YMD IS NOT NULL
		</if>
		<if test='gbn == "A"'>
		SELECT *
		FROM (
		    SELECT 'AGREE' AS GBN
		         , A.CVTN_MNG_NO
		         , A.CVTN_DOC_NO
		         , '[' || A.CVTN_DOC_NO || '] ' || A.CVTN_TTL AS DATE_TYPE_NM
		         , B.RVW_TKCG_EMP_NM
		         , A.EMRG_YN
		         , TO_CHAR((TO_DATE(B.WRT_YMD, 'YYYY-MM-DD') + CASE WHEN A.EMRG_YN = 'Y' THEN 5 ELSE 10 END), 'YYYY-MM-DD') AS DATE_YMD
		         
		         , TO_CHAR(TO_DATE(B.WRT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS WRT_YMD
		         , A.CVTN_RQST_EMP_NM
		         , A.CVTN_RQST_CN
		         , '[' ||
		           CASE WHEN B.INSD_OTSD_TASK_SE = 'I' THEN '내부'
		                WHEN B.INSD_OTSD_TASK_SE = 'O' THEN '외부'
		           END ||
		           '] ' ||
		           B.RVW_TKCG_EMP_NM || ' 변호사' AS RESULT_NM
		         <![CDATA[
		         , '<p><strong>담당자 : ' || A.CVTN_TKCG_EMP_NM || '</strong></p>' 
		           || '<p><strong>의뢰직원 : ' || CVTN_RQST_DEPT_NM || ' ' || A.CVTN_RQST_EMP_NM || '</strong></p>'
		           || '<p><strong>변호사 : ' || 
		               '[' ||
		               CASE WHEN B.INSD_OTSD_TASK_SE = 'I' THEN '내부'
		                    WHEN B.INSD_OTSD_TASK_SE = 'O' THEN '외부'
		               END ||
		               '] ' ||
		               B.RVW_TKCG_EMP_NM || ' 변호사'
		           || '</strong></p>'
		           || '<p><strong>내용 : ' || A.CVTN_RQST_CN || '</strong></p>'
		           AS MSG
		         ]]>
		    FROM TB_CVTN_MNG A, TB_CVTN_RVW_PIC B
		    WHERE A.CVTN_MNG_NO = B.CVTN_MNG_NO
		) A
		WHERE A.DATE_YMD IS NOT NULL
		</if>
		<if test='gbn == "T" or gbn == "P"'>
		SELECT DISTINCT A.*
		FROM (
		    SELECT A.GBN
		         , A.SUBGBN
		         , A.INST_MNG_NO AS DOCPK1
		         , A.LWS_MNG_NO  AS DOCPK2
		         , '[소송] [' || C.LWS_NO || '] '|| A.DATE_TYPE_NM AS DATE_TYPE_NM
		         , A.DATE_YMD
		         , '' AS MENU_NO
		         , C.SPRVSN_DEPT_NO AS DEPTS
		    FROM (
		            SELECT 'SUIT' AS GBN
		                 , 'date' AS SUBGBN
		                 , A.DATE_MNG_NO
		                 , A.INST_MNG_NO
		                 , A.LWS_MNG_NO
		                 , REPLACE(B.INCDNT_NO, '@', '') || ' ' || (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		                 , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		                 , DECODE(A.DATE_TM, '', '', SUBSTR(A.DATE_TM, 0, 2) || '시 ' || SUBSTR(A.DATE_TM, 3, 4) || '분') AS VIEWTIME
		                 , A.DATE_PLC_NM
		            FROM TB_LWS_DATE A
		               , TB_LWS_INST B
		            WHERE A.INST_MNG_NO = B.INST_MNG_NO
		            UNION ALL
		            SELECT 'SUIT' AS GBN
		                 , 'bul' AS SUBGBN
		                 , A.DOC_MNG_NO
		                 , A.INST_MNG_NO
		                 , A.LWS_MNG_NO
		                 , REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		                 , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		                 , '' AS VIEWTIME
		                 , '' AS DATE_PLC_NM
		            FROM TB_LWS_SBMSN_TMTL A
		               , TB_LWS_INST B
		               , TB_LWS_UNCH_DATE C
		            WHERE A.DOC_TYPE_CD = C.REL_ARTCL_TYPE_CD
		              AND A.INST_MNG_NO = B.INST_MNG_NO
		              AND C.USE_YN = 'Y'
		            UNION ALL
		            SELECT 'SUIT' AS GBN
		                 , 'bul' AS SUBGBN
		                 , A.DATE_MNG_NO
		                 , A.INST_MNG_NO
		                 , A.LWS_MNG_NO
		                 , REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		                 , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		                 , '' AS VIEWTIME
		                 , '' AS DATE_PLC_NM
		            FROM TB_LWS_DATE A
		               , TB_LWS_INST B
		               , TB_LWS_UNCH_DATE C
		            WHERE A.DATE_TYPE_CD = C.REL_ARTCL_TYPE_CD
		              AND A.INST_MNG_NO = B.INST_MNG_NO
		              AND C.USE_YN = 'Y'
		            UNION ALL
		            SELECT 'SUIT' AS GBN
		                 , 'doc' AS SUBGBN
		                 , A.DOC_MNG_NO
		                 , A.INST_MNG_NO
		                 , A.LWS_MNG_NO
		                 , REPLACE(B.INCDNT_NO, '@', '') || ' ' || A.DOC_YMD AS DATE_TYPE_NM
		                 , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		                 , '' AS VIEWTIME
		                 , '' AS DATE_PLC_NM
		            FROM TB_LWS_SBMSN_TMTL A
		               , TB_LWS_INST B
		            WHERE A.INST_MNG_NO = B.INST_MNG_NO
		        ) A, TB_LWS_INST B, TB_LWS_MNG C
		    WHERE A.LWS_MNG_NO = C.LWS_MNG_NO
		      AND A.INST_MNG_NO = B.INST_MNG_NO
		      AND B.LWS_MNG_NO = C.LWS_MNG_NO
		    UNION ALL
		    SELECT *
		    FROM (
		        SELECT 'CONSULT' AS GBN
		             , 'con' AS SUBGBN
		             , A.CNSTN_MNG_NO AS DOCPK1
		             , A.CNSTN_MNG_NO AS DOCPK2
		             , '[자문] [' || A.CNSTN_DOC_NO || '] ' || A.CNSTN_TTL AS DATE_TYPE_NM
		             , TO_CHAR((TO_DATE(B.WRT_YMD, 'YYYY-MM-DD') + CASE WHEN A.EMRG_YN = 'Y' THEN 5 ELSE 10 END), 'YYYY-MM-DD') AS DATE_YMD
		             , A.MENU_MNG_NO AS MENU_NO
		             , A.CNSTN_RQST_DEPT_NO AS DEPTS
		        FROM TB_CNSTN_MNG A, TB_CNSTN_RVW_PIC B
		        WHERE A.CNSTN_MNG_NO = B.CNSTN_MNG_NO
		    ) A
		    WHERE A.DATE_YMD IS NOT NULL
		    UNION ALL
		    SELECT *
		    FROM (
		        SELECT 'AGREE' AS GBN
		             , 'agr' AS SUBGBN
		             , A.CVTN_MNG_NO AS DOCPK1
		             , A.CVTN_MNG_NO AS DOCPK2
		             , '[협약] [' || A.CVTN_DOC_NO || '] ' || A.CVTN_TTL AS DATE_TYPE_NM
		             , TO_CHAR((TO_DATE(B.WRT_YMD, 'YYYY-MM-DD') + CASE WHEN A.EMRG_YN = 'Y' THEN 5 ELSE 10 END), 'YYYY-MM-DD') AS DATE_YMD
		             , A.MENU_MNG_NO AS MENU_NO
		             , A.CVTN_RQST_DEPT_NO AS DEPTS 
		        FROM TB_CVTN_MNG A, TB_CVTN_RVW_PIC B
		        WHERE A.CVTN_MNG_NO = B.CVTN_MNG_NO
		    ) A
		) A
		WHERE 1=1
		<if test='gbn == "P"'>
		  AND A.DEPTS = #{WRT_DEPT_NO}
		</if>
		</if>
		<if test='gbn == "Z"'>
		SELECT A.*
		FROM (
		    SELECT 'LWYR' AS GBN
		         , '[' || B.JDAF_CORP_NM || '] ' || A.LWYR_NM || ' 임기 만료예정일' AS DATE_TYPE_NM
		         , A.LWYR_MNG_NO AS DOCPK1
		         , TO_CHAR(TO_DATE(C.ENTRST_END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		    FROM TB_COM_LWYR A
		       , TB_COM_JDAF_CORP B
		       , TB_COM_LWYR_TNR C
		    WHERE A.JDAF_CORP_MNG_NO = B.JDAF_CORP_MNG_NO
		      AND A.LWYR_MNG_NO = C.LWYR_MNG_NO
		) A
		WHERE 1=1
		</if>
		<if test='gbn == "E"'>
		SELECT A.*
		FROM (
		SELECT 'BOND' AS GBN
		     , REPLACE(B.INCDNT_NO, '@', '') || ' ' || A.CNCPR_NM || '채권 납부기일' AS DATE_TYPE_NM
		     , A.BND_MNG_NO  AS DOCPK1
		     , A.INST_MNG_NO AS DOCPK2
		     , A.LWS_MNG_NO  AS DOCPK3
		     , TO_CHAR(TO_DATE(A.DUDT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		FROM TB_LWS_BND A
		   , TB_LWS_INST B
		WHERE A.INST_MNG_NO = B.INST_MNG_NO
		  AND A.DUDT_YMD IS NOT NULL
		) A
		WHERE 1=1
		</if>
		<if test="docGbn != null and docGbn != ''">
		  <if test='docGbn == "sut"'>
		  AND SUBGBN IN ('bul', 'doc', 'date')
		  </if>
		  <if test='docGbn != "sut"'>
		  AND SUBGBN = #{docGbn}
		  </if>
		</if>
		
		<if test="dateGbn != null and dateGbn != ''">
		<![CDATA[
		  AND REPLACE(A.DATE_YMD,'-','') >= REPLACE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'),'-','')
		]]>
		<![CDATA[
		  AND REPLACE(A.DATE_YMD,'-','') <= REPLACE(TO_CHAR(TO_DATE(SYSDATE, 'YYYY-MM-DD') + #{dateGbn}, 'YYYY-MM-DD'),'-','')
		]]>
		</if>
		
		<if test="dateGbn == null or dateGbn == ''">
		<![CDATA[
		  AND REPLACE(A.DATE_YMD,'-','') >= REPLACE(#{start},'-','')
		]]>
		<![CDATA[
		  AND REPLACE(A.DATE_YMD,'-','') <= REPLACE(#{end},'-','')
		]]>
		</if>
	</select>
	
	
	
	<select id="getSuitConsultCnt" resultType="String">
		/* suitSql.getSuitConsultCnt */
		SELECT COUNT(*) FROM TB_LWS_RQST WHERE PRGRS_STTS_NM = '접수요청'
	</select>
	
	<select id="getPregressCnt" resultType="String">
		/* suitSql.getPregressCnt */
<!-- 		SELECT COUNT(*) FROM TB_LWS_MNG WHERE TRMN_YN = 'N' -->
		SELECT 
			COUNT(DISTINCT M.LWS_MNG_NO) AS LWS_TKCG_CNT
		FROM 
			TB_LWS_MNG M
			JOIN TB_LWS_TKCG T ON M.LWS_MNG_NO = T.LWS_MNG_NO
		WHERE 1=1
<!-- 			AND T.TKCG_EMP_NO = #{userId}  -->
			AND T.DEL_YN = 'N'
			AND T.USE_YN = 'Y'
			AND M.DEL_YN = 'N'
			AND M.TRMN_YN = 'N'
	</select>
	
	
	<select id="selectMerCaseInfo" resultType="HashMap">
		/* suitSql.selectMerCaseInfo */
		SELECT A.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , A.LWS_INCDNT_NM
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.PRGRS_STTS_CD AND Z.USE_YN = 'Y') AS PRGRS_STTS_NM
		     , B.INST_CD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.INST_CD AND Z.USE_YN = 'Y') AS INST_NM
		     , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		     , TO_CHAR(TO_DATE(C.MER_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS MER_YMD
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B
		   , TB_LWS_MER C
		WHERE C.MER_ASST_MNG_NO = #{LWS_MNG_NO}
		  AND C.MER_LWS_MNG_NO = A.LWS_MNG_NO
		  AND A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.LAST_INST_CD = B.INST_CD
	</select>
	
	<select id="selectMerCaseList" resultType="HashMap">
		/* suitSql.selectMerCaseList */
		SELECT B.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , B.LWS_INCDNT_NM
		     , B.LWS_UP_TYPE_NM
		     , B.PRGRS_STTS_NM
		     , B.INST_CD
		     , B.INST_NM
		     , B.INCDNT_NO
		     , B.LWS_CNCPR_NM
		     , B.PAGE
		FROM (
		    SELECT A.*,
		           CEIL(ROWNUM/#{pagesize}) AS PAGE
		    FROM (
		        WITH CNCPR AS (
		            SELECT INST_MNG_NO
		                 , LWS_CNCPR_SE
		                 , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		            FROM TB_LWS_CNCPR
		            GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		        )
		        SELECT A.LWS_MNG_NO
		             , B.INST_MNG_NO
		             , A.LWS_INCDNT_NM
		             , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		             , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.PRGRS_STTS_CD AND Z.USE_YN = 'Y') AS PRGRS_STTS_NM
		             , B.INST_CD
		             , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.INST_CD AND Z.USE_YN = 'Y') AS INST_NM
		             , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		             , CASE WHEN A.LWS_SE = 'J' THEN (SELECT Z.LWS_CNCPR_NM FROM CNCPR Z WHERE Z.INST_MNG_NO = B.INST_MNG_NO AND Z.LWS_CNCPR_SE = 'PI')
		                    WHEN A.LWS_SE = 'P' THEN (SELECT Z.LWS_CNCPR_NM FROM CNCPR Z WHERE Z.INST_MNG_NO = B.INST_MNG_NO AND Z.LWS_CNCPR_SE = 'WON')
		               END LWS_CNCPR_NM   /* 소송상대방 */
		        FROM TB_LWS_MNG A
		           , TB_LWS_INST B
		           , TB_LWS_MER C
		        WHERE <![CDATA[A.LWS_MNG_NO <> #{LWS_MNG_NO}]]>
		          AND A.LWS_MNG_NO = B.LWS_MNG_NO
		          AND A.LAST_INST_CD = B.INST_CD
		          AND <![CDATA[A.LWS_MNG_NO <> C.MER_ASST_MNG_NO]]>
		          AND <![CDATA[A.LWS_MNG_NO <> C.MER_LWS_MNG_NO]]>
		        <if test='schGbn == "A"'>
		          AND B.INCDNT_NO LIKE '%'||#{schTxt}||'%'
		        </if>
		        <if test='schGbn == "B"'>
		          AND A.LWS_INCDNT_NM LIKE '%'||#{schTxt}||'%'
		        </if>
		        ORDER BY B.INCDNT_NO
		    ) A
		) B 
		WHERE 1=1
		<if test="pageno != null and pageno != ''">
		  AND PAGE = #{pageno}
		</if>
	</select>
	
	<select id="getCaseListTotal" resultType="int">
		/* suitSql.getCaseListTotal */
		SELECT COUNT(*)
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B
		   , TB_LWS_MER C
		WHERE <![CDATA[A.LWS_MNG_NO <> #{LWS_MNG_NO}]]>
		  AND A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.LAST_INST_CD = B.INST_CD
		  AND <![CDATA[A.LWS_MNG_NO <> C.MER_ASST_MNG_NO]]>
		  AND <![CDATA[A.LWS_MNG_NO <> C.MER_LWS_MNG_NO]]>
		<if test='schGbn == "A"'>
		  AND B.INCDNT_NO LIKE '%'||#{schTxt}||'%'
		</if>
		<if test='schGbn == "B"'>
		  AND A.LWS_INCDNT_NM LIKE '%'||#{schTxt}||'%'
		</if>
	</select>
	
	<insert id="insertMerInfo" parameterType="HashMap">
		<selectKey keyProperty="MER_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertMerInfo */
		INSERT INTO TB_LWS_MER (
		    MER_MNG_NO
		  , MER_ASST_MNG_NO   /* 본안사건 소송PK */
		  , MER_YMD
		  , MER_LWS_MNG_NO    /* 병합대상사건 소송PK */
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		) VALUES (
		    #{MER_MNG_NO}
		  , #{MER_ASST_MNG_NO}
		  , REPLACE(#{MER_YMD}, '-', '')
		  , #{MER_LWS_MNG_NO}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<insert id="insertMerCaseInfo" parameterType="HashMap">
		<selectKey keyProperty="INST_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertMerCaseInfo */
		INSERT INTO TB_LWS_INST (
		    INST_MNG_NO             /* 심급관리번호     */
		  , LWS_MNG_NO              /* 소송관리번호     */
		  , INST_CD                 /* 심급코드         */
		  , INST_INCDNT_NM          /* 심급사건명       */
		  , PRGRS_STTS_CD           /* 진행상태코드     */
		  , FLGLW_YMD               /* 소제기일자       */
		  , INCDNT_NO               /* 사건번호         */
		  , LWS_RCPT_YMD            /* 소송접수일자     */
		  , CT_CD                   /* 법원코드         */
		  , JSDP_NM                 /* 재판부명         */
		  , PPOF_INCDNT_NO          /* 검찰청사건번호   */
		  , JNT_FLFMT_YN            /* 공동수행여부     */
		  , PPOF_LWS_FLFMT_EMP_NM   /* 검찰청소송수행자 */
		  , TKCG_PROC_NM            /* 담당검사         */
		  , PLNTF_AGT_NM            /* 원고대리인명     */
		  , DFND_AGT_NM             /* 피고대리인명     */
		  , LWS_EQVL                /* 소송가액         */
		  , CHG_LWS_EQVL            /* 변경소송가액     */
		  , ASST_PARC_YN            /* 보조참가여부     */
		  , PLNTF_ASST_PARC_NM      /* 원고보조참가자명 */
		  , DFND_ASST_PARC_NM       /* 피고보조참가자명 */
		  , RMRK_CN                 /* 비고내용         */
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		)
		SELECT #{INST_MNG_NO}
		     , #{MER_ASST_MNG_NO}
		     , INST_CD
		     , '병합사건' AS INST_INCDNT_NM
		     , PRGRS_STTS_CD
		     , FLGLW_YMD               /* 소제기일자       */
		     , INCDNT_NO               /* 사건번호         */
		     , LWS_RCPT_YMD            /* 소송접수일자     */
		     , CT_CD                   /* 법원코드         */
		     , JSDP_NM                 /* 재판부명         */
		     , PPOF_INCDNT_NO          /* 검찰청사건번호   */
		     , JNT_FLFMT_YN            /* 공동수행여부     */
		     , PPOF_LWS_FLFMT_EMP_NM   /* 검찰청소송수행자 */
		     , TKCG_PROC_NM            /* 담당검사         */
		     , PLNTF_AGT_NM            /* 원고대리인명     */
		     , DFND_AGT_NM             /* 피고대리인명     */
		     , LWS_EQVL                /* 소송가액         */
		     , CHG_LWS_EQVL            /* 변경소송가액     */
		     , ASST_PARC_YN            /* 보조참가여부     */
		     , PLNTF_ASST_PARC_NM      /* 원고보조참가자명 */
		     , DFND_ASST_PARC_NM       /* 피고보조참가자명 */
		     , RMRK_CN                 /* 비고내용         */
		     , 'N'
		     , #{WRTR_EMP_NM}
		     , #{WRTR_EMP_NO}
		     , to_char(sysdate,'YYYYMMDD')
		     , #{WRT_DEPT_NM}
		     , #{WRT_DEPT_NO}
		FROM TB_LWS_INST
		WHERE INST_MNG_NO = #{MER_LWS_MNG_NO}
	</insert>
	
	
	
	
	
	
	
	
	
	
	<select id="checkUserLock" resultType="String">
		/* suitSql.checkUserLock */
		SELECT LGN_LCK_YN
		FROM TB_COM_LWYR
		WHERE 1=1
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		  AND ASST_LGN_ID = #{LGN_ID}
		  </if>
		  <if test='ASST_YN == "N"'>
		  AND LGN_ID = #{LGN_ID}
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		  AND LGN_ID = #{LGN_ID}
		</if>
	</select>
	
	<select id="loginCheck1" resultType="HashMap">
		/* suitSql.loginCheck1 */
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		SELECT 'Z'                AS GRPCD
		     , L.JDAF_CORP_MNG_NO AS DEPTCD
		     , F.JDAF_CORP_NM     AS DEPTNAME
		     , L.LWYR_MNG_NO      AS USERNO
		     , L.LWYR_NM          AS USERNAME
		     , 'Z'                AS ISMANAGER
		     , L.ASST_OTP_NO AS OTP_NO
		     , L.ASST_LGN_ID AS LGN_ID
		FROM TB_COM_LWYR L, TB_COM_JDAF_CORP F
		WHERE L.JDAF_CORP_MNG_NO = F.JDAF_CORP_MNG_NO
		  AND L.ASST_LGN_ID = #{LGN_ID}
		  AND L.ASST_LGN_PSWD = #{LGN_PSWD}
		  AND L.LWYR_CTRT_STTS_NM = 'Y'
		  </if>
		  <if test='ASST_YN == "N"'>
		SELECT 'X'                AS GRPCD
		     , L.JDAF_CORP_MNG_NO AS DEPTCD
		     , F.JDAF_CORP_NM     AS DEPTNAME
		     , L.LWYR_MNG_NO      AS USERNO
		     , L.LWYR_NM          AS USERNAME
		     , 'X'                AS ISMANAGER
		     , L.OTP_NO
		     , L.LGN_ID
		FROM TB_COM_LWYR L, TB_COM_JDAF_CORP F
		WHERE L.JDAF_CORP_MNG_NO = F.JDAF_CORP_MNG_NO
		  AND L.LGN_ID = #{LGN_ID}
		  AND L.LGN_PSWD = #{LGN_PSWD}
		  AND L.LWYR_CTRT_STTS_NM = 'Y'
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		SELECT 'X'                AS GRPCD
		     , L.JDAF_CORP_MNG_NO AS DEPTCD
		     , F.JDAF_CORP_NM     AS DEPTNAME
		     , L.LWYR_MNG_NO      AS USERNO
		     , L.LWYR_NM          AS USERNAME
		     , 'X'                AS ISMANAGER
		     , L.OTP_NO
		     , L.LGN_ID
		FROM TB_COM_LWYR L, TB_COM_JDAF_CORP F
		WHERE L.JDAF_CORP_MNG_NO = F.JDAF_CORP_MNG_NO
		  AND L.LGN_ID = #{LGN_ID}
		  AND L.LGN_PSWD = #{LGN_PSWD}
		  AND L.LWYR_CTRT_STTS_NM = 'Y'
		</if>
	</select>
	
	<select id="duchk" resultType="int">
		/* suitSql.duchk */
		SELECT COUNT(*)
		FROM TB_COM_LWYR
		WHERE 1=1
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		  AND ASST_LGN_ID = #{LGN_ID}
		  </if>
		  <if test='ASST_YN == "N"'>
		  AND LGN_ID = #{LGN_ID}
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		  <if test="LGN_ID == null or LGN_ID == ''">
		  AND LWYR_MNG_NO = #{LWYR_MNG_NO}
		  </if>
		  <if test="LGN_ID != null and LGN_ID != ''">
		  AND LGN_ID = #{LGN_ID}
		  </if>
		</if>
	</select>
	
	<update id="updateLockCnt" parameterType="HashMap">
		/* suitSql.updateLockCnt */
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		UPDATE TB_COM_LWYR
		SET LGN_FAIL_NMTM = (
		    SELECT (CAST(ASST_LGN_FAIL_NMTM AS INT)+1) AS CNT
		    FROM TB_COM_LWYR
		    WHERE ASST_LGN_ID = #{LGN_ID}
		)
		WHERE ASST_LGN_ID = #{LGN_ID}
		  </if>
		  <if test='ASST_YN == "N"'>
		UPDATE TB_COM_LWYR
		SET LGN_FAIL_NMTM = (
		    SELECT (CAST(LGN_FAIL_NMTM AS INT)+1) AS CNT
		    FROM TB_COM_LWYR
		    WHERE LGN_ID = #{LGN_ID}
		)
		WHERE LGN_ID = #{LGN_ID}
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		UPDATE TB_COM_LWYR
		SET LGN_FAIL_NMTM = (
		    SELECT (CAST(LGN_FAIL_NMTM AS INT)+1) AS CNT
		    FROM TB_COM_LWYR
		    WHERE LGN_ID = #{LGN_ID}
		)
		WHERE LGN_ID = #{LGN_ID}
		</if>
	</update>
	
	<select id="getLockCnt" resultType="int">
		/* suitSql.getLockCnt */
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		SELECT ASST_LGN_FAIL_NMTM AS LGN_FAIL_NMTM
		FROM TB_COM_LWYR
		WHERE ASST_LGN_ID = #{LGN_ID}
		  </if>
		  <if test='ASST_YN == "N"'>
		SELECT LGN_FAIL_NMTM
		FROM TB_COM_LWYR
		WHERE LGN_ID = #{LGN_ID}
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		SELECT LGN_FAIL_NMTM
		FROM TB_COM_LWYR
		WHERE LGN_ID = #{LGN_ID}
		</if>
	</select>
	
	<update id="updateUserLock" parameterType="HashMap">
		/* suitSql.updateUserLock */
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		UPDATE TB_COM_LWYR
		SET ASST_LGN_LCK_YN = 'Y'
		  , ASST_LGN_FAIL_NMTM = '0'
		WHERE ASST_LGN_ID = #{LGN_ID}
		  </if>
		  <if test='ASST_YN == "N"'>
		UPDATE TB_COM_LWYR
		SET LGN_LCK_YN = 'Y'
		  , LGN_FAIL_NMTM = '0'
		WHERE LGN_ID = #{LGN_ID}
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		UPDATE TB_COM_LWYR
		SET LGN_LCK_YN = 'Y'
		  , LGN_FAIL_NMTM = '0'
		WHERE LGN_ID = #{LGN_ID}
		</if>
	</update>
	
	<update id="updateUserLockReset" parameterType="HashMap">
		/* suitSql.updateUserLockReset */
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		UPDATE TB_COM_LWYR
		SET ASST_LGN_LCK_YN = 'N'
		  , ASST_LGN_FAIL_NMTM = '0'
		WHERE ASST_LGN_ID = #{LGN_ID}
		  </if>
		  <if test='ASST_YN == "N"'>
		UPDATE TB_COM_LWYR
		SET LGN_LCK_YN = 'N'
		  , LGN_FAIL_NMTM = '0'
		WHERE LGN_ID = #{LGN_ID}
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		UPDATE TB_COM_LWYR
		SET LGN_LCK_YN = 'N'
		  , LGN_FAIL_NMTM = '0'
		WHERE LGN_ID = #{LGN_ID}
		</if>
	</update>
	
	<update id="setOtpKey">
		/* suitSql.setOtpKey */
		<if test="ASST_YN != null and ASST_YN != ''">
		  <if test='ASST_YN == "Y"'>
		UPDATE TB_COM_LWYR
		SET ASST_OTP_NO = #{OTP_NO}
		WHERE ASST_LGN_ID = #{LGN_ID}
		  </if>
		  <if test='ASST_YN == "N"'>
		UPDATE TB_COM_LWYR
		SET OTP_NO = #{OTP_NO}
		WHERE LGN_ID = #{LGN_ID}
		  </if>
		</if>
		<if test="ASST_YN == null or ASST_YN == ''">
		UPDATE TB_COM_LWYR
		SET OTP_NO = #{OTP_NO}
		WHERE LGN_ID = #{LGN_ID}
		</if>
	</update>
	
	
	<select id="getOutSuitCnt" resultType="HashMap">
		/* suitSql.getOutSuitCnt */
		SELECT NVL(SUM(ENDCNT), 0) AS ENDCNT
		     , NVL(SUM(PROGCNT), 0) AS PROGCNT
		     , NVL(SUM(TOTALCNT), 0) AS TOTALCNT
		FROM (
		    SELECT CASE WHEN A.JDGM_CFMTN_YMD IS NULL THEN 1 ELSE 0 END PROGCNT
		         , CASE WHEN A.JDGM_CFMTN_YMD IS NOT NULL THEN 1 ELSE 0 END ENDCNT
		         , CASE WHEN A.INST_MNG_NO IS NOT NULL THEN 1 ELSE 0 END TOTALCNT
		    FROM TB_LWS_INST A
		       , TB_LWS_AGT  B
		    WHERE A.INST_MNG_NO = B.INST_MNG_NO
		      AND B.LWYR_MNG_NO = #{WRTR_EMP_NO}
		      AND B.PRSL_PSBLTY_YN = 'Y'
		)
	</select>
	
	<select id="selectOutSuitList" resultType="HashMap">
		/* suitSql.selectOutSuitList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM (
		       SELECT A.LWS_MNG_NO
		            , A.INST_MNG_NO
		            , B.LWS_SE
		            , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		            , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		            , B.LWS_INCDNT_NM
		            , B.IMPT_LWS_YN
		            , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.INST_CD AND Z.USE_YN = 'Y') AS INST_NM
		            , REPLACE(A.INCDNT_NO, '@', '') AS INCDNT_NO
		            , TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLGLW_YMD
		            , CNCPR.LWS_CNCPR_NM AS LWS_CNCPR_NM
		            , C.RCPT_YN
		       FROM TB_LWS_INST A
		            LEFT JOIN (
		                SELECT INST_MNG_NO
		                     , LWS_CNCPR_SE
		                     , LISTAGG(LWS_CNCPR_NM, ',') 
		                       WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		                FROM TB_LWS_CNCPR
		                GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		            ) CNCPR ON A.INST_MNG_NO = CNCPR.INST_MNG_NO
		          , TB_LWS_MNG B
		          , TB_LWS_AGT C
		       WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		         AND A.INST_MNG_NO = C.INST_MNG_NO
		         AND (((B.LWS_SE = 'J' AND CNCPR.LWS_CNCPR_SE = 'PI') OR (B.LWS_SE = 'P' AND CNCPR.LWS_CNCPR_SE = 'WON'))  or CNCPR.LWS_CNCPR_SE is null)
		         AND C.LWYR_MNG_NO = #{WRTR_EMP_NO}
		         AND C.PRSL_PSBLTY_YN = 'Y'
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		  <if test="pagesize != '' and pagesize != null">
		    <if test="pageno != null and pageno != ''">
		        page = #{pageno}
		    </if>
		  </if>
		</trim>
	</select>
	
	<select id="selectOutSuitListCnt" resultType="int">
		/* suitSql.selectOutSuitListCnt */
		SELECT COUNT(*)
		FROM (
		    SELECT A.LWS_MNG_NO
		         , A.INST_MNG_NO
		         , B.LWS_SE
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.LWS_LWR_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_LWR_TYPE_NM
		         , B.LWS_INCDNT_NM
		         , B.IMPT_LWS_YN
		         , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.INST_CD AND Z.USE_YN = 'Y') AS INST_NM
		         , REPLACE(A.INCDNT_NO, '@', '') AS INCDNT_NO
		         , TO_CHAR(TO_DATE(A.FLGLW_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS FLGLW_YMD
		         , CNCPR.LWS_CNCPR_NM AS LWS_CNCPR_NM
		    FROM TB_LWS_INST A
		         LEFT JOIN (
		             SELECT INST_MNG_NO
		                  , LWS_CNCPR_SE
		                  , LISTAGG(LWS_CNCPR_NM, ',') 
		                    WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		             FROM TB_LWS_CNCPR
		             GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		         ) CNCPR ON A.INST_MNG_NO = CNCPR.INST_MNG_NO
		       , TB_LWS_MNG B
		       , TB_LWS_AGT C
		    WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		      AND A.INST_MNG_NO = C.INST_MNG_NO
		      AND (((B.LWS_SE = 'J' AND CNCPR.LWS_CNCPR_SE = 'PI') OR (B.LWS_SE = 'P' AND CNCPR.LWS_CNCPR_SE = 'WON'))  or CNCPR.LWS_CNCPR_SE is null)
		      AND C.LWYR_MNG_NO = #{WRTR_EMP_NO}
		      AND C.PRSL_PSBLTY_YN = 'Y'
		)
	</select>
	
	
	
	
	<select id="selectComiUserList" resultType="HashMap">
		/* suitSql.selectComiUserList */
		WITH DEPTINFO AS (
		    SELECT DEPT_NM, OGNZ_NM_PATH_CN, DEPT_NO, UP_DEPT_NO, LEVEL, ROWNUM AS NUMS
		    FROM TB_COM_ORGCHT
		    START WITH UP_DEPT_NO = '6110000'
		    CONNECT BY PRIOR DEPT_NO = UP_DEPT_NO
		    ORDER SIBLINGS BY SORT_SEQ
		)
		SELECT ROWNUM AS ROWN
		     , S.DLBR_CMT_MNG_NO    AS COMMITTEEID
		     , S.DLBR_MBCMT_EMP_NO  AS USER_ID
		     , S.DLBR_MBCMT_EMP_NM  AS USER_NM
		     , S.DLBR_MBCMT_DEPT_NO AS DEPT_CODE
		     , S.DLBR_MBCMT_DEPT_NM AS DEPT_NAME
		     , S.OTSD_MBCMT_YN      AS OUTYN
		     , U.JBGD_NM            AS JIKNM
		     , D.NUMS
		     , S.DLBR_MBCMT_DEPT_NM AS CODE_NAME_KR
		FROM TB_LWS_DLBR_CMT S LEFT OUTER JOIN TB_COM_HRIS U ON S.DLBR_MBCMT_EMP_NO = U.EMP_NO
		                       LEFT OUTER JOIN DEPTINFO D ON S.DLBR_MBCMT_DEPT_NO = D.DEPT_NO
		WHERE S.USE_YN = 'Y'
		ORDER BY NVL(D.NUMS, 9999)
	</select>
	
	<insert id="insertComiUserInfo" parameterType="HashMap">
		<selectKey keyProperty="comid" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertComiUserInfo */
		INSERT INTO TB_LWS_DLBR_CMT (
		    DLBR_CMT_MNG_NO    /* COMMITTEEID, */
		  , DLBR_MBCMT_EMP_NO  /* USER_ID,     */
		  , DLBR_MBCMT_EMP_NM  /* USER_NM,     */
		  , DLBR_MBCMT_DEPT_NO /* DEPT_CODE,   */
		  , DLBR_MBCMT_DEPT_NM /* DEPT_NAME,   */
		  , USE_YN             /* USEYN,       */
		  , OTSD_MBCMT_YN      /* OUTYN        */
		) VALUES (
		   #{comid},
		   #{userid},
		   #{usernm},
		   #{sosokcd},
		   #{sosoknm},
		   'Y',
		   #{outyn}
		)
	</insert>
	
	<update id="delComiUser" parameterType="HashMap">
		/* suitSql.delComiUser */
		UPDATE TB_LWS_DLBR_CMT
		SET USE_YN = 'N'
		  , END_YMD = to_char(sysdate,'YYYYMMDD')
		WHERE DLBR_CMT_MNG_NO = #{DLBR_CMT_MNG_NO}
	</update>
	
	<select id="getReviewRoleChk" resultType="int">
		/* suitSql.getReviewRoleChk */
		SELECT COUNT(*)
		FROM TB_LWS_DLBR
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
		  AND (RQST_EMP_NO = #{WRTR_EMP_NO} OR RQST_DEPT_NO = #{WRT_DEPT_NO})
	</select>
	
	<select id="selectreviewComiList" resultType="HashMap">
		/* suitSql.selectreviewComiList */
		WITH FILES AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,',', PHYS_FILE_NM) ORDER BY PHYS_FILE_NM).EXTRACT('//text()'),2) AS VIEWFILENM,
		           SUBSTR(XMLAGG(XMLELEMENT(X,',', SRVR_FILE_NM) ORDER BY SRVR_FILE_NM).EXTRACT('//text()'),2) AS SERVERFILENM,
		           TRGT_PST_MNG_NO
		    FROM TB_LWS_FILE
		    WHERE 1=1
		      AND TRGT_PST_TBL_NM = 'TB_LWS_DLBR_MBCMT'
		    GROUP BY TRGT_PST_MNG_NO
		)
		SELECT ROWNUM AS ROWN,
		       C.DLBR_MBCMT_MNG_NO,
		       C.DLBR_CMT_MNG_NO,
		       C.LWS_DLBR_MNG_NO,
		       C.DLBR_MBCMT_EMP_NO,
		       C.DLBR_MBCMT_EMP_NM,
		       C.DLBR_MBCMT_DEPT_NO,
		       C.DLBR_MBCMT_DEPT_NM,
		       C.DLBR_RSLT_NM,
		       C.DLBR_OPNN_CN,
		       U.JBGD_NM AS JIKNM,
		       F.VIEWFILENM,
		       F.SERVERFILENM
		FROM TB_LWS_DLBR_MBCMT C LEFT OUTER JOIN TB_COM_HRIS U ON C.DLBR_MBCMT_EMP_NO = U.EMP_NO
		                         LEFT OUTER JOIN FILES F ON C.DLBR_MBCMT_MNG_NO = F.TRGT_PST_MNG_NO
		WHERE C.LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
		ORDER BY C.DLBR_MBCMT_DEPT_NO, C.DLBR_MBCMT_EMP_NO, U.JBGD_NM, C.DLBR_MBCMT_EMP_NM ASC
	</select>
	
	<insert id="insertReviewInfo" parameterType="HashMap">
		<selectKey keyProperty="LWS_DLBR_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertReviewInfo */
		INSERT INTO TB_LWS_DLBR (
		    LWS_DLBR_MNG_NO
		  , DLBR_NO
		  , PRGRS_STTS_NM
		  , DLBR_BGNG_YMD
		  , DLBR_END_YMD
		  , DLBR_SE_NM
		  , DLBR_AGND_NM
		  , DLBR_DMND_CN
		  , DLBR_DCS_CN
		  , DLBR_END_CN
		  , RQST_EMP_NO
		  , RQST_EMP_NM
		  , RQST_DEPT_NO
		  , RQST_DEPT_NM
		) VALUES (
		    #{LWS_DLBR_MNG_NO}
		  , #{DLBR_NO}
		  , #{PRGRS_STTS_NM}
		  , REPLACE(#{DLBR_BGNG_YMD}, '-', '')
		  , REPLACE(#{DLBR_END_YMD}, '-', '')
		  , #{DLBR_SE_NM}
		  , #{DLBR_AGND_NM}
		  , #{DLBR_DMND_CN}
		  , #{DLBR_DCS_CN}
		  , #{DLBR_END_CN}
		  , #{RQST_EMP_NO}
		  , #{RQST_EMP_NM}
		  , #{RQST_DEPT_NO}
		  , #{RQST_DEPT_NM}
		)
	</insert>
	
	<insert id="insertReviewCase" parameterType="HashMap">
		<selectKey keyProperty="DLBR_INCDNT_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertReviewCase */
		INSERT INTO TB_LWS_DLBR_INCDNT (
		    DLBR_INCDNT_MNG_NO
		  , LWS_DLBR_MNG_NO
		  , LWS_MNG_NO
		  , INST_MNG_NO
		) VALUES (
		    #{DLBR_INCDNT_MNG_NO}
		  , #{LWS_DLBR_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{INST_MNG_NO}
		)
	</insert>
	
	<insert id="insertreviewComi" parameterType="HashMap">
		<selectKey keyProperty="recomid" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertreviewComi */
		INSERT INTO TB_LWS_DLBR_MBCMT (
		    DLBR_MBCMT_MNG_NO
		  , DLBR_CMT_MNG_NO
		  , LWS_DLBR_MNG_NO
		  , DLBR_MBCMT_EMP_NO
		  , DLBR_MBCMT_EMP_NM
		  , DLBR_MBCMT_DEPT_NO
		  , DLBR_MBCMT_DEPT_NM
		  , DLBR_RSLT_NM
		  , DLBR_OPNN_CN
		) VALUES (
		   #{recomid},
		   #{committeeid},
		   #{LWS_DLBR_MNG_NO},
		   #{userid},
		   #{usernm},
		   #{sosokcd},
		   #{sosoknm},
		   #{opinionyn},
		   #{opinion}
		)
	</insert>
	
	<update id="updateReviewInfo" parameterType="HashMap">
		/* suitSql.updateReviewInfo */
		UPDATE TB_LWS_DLBR
		SET DLBR_AGND_NM = #{DLBR_AGND_NM},
		    PRGRS_STTS_NM = #{PRGRS_STTS_NM},
		    DLBR_BGNG_YMD = REPLACE(#{DLBR_BGNG_YMD}, '-', ''),
		    DLBR_END_YMD = REPLACE(#{DLBR_END_YMD}, '-', ''),
		    DLBR_NO = #{DLBR_NO},
		    DLBR_DMND_CN = #{DLBR_DMND_CN},
		    DLBR_END_CN = #{DLBR_END_CN},
		    DLBR_SE_NM = #{DLBR_SE_NM}
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</update>
	
	<select id="selectEndComList" resultType="HashMap">
		/* suitSql.selectEndComList */
		SELECT ROWNUM AS ROWN,
		       C.DLBR_CMT_MNG_NO,
		       C.DLBR_MBCMT_EMP_NO,
		       C.DLBR_MBCMT_EMP_NM,
		       C.DLBR_MBCMT_DEPT_NO,
		       C.DLBR_MBCMT_DEPT_NM,
		       NVL(U.JBGD_NM, '') AS JIKNM,
		       TO_CHAR(TO_DATE(C.END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS END_YMD,
		       DECODE(C.OTSD_MBCMT_YN, 'Y', '외부의원', '내부의원') AS OUTYN
		FROM TB_LWS_DLBR_CMT C LEFT OUTER JOIN TB_COM_HRIS U ON C.DLBR_MBCMT_EMP_NO = U.EMP_NO
		WHERE C.USE_YN = 'N'
		ORDER BY C.END_YMD DESC, C.DLBR_MBCMT_EMP_NM ASC
	</select>
	
	<select id="selectReviewList" resultType="HashMap">
		/* suitSql.selectReviewList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		           <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		           </if>
		           ROWNUM
		    FROM (
		        SELECT S.LWS_DLBR_MNG_NO,
		               S.DLBR_AGND_NM,
		               S.DLBR_DCS_CN,
		               S.DLBR_DMND_CN,
		               S.PRGRS_STTS_NM,
		               
		               TO_CHAR(TO_DATE(S.DLBR_BGNG_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLBR_BGNG_YMD,
		               TO_CHAR(TO_DATE(S.DLBR_END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLBR_END_YMD,
		               REPLACE(S.DLBR_NO, '@', '') AS DLBR_NO,
		               S.RQST_EMP_NM,
		               S.RQST_EMP_NO,
		               S.RQST_DEPT_NM,
		               S.RQST_DEPT_NO,
		               S.DLBR_SE_NM
		        FROM TB_LWS_DLBR S LEFT OUTER JOIN TB_LWS_DLBR_INCDNT R ON S.LWS_DLBR_MNG_NO = R.LWS_DLBR_MNG_NO
		                           LEFT OUTER JOIN TB_LWS_INST C ON R.INST_MNG_NO = C.INST_MNG_NO
		        WHERE 1=1
		        <if test="grpcd != '' and grpcd != null">
		            <if test='grpcd != "Y" and grpcd != "C"'>
		            AND (S.RQST_DEPT_NO = #{sdeptid} OR S.RQST_EMP_NO = #{writerid})
		            </if>
		        </if>
		        <if test="casenum != '' and casenum != null">
		          AND REPLACE(C.INCDNT_NO, '@' ,'') LIKE '%'||#{casenum}||'%'
		        </if>
		        <if test="deptnm != '' and deptnm != null">
		          AND S.RQST_DEPT_NM LIKE '%'||#{deptnm}||'%'
		        </if>
		        <if test="suitcont != '' and suitcont != null">
		          AND S.DLBR_DMND_CN LIKE '%'||#{suitcont}||'%'
		        </if>
		        ORDER BY S.DLBR_BGNG_YMD DESC
		    ) A
		    <if test="orderby != ''">
		      ${orderby}
		    </if>
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		        <if test="pageno != null and pageno != ''">
		        page = #{pageno}
		        </if>
		    </if>
		</trim>
	</select>
	
	<select id="selectReviewListCnt" resultType="int">
		/* suitSql.selectReviewListCnt */
		SELECT COUNT(*)
		FROM (
		    SELECT S.LWS_DLBR_MNG_NO AS REVIEWID,
		           S.DLBR_AGND_NM AS TITLE,
		           S.DLBR_DCS_CN AS CONT,
		           S.DLBR_DMND_CN AS SUITCONT,
		           S.PRGRS_STTS_NM AS STATE,
		           S.DLBR_BGNG_YMD AS STARTDT,
		           S.DLBR_END_YMD AS ENDDT,
		           REPLACE(S.DLBR_NO, '@', '') AS REVIEWNO,
		           S.RQST_EMP_NM AS WRITER,
		           S.RQST_EMP_NO AS WRITERID,
		           S.RQST_DEPT_NM AS DEPTNAME,
		           S.RQST_DEPT_NO AS DEPTID,
		           S.DLBR_SE_NM AS REVIEWGBN
		    FROM TB_LWS_DLBR S LEFT OUTER JOIN TB_LWS_DLBR_INCDNT R ON S.LWS_DLBR_MNG_NO = R.LWS_DLBR_MNG_NO
		                       LEFT OUTER JOIN TB_LWS_INST C ON R.INST_MNG_NO = C.INST_MNG_NO
		    WHERE 1=1
		    <if test="grpcd != '' and grpcd != null">
		        <if test='grpcd != "Y" and grpcd != "C"'>
		        AND (S.RQST_DEPT_NO = #{sdeptid} OR S.RQST_EMP_NO = #{writerid})
		        </if>
		    </if>
		    <if test="casenum != '' and casenum != null">
		      AND REPLACE(C.INCDNT_NO, '@' ,'') LIKE '%'||#{casenum}||'%'
		    </if>
		    <if test="dept != '' and dept != null">
		      AND S.RQST_DEPT_NM = #{dept}
		    </if>
		    <if test="suitcont != '' and suitcont != null">
		      AND S.DLBR_DMND_CN LIKE '%'||#{suitcont}||'%'
		    </if>
		) A
	</select>
	
	<select id="getSuitReviewDetail" resultType="HashMap">
		/* suitSql.getSuitReviewDetail */
		WITH SUITINFO AS (
		    SELECT SUBSTR(XMLAGG(XMLELEMENT(X,',', R.LWS_DLBR_MNG_NO) ORDER BY R.LWS_DLBR_MNG_NO).EXTRACT('//text()'),2) AS LWS_DLBR_MNG_NO
		         , SUBSTR(XMLAGG(XMLELEMENT(X,',', S.LWS_INCDNT_NM) ORDER BY S.LWS_MNG_NO).EXTRACT('//text()'),2) AS LWS_INCDNT_NM
		         , SUBSTR(XMLAGG(XMLELEMENT(X,',', REPLACE(C.INCDNT_NO, '@', '')) ORDER BY C.INST_MNG_NO).EXTRACT('//text()'),2) AS INCDNT_NO
		         , SUBSTR(XMLAGG(XMLELEMENT(X,',', S.LWS_MNG_NO) ORDER BY S.LWS_MNG_NO).EXTRACT('//text()'),2) AS LWS_MNG_NO
		         , SUBSTR(XMLAGG(XMLELEMENT(X,',', C.INST_MNG_NO) ORDER BY C.INST_MNG_NO).EXTRACT('//text()'),2) AS INST_MNG_NO
		    FROM TB_LWS_DLBR_INCDNT R, TB_LWS_MNG S, TB_LWS_INST C
		         LEFT OUTER JOIN TB_LWS_AGT L ON C.LWS_MNG_NO = L.LWS_MNG_NO AND C.INST_MNG_NO = L.INST_MNG_NO
		    WHERE R.LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
		      AND R.LWS_MNG_NO = S.LWS_MNG_NO
		      AND R.INST_MNG_NO = C.INST_MNG_NO
		    GROUP BY R.LWS_DLBR_MNG_NO
		)
		SELECT S.LWS_DLBR_MNG_NO,
		       S.DLBR_AGND_NM,
		       S.DLBR_DCS_CN,
		       S.DLBR_DMND_CN,
		       S.DLBR_END_CN,
		       S.PRGRS_STTS_NM,
		       
		       TO_CHAR(TO_DATE(S.DLBR_BGNG_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLBR_BGNG_YMD,
		       TO_CHAR(TO_DATE(S.DLBR_END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DLBR_END_YMD,
		       
		       S.DLBR_NO,
		       S.RQST_EMP_NO,
		       S.RQST_EMP_NM,
		       S.RQST_DEPT_NO,
		       S.RQST_DEPT_NM,
		       S.DLBR_SE_NM,
		       I.INCDNT_NO,
		       I.LWS_INCDNT_NM,
		       I.LWS_MNG_NO,
		       I.INST_MNG_NO
		FROM TB_LWS_DLBR S LEFT OUTER JOIN SUITINFO I ON S.LWS_DLBR_MNG_NO = I.LWS_DLBR_MNG_NO
		WHERE S.LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</select>
	
	<select id="getReviewOpinionCnt" resultType="HashMap">
		/* suitSql.getReviewOpinionCnt */
		SELECT COUNT(CASE WHEN DLBR_RSLT_NM = 'Y' THEN 1 END) AS YCNT,
		       COUNT(CASE WHEN DLBR_RSLT_NM = 'N' THEN 1 END) AS NCNT,
		       COUNT(CASE WHEN DLBR_RSLT_NM = 'I' THEN 1 END) AS ICNT,
		       COUNT(CASE WHEN DLBR_RSLT_NM != 'A' THEN 1 END) AS ACNT,
		       COUNT(*) AS TOTALCNT
		FROM TB_LWS_DLBR_MBCMT
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</select>
	
	<update id="updateReviewState" parameterType="HashMap">
		/* suitSql.updateReviewState */
		UPDATE TB_LWS_DLBR
		SET PRGRS_STTS_NM = #{PRGRS_STTS_NM}
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</update>
	
	<update id="updateReviewContInfo" parameterType="HashMap">
		/* suitSql.updateReviewContInfo */
		UPDATE TB_LWS_DLBR
		SET DLBR_DCS_CN = #{DLBR_DCS_CN},
		    PRGRS_STTS_NM = #{PRGRS_STTS_NM}
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</update>
	
	<update id="updateReviewEndInfo" parameterType="HashMap">
		/* suitSql.updateReviewEndInfo */
		UPDATE TB_LWS_DLBR
		SET DLBR_END_CN = #{DLBR_END_CN}
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</update>
	
	<update id="updateCaseReviewyn" parameterType="HashMap">
		/* suitSql.updateCaseReviewyn */
		UPDATE TB_LWS_INST
		SET RMRK_CN = RMRK_CN || ' ' || #{reviewyn}
		WHERE INST_MNG_NO IN (SELECT INST_MNG_NO FROM TB_LWS_DLBR_INCDNT WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO})
	</update>
	
	
	<delete id="deleteReviewComi">
		/* suitSql.deleteReviewComi */
		DELETE TB_LWS_DLBR_MBCMT
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</delete>
	
	<delete id="deleteReviewCase">
		/* suitSql.deleteReviewCase */
		DELETE TB_LWS_DLBR_INCDNT
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</delete>
	
	<delete id="deleteReviewInfo">
		/* suitSql.deleteReviewInfo */
		DELETE TB_LWS_DLBR
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</delete>
	
	
	<update id="updateReviewComi" parameterType="HashMap">
		/* suitSql.updateReviewComi */
		UPDATE TB_LWS_DLBR_MBCMT
		SET DLBR_RSLT_NM = #{DLBR_RSLT_NM},
		    DLBR_OPNN_CN = #{DLBR_OPNN_CN}
		WHERE DLBR_MBCMT_MNG_NO = #{DLBR_MBCMT_MNG_NO}
		  AND DLBR_CMT_MNG_NO = #{DLBR_CMT_MNG_NO}
		  AND LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
	</update>
	
	<select id="SelectOpinionEndCnt" resultType="int">
		/* suitSql.SelectOpinionEndCnt */
		SELECT COUNT(*)
		FROM TB_LWS_DLBR_MBCMT
		WHERE LWS_DLBR_MNG_NO = #{LWS_DLBR_MNG_NO}
		  AND DLBR_RSLT_NM IS NULL
	</select>
	
	<select id="getAppCaseCnt" resultType="int">
		/* suitSql.getAppCaseCnt */
		SELECT COUNT(*)
		FROM TB_LWS_INST
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		  AND INST_CD IN (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_LCLSF_ENG_NM = 'CASECD' AND Z.CD_NM LIKE '%신청%')
	</select>
	
	
	<select id="selectCaseInfoBase" resultType="HashMap">
		/* suitSql.selectCaseInfoBase */
		SELECT A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.CT_CD) AS CT_NM
		     , A.INCDNT_NO
		     , CASE WHEN B.LWS_SE = 'J' THEN (SELECT Z.LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.INST_MNG_NO = A.INST_MNG_NO AND Z.LWS_CNCPR_SE = 'PI' AND ROWNUM = 1)
		            WHEN B.LWS_SE = 'P' THEN (SELECT Z.LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.INST_MNG_NO = A.INST_MNG_NO AND Z.LWS_CNCPR_SE = 'WON' AND ROWNUM = 1)
		       END LWS_CNCPR_NM
		FROM TB_LWS_INST A LEFT OUTER JOIN TB_LWS_MNG B ON A.LWS_MNG_NO = B.LWS_MNG_NO
		WHERE 1=1
		<if test="INST_MNG_NO != '' and INST_MNG_NO != null">
		  AND A.INST_MNG_NO = #{INST_MNG_NO}
		</if>
		<if test="LWS_MNG_NO != '' and LWS_MNG_NO != null">
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		</if>
	</select>
	
	<select id="selectCaseInfoBaseAll" resultType="HashMap">
		/* suitSql.selectCaseInfoBaseAll */
		SELECT A.INST_MNG_NO
		     , A.LWS_MNG_NO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.CT_CD) AS CT_NM
		     , A.INCDNT_NO
		     , CASE WHEN B.LWS_SE = 'J' THEN (SELECT Z.LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.INST_MNG_NO = A.INST_MNG_NO AND Z.LWS_CNCPR_SE = 'PI' AND ROWNUM = 1)
		            WHEN B.LWS_SE = 'P' THEN (SELECT Z.LWS_CNCPR_NM FROM TB_LWS_CNCPR Z WHERE Z.INST_MNG_NO = A.INST_MNG_NO AND Z.LWS_CNCPR_SE = 'WON' AND ROWNUM = 1)
		       END LWS_CNCPR_NM
		FROM TB_LWS_INST A
		   , TB_LWS_MNG B 
		WHERE B.LWS_MNG_NO = A.LWS_MNG_NO 
		  AND B.LAST_INST_CD = A.INST_CD
		  AND A.JDGM_CFMTN_YMD IS NULL
		  AND A.CT_CD IS NOT NULL
		  AND A.INCDNT_NO IS NOT NULL
	</select>
	
	
	<select id="getMatchedDate" resultType="HashMap">
		/* suitSql.getMatchedDate */
		SELECT DATE_MNG_NO, DATE_RSLT_CN
		FROM TB_LWS_DATE
		WHERE INST_MNG_NO = #{INST_MNG_NO}
		  AND DATE_INSP_CN = #{DATE_INSP_CN}
		  AND ROWNUM = 1
	</select>
	
	<insert id="insertCaseInfoDateData" parameterType="HashMap">
		<selectKey keyProperty="DATE_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertCaseInfoDateData */
		INSERT INTO TB_LWS_DATE (
		    DATE_MNG_NO
		  , LWS_MNG_NO
		  , INST_MNG_NO
		  , DATE_TYPE_CD
		  , DATE_YMD
		  
		  , DATE_PLC_NM
		  , DATE_TM
		  
		  , DATE_CN
		  , DATE_RSLT_CN
		  , NOTI_YN
		  , HWRT_REG_YN
		  , DATE_INSP_CN
		  , DEL_YN            /* 삭제여부 */
		  , WRTR_EMP_NM       /* 작성직원명 */
		  , WRTR_EMP_NO       /* 작성직원번호 */
		  , WRT_YMD           /* 작성일자 */
		  , WRT_DEPT_NM       /* 작성부서명 */
		  , WRT_DEPT_NO       /* 작성부서번호 */
		) VALUES (
		    #{DATE_MNG_NO}
		  , #{LWS_MNG_NO}
		  , #{INST_MNG_NO}
		  , (
		     SELECT Z.CD_MNG_NO
		     FROM TB_COM_CD Z
		     WHERE Z.CD_LCLSF_ENG_NM = 'DATEGBN'
		       AND CD_NM LIKE '%'||#{DATE_TYPE_NM}||'%'
		       AND USE_YN = 'Y'
		       AND ROWNUM = 1
		    )
		  , REPLACE(#{DATE_YMD}, '-', '')
		  
		  , #{DATE_PLC_NM}
		  , #{DATE_TM}
		  
		  , #{DATE_CN}
		  , #{DATE_RSLT_CN}
		  , 'N'
		  , 'N'
		  , #{DATE_INSP_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateCaseInfoDateData" parameterType="HashMap">
		/* suitSql.updateCaseInfoDateData */
		UPDATE TB_LWS_DATE
		SET DATE_CN = #{DATE_CN},
		    DATE_RSLT_CN = #{DATE_RSLT_CN},
		    DATE_INSP_CN = #{DATE_INSP_CN}
		WHERE DATE_MNG_NO = #{DATE_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	
	<select id="getMatchedDoc" resultType="HashMap">
		/* suitSql.getMatchedDoc */
		SELECT DOC_MNG_NO, DOC_RSLT_CN
		FROM TB_LWS_SBMSN_TMTL
		WHERE INST_MNG_NO = #{INST_MNG_NO}
		  AND DOC_INSP_CN = #{DOC_INSP_CN}
		  AND ROWNUM = 1
	</select>
	
	<insert id="insertCaseInfoDocData" parameterType="HashMap">
		<selectKey keyProperty="DOC_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertCaseInfoDocData */
		INSERT INTO TB_LWS_SBMSN_TMTL (
		    DOC_MNG_NO
		  , INST_MNG_NO
		  , LWS_MNG_NO
		  , DOC_SE
		  , DOC_YMD
		  , DOC_RSLT_CN
		  , DOC_CN
		  , DOC_TYPE_CD
		  , HWRT_REG_YN
		  , DOC_INSP_CN
		  , DEL_YN
		  , WRTR_EMP_NM
		  , WRTR_EMP_NO
		  , WRT_YMD
		  , WRT_DEPT_NM
		  , WRT_DEPT_NO
		) VALUES (
		    #{DOC_MNG_NO}
		  , #{INST_MNG_NO}
		  , #{LWS_MNG_NO}
		  , (
		     CASE WHEN #{DOC_CN} LIKE '%제출%' THEN 'J'
		          WHEN #{DOC_CN} LIKE '%송달%' THEN 'S'
		          WHEN #{DOC_CN} LIKE '%명령%' THEN 'C'
		          ELSE 'J'
		     END
		    )
		  , REPLACE(#{DOC_YMD}, '-', '')
		  , #{DOC_RSLT_CN}
		  , #{DOC_CN}
		  , (
		     SELECT Z.CD_MNG_NO
		     FROM TB_COM_CD Z
		     WHERE Z.CD_LCLSF_ENG_NM = 'DOCGBN'
		       AND CD_NM = '나의사건검색'
		       AND USE_YN = 'Y'
		       AND ROWNUM = 1
		    )
		  , 'N'
		  , #{DOC_INSP_CN}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<update id="updateCaseInfoDocData" parameterType="HashMap">
		/* suitSql.updateCaseInfoDocData */
		UPDATE TB_LWS_SBMSN_TMTL
		SET DOC_CN = #{DOC_CN},
		    DOC_RSLT_CN = #{DOC_RSLT_CN},
		    DOC_INSP_CN = #{DOC_INSP_CN}
		WHERE DOC_MNG_NO = #{DOC_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
	</update>
	
	
	
	
	<select id="selectProgList" resultType="HashMap">
		/* suitSql_selectProgList_사건진행목록조회 */
		SELECT DOCGBN
		     , SEQ
		     , LWS_MNG_NO
		     , INST_MNG_NO
		     , PROGDT
		     , CONT
		     , RESULT
		     , HANDYN
		FROM (
		    SELECT 'DATE' AS DOCGBN
		         , DATE_MNG_NO  AS SEQ
		         , LWS_MNG_NO
		         , INST_MNG_NO
		         , TO_CHAR(TO_DATE(DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS PROGDT
		         , DATE_CN      AS CONT
		         , DATE_RSLT_CN AS RESULT
		         <!-- , HWRT_REG_YN  AS HANDYN -->
		         , CASE WHEN HWRT_REG_YN = 'Y' OR HWRT_REG_YN IS NULL THEN '수기'
		                WHEN HWRT_REG_YN = 'N' THEN '대법원'
		           END HANDYN
		    FROM TB_LWS_DATE DA
		    WHERE DA.LWS_MNG_NO = #{LWS_MNG_NO}
		      AND DA.INST_MNG_NO = #{INST_MNG_NO}
		    UNION ALL
		    SELECT 'DOC' AS DOCGBN
		         , DOC_MNG_NO AS SEQ
		         , LWS_MNG_NO
		         , INST_MNG_NO
		         , TO_CHAR(TO_DATE(DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS PROGDT
		         , DOC_CN  AS CONT
		         , DOC_RSLT_CN AS RESULT
		         <!-- , HWRT_REG_YN AS HANDYN -->
		         , CASE WHEN HWRT_REG_YN = 'Y' OR HWRT_REG_YN IS NULL THEN '수기'
		                WHEN HWRT_REG_YN = 'N' THEN '대법원'
		           END HANDYN
		    FROM TB_LWS_SBMSN_TMTL DO
		    WHERE DO.LWS_MNG_NO = #{LWS_MNG_NO}
		      AND DO.INST_MNG_NO = #{INST_MNG_NO}
		)
		ORDER BY PROGDT ASC
	</select>
	
	<select id="getDocMakeInfo1" resultType="HashMap">
		/* suitSql.getDocMakeInfo1 */
		WITH CNCPRW AS (
		    SELECT INST_MNG_NO
		         , LWS_CNCPR_SE
		         , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    WHERE LWS_CNCPR_SE = 'WON'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		CNCPRP AS (
		    SELECT INST_MNG_NO
		         , LWS_CNCPR_SE
		         , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    WHERE LWS_CNCPR_SE = 'PI'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		FLFMT AS (
		    SELECT INST_MNG_NO
		         , LISTAGG(LWS_FLFMT_EMP_NM, ',') WITHIN GROUP (ORDER BY LWS_FLFMT_EMP_NM) AS LWS_FLFMT_EMP_NM
		         , LISTAGG(JBGD_NM || ' ' || LWS_FLFMT_EMP_NM, ',') WITHIN GROUP (ORDER BY LWS_FLFMT_EMP_NM) AS LWS_FLFMT_EMP_NM_2
		         , LISTAGG(B.WRC_TELNO, ',') WITHIN GROUP (ORDER BY LWS_FLFMT_EMP_NM) AS WRC_TELNO
		    FROM TB_LWS_FLFMT A LEFT OUTER JOIN TB_COM_HRIS B ON A.LWS_FLFMT_EMP_NO = B.EMP_NO
		    WHERE FLFMT_YN = 'Y'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO
		),
		TKCG AS (
		    SELECT A.INST_MNG_NO
		         , LISTAGG(B.EMP_NM, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS TKCG_EMP_NM
		         , LISTAGG(B.EMP_NM||'('||B.WRC_TELNO||')', ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS WRC_TELNO
		    FROM TB_LWS_TKCG A, TB_COM_HRIS B
		    WHERE A.USE_YN = 'Y'
		      AND A.INST_MNG_NO = #{INST_MNG_NO}
		      AND A.TKCG_EMP_NO = B.EMP_NO
		    GROUP BY INST_MNG_NO
		),
		AGT AS (
		    SELECT INST_MNG_NO
		         , LISTAGG(LWYR_NM, ',') WITHIN GROUP (ORDER BY LWYR_NM) AS LWYR_NM
		    FROM TB_LWS_AGT
		    WHERE DECODE(DLGT_END_YMD, NULL, '9999-12-31', DLGT_END_YMD) >= TO_CHAR(SYSDATE, 'YYYYMMDD')
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO
		),
		PROG AS (
		    SELECT INST_MNG_NO
		         , LISTAGG(PROGDT || ' ' || TYPE_NM, ',') WITHIN GROUP (ORDER BY PROGDT) AS PROGINFO
		    FROM (
		        SELECT 'DATE' AS DOCGBN
		            , DATE_MNG_NO  AS SEQ
		            , LWS_MNG_NO
		            , INST_MNG_NO
		            , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = DA.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS TYPE_NM
		            , TO_CHAR(TO_DATE(DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS PROGDT
		            , DATE_CN      AS CONT
		        FROM TB_LWS_DATE DA
		        UNION ALL
		        SELECT 'DOC' AS DOCGBN
		            , DOC_MNG_NO AS SEQ
		            , LWS_MNG_NO
		            , INST_MNG_NO
		            , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = DO.DOC_TYPE_CD AND Z.USE_YN = 'Y') || ' ' ||
		              CASE WHEN DO.DOC_SE = 'J' THEN '제출'
		                   WHEN DO.DOC_SE = 'S' THEN '송달'
		                   WHEN DO.DOC_SE = 'C' THEN '명령'
		              END AS TYPE_NM
		            , TO_CHAR(TO_DATE(DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS PROGDT
		            , DOC_CN  AS CONT
		        FROM TB_LWS_SBMSN_TMTL DO
		    )
		    GROUP BY INST_MNG_NO
		)
		SELECT A.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , A.LWS_NO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , W.LWS_CNCPR_NM AS WONGONM
		     , P.LWS_CNCPR_NM AS PIGONM
		     , A.LWS_INCDNT_NM
		     , B.PPOF_INCDNT_NO
		     , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.CT_CD AND Z.USE_YN = 'Y') AS CT_NM
		     , A.SPRVSN_DEPT_NM
		     , A.SPRVSN_EMP_NM
		     , E.TKCG_EMP_NM
		     , E.WRC_TELNO
		     , D.LWS_FLFMT_EMP_NM
		     , D.LWS_FLFMT_EMP_NM_2
		     , A.FLGLW_YMD
		     , CASE WHEN A.LWS_SE = 'J' THEN '제소' ELSE '피소' END LWS_SE_NM
		     , B.LWS_EQVL
		     , A.INCDNT_OTLN
		     , F.PROGINFO
		     , B.JDGM_ADJ_YMD
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.JDGM_UP_TYPE_CD AND Z.USE_YN = 'Y') AS JDGM_UP_TYPE_NM
		     , B.RLNG_TMTL_YMD
		     , G.LWYR_NM
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B
		     LEFT OUTER JOIN CNCPRW W ON B.INST_MNG_NO = W.INST_MNG_NO
		     LEFT OUTER JOIN CNCPRP P ON B.INST_MNG_NO = P.INST_MNG_NO
		     LEFT OUTER JOIN FLFMT  D ON B.INST_MNG_NO = D.INST_MNG_NO
		     LEFT OUTER JOIN TKCG   E ON B.INST_MNG_NO = E.INST_MNG_NO
		     LEFT OUTER JOIN PROG   F ON B.INST_MNG_NO = F.INST_MNG_NO
		     LEFT OUTER JOIN AGT    G ON B.INST_MNG_NO = G.INST_MNG_NO
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND B.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<select id="getDocMakeInfo2" resultType="HashMap">
		/* suitSql.getDocMakeInfo2 */
		WITH CNCPRW AS (
		    SELECT INST_MNG_NO
		         , LWS_CNCPR_SE
		         , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    WHERE LWS_CNCPR_SE = 'WON'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		CNCPRP AS (
		    SELECT INST_MNG_NO
		         , LWS_CNCPR_SE
		         , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    WHERE LWS_CNCPR_SE = 'PI'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		FLFMT AS (
		    SELECT INST_MNG_NO
		         , LISTAGG(A.LWS_FLFMT_EMP_NM, ',') WITHIN GROUP (ORDER BY LWS_FLFMT_EMP_NM) AS LWS_FLFMT_EMP_NM
		         , LISTAGG(B.WRC_TELNO, ',') WITHIN GROUP (ORDER BY LWS_FLFMT_EMP_NM) AS WRC_TELNO
		    FROM TB_LWS_FLFMT A LEFT OUTER JOIN TB_COM_HRIS B ON A.LWS_FLFMT_EMP_NO = B.EMP_NO
		    WHERE FLFMT_YN = 'Y'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO
		),
		TKCG AS (
		    SELECT A.INST_MNG_NO
		         , LISTAGG(B.EMP_NM, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS TKCG_EMP_NM
		    FROM TB_LWS_TKCG A, TB_COM_HRIS B
		    WHERE A.USE_YN = 'Y'
		      AND A.INST_MNG_NO = #{INST_MNG_NO}
		      AND A.TKCG_EMP_NO = B.EMP_NO
		    GROUP BY INST_MNG_NO
		),
		DATEINFO AS (
		    SELECT ROW_NUMBER() OVER (PARTITION BY INST_MNG_NO ORDER BY DATE_YMD DESC) AS IDX, INST_MNG_NO, DATE_YMD, SUBSTR(DATE_TM, 0, 2)||':'||SUBSTR(DATE_TM, 3, 4) AS DATE_TM
		    FROM TB_LWS_DATE
		    WHERE INST_MNG_NO = #{INST_MNG_NO}
		      AND DATE_TYPE_CD = '10040221'
		)
		SELECT (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.CT_CD AND Z.USE_YN = 'Y') AS CT_NM
		     , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		     , B.PPOF_INCDNT_NO
		     , A.LWS_INCDNT_NM
		     , WON.LWS_CNCPR_NM AS WONGO
		     , PI.LWS_CNCPR_NM  AS PIGO
		     , E.TKCG_EMP_NM
		     , CASE WHEN A.LWS_SE = 'J' THEN '제소' ELSE '피소' END LWS_SE_NM
		     , D.LWS_FLFMT_EMP_NM
		     , D.WRC_TELNO
		     , (
		        SELECT TO_CHAR(TO_DATE(F.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') || ' ' || DATE_TM AS DATEINFO
		        FROM DATEINFO F
		        WHERE F.INST_MNG_NO = B.INST_MNG_NO
		          AND DATE_YMD = #{GETDATE}
		       ) AS TODAY_DATE
		     , (
		        SELECT TO_CHAR(TO_DATE(F.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') || ' ' || DATE_TM AS DATEINFO
		        FROM DATEINFO F
		        WHERE F.INST_MNG_NO = B.INST_MNG_NO
		         AND IDX = (
		            SELECT Z.IDX
		            FROM DATEINFO Z
		            WHERE Z.INST_MNG_NO = B.INST_MNG_NO
		              AND Z.DATE_YMD = #{GETDATE}
		         )+1
		       ) AS NEXT_DATE
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B
		     LEFT OUTER JOIN CNCPRW   WON ON B.INST_MNG_NO = WON.INST_MNG_NO
		     LEFT OUTER JOIN CNCPRP   PI  ON B.INST_MNG_NO = PI.INST_MNG_NO
		     LEFT OUTER JOIN FLFMT    D   ON B.INST_MNG_NO = D.INST_MNG_NO
		     LEFT OUTER JOIN TKCG     E   ON B.INST_MNG_NO = E.INST_MNG_NO
		WHERE B.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = B.LWS_MNG_NO
	</select>
	
	<select id="getDocMakeInfo3" resultType="HashMap">
		/* suitSql.getDocMakeInfo3 */
		WITH CNCPRW AS (
		    SELECT INST_MNG_NO
		         , LWS_CNCPR_SE
		         , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    WHERE LWS_CNCPR_SE = 'WON'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		CNCPRP AS (
		    SELECT INST_MNG_NO
		         , LWS_CNCPR_SE
		         , LISTAGG(LWS_CNCPR_NM, ',') WITHIN GROUP (ORDER BY LWS_CNCPR_NM) AS LWS_CNCPR_NM
		    FROM TB_LWS_CNCPR
		    WHERE LWS_CNCPR_SE = 'PI'
		      AND INST_MNG_NO = #{INST_MNG_NO}
		    GROUP BY INST_MNG_NO, LWS_CNCPR_SE
		),
		TKCG AS (
		    SELECT A.INST_MNG_NO
		         , LISTAGG(B.EMP_NM, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS TKCG_EMP_NM
		         , LISTAGG(B.WRC_TELNO, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS WRC_TELNO
		         , LISTAGG(B.EML_ADDR, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS EML_ADDR
		         , LISTAGG(C.DEPT_NM, ',') WITHIN GROUP (ORDER BY B.EMP_NM) AS DEPT_NM
		    FROM TB_LWS_TKCG A, TB_COM_HRIS B LEFT OUTER JOIN TB_COM_ORGCHT C ON B.DEPT_NO = C.DEPT_NO
		    WHERE A.USE_YN = 'Y'
		      AND A.INST_MNG_NO = #{INST_MNG_NO}
		      AND A.TKCG_EMP_NO = B.EMP_NO
		    GROUP BY INST_MNG_NO
		)
		SELECT (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = B.CT_CD AND Z.USE_YN = 'Y') AS CT_NM
		     , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') AS LWS_UP_TYPE_NM
		     , A.LWS_INCDNT_NM
		     , WON.LWS_CNCPR_NM AS WONGO
		     , PI.LWS_CNCPR_NM  AS PIGO
		     , E.TKCG_EMP_NM
		     , E.DEPT_NM   AS TKCG_DEPT_NM
		     , E.WRC_TELNO AS TKCG_WRC_TELNO
		     , E.EML_ADDR  AS TKCG_EML_ADDR
		     , C.JDAF_CORP_NM || ' ' || C.LWYR_NM AS LWYR_NM
		FROM TB_LWS_MNG  A
		   , TB_LWS_INST B
		     LEFT OUTER JOIN CNCPRW   WON ON B.INST_MNG_NO = WON.INST_MNG_NO
		     LEFT OUTER JOIN CNCPRP   PI  ON B.INST_MNG_NO = PI.INST_MNG_NO
		     LEFT OUTER JOIN TKCG     E   ON B.INST_MNG_NO = E.INST_MNG_NO
		   , TB_LWS_AGT  C
		WHERE A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND B.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWS_MNG_NO = B.LWS_MNG_NO
		<if test="AGT_MNG_NO != null and AGT_MNG_NO != ''">
		  AND C.AGT_MNG_NO = #{AGT_MNG_NO}
		</if>
		  AND B.INST_MNG_NO = C.INST_MNG_NO
	</select>
	
	<select id="getDocMakeInfo3_1" resultType="HashMap">
		/* suitSql.getDocMakeInfo3_1 */
		SELECT *
		FROM (
		    SELECT ROW_NUMBER() OVER (PARTITION BY A.INST_MNG_NO ORDER BY A.FLFMT_BGNG) AS IDX
		         , A.INST_MNG_NO
		         , A.LWS_FLFMT_DEPT_NM
		         , A.LWS_FLFMT_EMP_NM
		         , B.WRC_TELNO
		         , B.EML_ADDR
		    FROM TB_LWS_FLFMT A LEFT OUTER JOIN TB_COM_HRIS B ON A.LWS_FLFMT_EMP_NO = B.EMP_NO
		    WHERE INST_MNG_NO = #{INST_MNG_NO}
		      AND FLFMT_YN = 'Y'
		)
		ORDER BY IDX
	</select>
	
	
	<select id="selectRelCaseList" resultType="HashMap">
		/* suitSql.selectRelCaseList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		           CEIL(ROWNUM/10) PAGE,
		           ROWNUM
		    FROM (
		        SELECT 'S' AS GBN
		             , '['||(SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') ||'-'|| A.LWS_NO || '] [' || 
		               (SELECT REPLACE(Z.INCDNT_NO, '@', '') FROM TB_LWS_INST Z WHERE A.LAST_INST_CD = Z.INST_CD AND ROWNUM = 1) || '] ' || A.LWS_INCDNT_NM AS DOC_NM
		             , A.LWS_MNG_NO AS DOC_PK
		        FROM TB_LWS_MNG A
		        UNION ALL
		        SELECT 'C' AS GBN
		             , '['||CNSTN_DOC_NO||'] ' || CNSTN_TTL AS DOC_NM
		             , CNSTN_MNG_NO AS DOC_PK
		        FROM TB_CNSTN_MNG A
		        UNION ALL
		        SELECT 'A' AS GBN
		             , '['||CVTN_DOC_NO||'] ' || CVTN_TTL AS DOC_NM
		             , CVTN_MNG_NO AS DOC_PK
		        FROM TB_CVTN_MNG A
		    ) A
		    WHERE DOC_PK <![CDATA[<>]]> #{PK}
		    <if test="schGbn != '' and schGbn != null">
		      AND GBN = #{schGbn}
		      </if>
		    <if test="schTxt != '' and schTxt != null">
		      AND DOC_NM LIKE '%'||#{schTxt}||'%'
		    </if>
		) B
		WHERE PAGE = #{pageno}
	</select>
	
	<select id="getrelCaseListTotal" resultType="int">
		/* suitSql.getrelCaseListTotal */
		SELECT COUNT(*) AS CNT
		FROM (
		    SELECT 'S' AS GBN
		         , '['||(SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') ||'-'|| A.LWS_NO || '] ' || A.LWS_INCDNT_NM AS DOC_NM
		         , A.LWS_MNG_NO AS DOC_PK
		    FROM TB_LWS_MNG A
		    UNION ALL
		    SELECT 'C' AS GBN
		         , '['||CNSTN_DOC_NO||'] ' || CNSTN_TTL AS DOC_NM
		         , CNSTN_MNG_NO AS DOC_PK
		    FROM TB_CNSTN_MNG A
		    UNION ALL
		    SELECT 'A' AS GBN
		         , '['||CVTN_DOC_NO||'] ' || CVTN_TTL AS DOC_NM
		         , CVTN_MNG_NO AS DOC_PK
		    FROM TB_CVTN_MNG A
		) A
		WHERE DOC_PK <![CDATA[<>]]> #{PK}
		<if test="schGbn != '' and schGbn != null">
		  AND GBN = #{schGbn}
		  </if>
		<if test="schTxt != '' and schTxt != null">
		  AND DOC_NM LIKE '%'||#{schTxt}||'%'
		</if>
	</select>
	
	<select id="selectRelCase" resultType="HashMap">
		/* suitSql.selectRelCase */
		SELECT DOC_MNG_NO
		     , MAIN_DOC_MNG_NO
		     , REL_DOC_MNG_NO
		     , DOC_SE
		     , CASE WHEN DOC_SE = 'S' THEN '소송'
		            WHEN DOC_SE = 'C' THEN '자문'
		            WHEN DOC_SE = 'A' THEN '협약'
		       END DOC_SE_NM
		     , CASE WHEN DOC_SE = 'S' THEN (SELECT '['||(SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.LWS_UP_TYPE_CD AND Z.USE_YN = 'Y') ||'-'|| A.LWS_NO || '] ' || A.LWS_INCDNT_NM AS DOC_NM FROM TB_LWS_MNG A WHERE A.LWS_MNG_NO = REL_DOC_MNG_NO)
		            WHEN DOC_SE = 'C' THEN (SELECT '['||CNSTN_DOC_NO||'] ' || CNSTN_TTL AS DOC_NM FROM TB_CNSTN_MNG A WHERE A.CNSTN_MNG_NO = REL_DOC_MNG_NO)
		            WHEN DOC_SE = 'A' THEN (SELECT '['||CVTN_DOC_NO||'] ' || CVTN_TTL AS DOC_NM FROM TB_CVTN_MNG A WHERE A.CVTN_MNG_NO = REL_DOC_MNG_NO)
		       END DOC_NM
		FROM TB_COM_REL_DOC
		WHERE MAIN_DOC_MNG_NO = #{PK}
	</select>
	
	<insert id="insertRelCase" parameterType="HashMap">
		<selectKey keyProperty="DOC_MNG_NO" resultType="int" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql.insertRelCase */
		INSERT INTO TB_COM_REL_DOC (
		    DOC_MNG_NO          /* 문서관리번호 */
		  , MAIN_DOC_MNG_NO    /* 주요문서관리번호 */
		  , REL_DOC_MNG_NO     /* 관련문서관리번호 */
		  , DOC_SE             /* 문서구분 */
		  , REL_DOC_SE
		  , DEL_YN             /* 삭제여부 */
		  , WRTR_EMP_NM        /* 작성직원명 */
		  , WRTR_EMP_NO        /* 작성직원번호 */
		  , WRT_YMD            /* 작성일자 */
		  , WRT_DEPT_NM        /* 작성부서명 */
		  , WRT_DEPT_NO        /* 작성부서번호 */
		) VALUES (
		    #{DOC_MNG_NO}
		  , #{MAIN_DOC_MNG_NO}
		  , #{REL_DOC_MNG_NO}
		  , #{DOC_SE}
		  , #{DOC_SE}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<delete id="deleteRelCase">
		/* suitSql.deleteRelCase */
		DELETE TB_COM_REL_DOC
		WHERE MAIN_DOC_MNG_NO = #{MAIN_DOC_MNG_NO}
		  AND REL_DOC_MNG_NO = #{REL_DOC_MNG_NO}
	</delete>
	
	
	
	
	<update id="setRfslRsn" parameterType="HashMap">
		/* suitSql.setRfslRsn */
		UPDATE TB_LWS_AGT
		SET RCPT_YN = #{RCPT_YN}
		  , RFSL_RSN = #{RFSL_RSN}
		  , PRSL_PSBLTY_YN = #{RCPT_YN}
		WHERE INST_MNG_NO = #{DOC_PK}
		  AND LWYR_MNG_NO = #{WRTR_EMP_NO}
	</update>
	
	<select id="getLeftDate" resultType="HashMap">
		/* suitSql.getLeftDate */
		SELECT COUNT(CASE WHEN DATE_GBN = '기일' AND TO_DATE(DATE_YMD, 'YYYY-MM-DD') BETWEEN TO_DATE(SYSDATE, 'YYYY-MM-DD') AND TRUNC(SYSDATE + 7) THEN 1 END) AS DATE_CNT_7
		     , COUNT(CASE WHEN DATE_GBN = '기일' AND TO_DATE(DATE_YMD, 'YYYY-MM-DD') BETWEEN TO_DATE(SYSDATE, 'YYYY-MM-DD') AND TRUNC(SYSDATE + 3) THEN 1 END) AS DATE_CNT_3
		     , COUNT(CASE WHEN DATE_GBN = '기일' THEN 1 END) AS DATE_CNT
		     , COUNT(CASE WHEN DATE_GBN = '불변기일' THEN 1 END) AS UNCH_DATE_CNT
		     , COUNT(CASE WHEN DATE_GBN = '불변기일' AND TO_DATE(DATE_YMD, 'YYYY-MM-DD') BETWEEN TO_DATE(SYSDATE, 'YYYY-MM-DD') AND TRUNC(SYSDATE + 7) THEN 1 END) AS UNCH_DATE_CNT_7
		     , COUNT(CASE WHEN DATE_GBN = '불변기일' AND TO_DATE(DATE_YMD, 'YYYY-MM-DD') BETWEEN TO_DATE(SYSDATE, 'YYYY-MM-DD') AND TRUNC(SYSDATE + 3) THEN 1 END) AS UNCH_DATE_CNT_3
		     , COUNT(CASE WHEN DATE_GBN = '서면' THEN 1 END) AS DOC_CNT
		     , COUNT(CASE WHEN DATE_GBN = '서면' AND TO_DATE(DATE_YMD, 'YYYY-MM-DD') BETWEEN TO_DATE(SYSDATE, 'YYYY-MM-DD') AND TRUNC(SYSDATE + 7) THEN 1 END) AS DOC_CNT_7
		     , COUNT(CASE WHEN DATE_GBN = '서면' AND TO_DATE(DATE_YMD, 'YYYY-MM-DD') BETWEEN TO_DATE(SYSDATE, 'YYYY-MM-DD') AND TRUNC(SYSDATE + 3) THEN 1 END) AS DOC_CNT_3
		FROM (
		    SELECT A.*
		    FROM (
		       SELECT '기일' AS DATE_GBN
		            , A.DATE_MNG_NO
		            , A.INST_MNG_NO
		            , A.LWS_MNG_NO
		            , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		            , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		            , DECODE(A.DATE_TM, '', '', SUBSTR(A.DATE_TM, 0, 2) || '시 ' || SUBSTR(A.DATE_TM, 3, 4) || '분') AS VIEWTIME
		            , A.DATE_PLC_NM
		       FROM TB_LWS_DATE A
		          , TB_LWS_INST B
		       WHERE A.INST_MNG_NO = B.INST_MNG_NO
				  AND REPLACE(A.DATE_YMD,'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		       UNION ALL
		       SELECT '불변기일' AS DATE_GBN
		            , A.DOC_MNG_NO
		            , A.INST_MNG_NO
		            , A.LWS_MNG_NO
		            , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		            , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		            , '' AS VIEWTIME
		            , '' AS DATE_PLC_NM
		       FROM TB_LWS_SBMSN_TMTL A
		          , TB_LWS_INST B
		          , TB_LWS_UNCH_DATE C
		       WHERE A.DOC_TYPE_CD = C.REL_ARTCL_TYPE_CD
		         AND A.INST_MNG_NO = B.INST_MNG_NO
		         AND C.USE_YN = 'Y'
		         AND REPLACE(TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD'),'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		       UNION ALL
		       SELECT '불변기일' AS DATE_GBN
		            , A.DATE_MNG_NO
		            , A.INST_MNG_NO
		            , A.LWS_MNG_NO
		            , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		            , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		            , '' AS VIEWTIME
		            , '' AS DATE_PLC_NM
		       FROM TB_LWS_DATE A
		          , TB_LWS_INST B
		          , TB_LWS_UNCH_DATE C
		       WHERE A.DATE_TYPE_CD = C.REL_ARTCL_TYPE_CD
		         AND A.INST_MNG_NO = B.INST_MNG_NO
		         AND C.USE_YN = 'Y'
		         AND REPLACE(TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD'),'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		       UNION ALL
		       SELECT '서면' AS DATE_GBN
		            , A.DOC_MNG_NO
		            , A.INST_MNG_NO
		            , A.LWS_MNG_NO
		            , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || A.DOC_YMD AS DATE_TYPE_NM
		            , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		            , '' AS VIEWTIME
		            , '' AS DATE_PLC_NM
		       FROM TB_LWS_SBMSN_TMTL A
		          , TB_LWS_INST B
		       WHERE A.INST_MNG_NO = B.INST_MNG_NO
		       AND REPLACE(A.DOC_YMD,'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		   ) A
		)
	</select>
	
	<select id="getMainDateCnt" resultType="int">
		/* suitSql.getMainDateCnt */
		SELECT COUNT(*)
		FROM (
		    SELECT '기일' AS DATE_GBN
		         , A.DATE_MNG_NO
		         , A.INST_MNG_NO
		         , A.LWS_MNG_NO
		         , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		         , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		         , DECODE(A.DATE_TM, '', '', SUBSTR(A.DATE_TM, 0, 2) || '시 ' || SUBSTR(A.DATE_TM, 3, 4) || '분') AS VIEWTIME
		         , A.DATE_PLC_NM
		    FROM TB_LWS_DATE A
		       , TB_LWS_INST B
		    WHERE A.INST_MNG_NO = B.INST_MNG_NO
		      AND REPLACE(A.DATE_YMD,'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		    UNION ALL
		    SELECT '불변기일' AS DATE_GBN
		         , A.DOC_MNG_NO
		         , A.INST_MNG_NO
		         , A.LWS_MNG_NO
		         , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		         , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		         , '' AS VIEWTIME
		         , '' AS DATE_PLC_NM
		    FROM TB_LWS_SBMSN_TMTL A
		       , TB_LWS_INST B
		       , TB_LWS_UNCH_DATE C
		    WHERE A.DOC_TYPE_CD = C.REL_ARTCL_TYPE_CD
		      AND A.INST_MNG_NO = B.INST_MNG_NO
		      AND C.USE_YN = 'Y'
		      AND REPLACE(TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD'),'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		    UNION ALL
		    SELECT '불변기일' AS DATE_GBN
		         , A.DATE_MNG_NO
		         , A.INST_MNG_NO
		         , A.LWS_MNG_NO
		         , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		         , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		         , '' AS VIEWTIME
		         , '' AS DATE_PLC_NM
		    FROM TB_LWS_DATE A
		       , TB_LWS_INST B
		       , TB_LWS_UNCH_DATE C
		    WHERE A.DATE_TYPE_CD = C.REL_ARTCL_TYPE_CD
		      AND A.INST_MNG_NO = B.INST_MNG_NO
		      AND C.USE_YN = 'Y'
		      AND REPLACE(TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD'),'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		    UNION ALL
		    SELECT '서면' AS DATE_GBN
		         , A.DOC_MNG_NO
		         , A.INST_MNG_NO
		         , A.LWS_MNG_NO
		         , '[소송]' || ' ' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || A.DOC_YMD AS DATE_TYPE_NM
		         , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		         , '' AS VIEWTIME
		         , '' AS DATE_PLC_NM
		    FROM TB_LWS_SBMSN_TMTL A
		       , TB_LWS_INST B
		    WHERE A.INST_MNG_NO = B.INST_MNG_NO
		    AND REPLACE(A.DOC_YMD,'-','') <![CDATA[>=]]> REPLACE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'-','')
		) A
		<if test='Grpcd == "C" or Grpcd == "L"'>
		, TB_LWS_TKCG B
		WHERE A.INST_MNG_NO = B.INST_MNG_NO
		  AND TKCG_EMP_NO = #{WRTR_EMP_NO}
		  AND USE_YN = 'Y'
		</if>
	</select>
	
	
	<select id="selectSendLawfirmEndInfo" resultType="HashMap">
		/* suitSql.selectSendLawfirmEndInfo */
		SELECT A.*
		     , C.EMP_PK_NO
		     , C.EMP_NM
		FROM (
		    SELECT A.LWYR_NM || ' ' || C.JDAF_CORP_NM AS LWYR_NM
		         , TO_CHAR(TO_DATE(B.ENTRST_END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS ENTRST_END_YMD
		    FROM TB_COM_LWYR A
		      , (
		         SELECT MAX(ENTRST_END_YMD) AS ENTRST_END_YMD
		              , LWYR_MNG_NO
		         FROM TB_COM_LWYR_TNR
		         GROUP BY LWYR_MNG_NO
		        ) B
		      , TB_COM_JDAF_CORP C
		    WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
		      AND A.LWYR_CTRT_STTS_NM = 'Y'
		      AND A.JDAF_CORP_MNG_NO = C.JDAF_CORP_MNG_NO
		      AND TO_DATE(B.ENTRST_END_YMD, 'YYYY-MM-DD') = TRUNC(SYSDATE + 30)
		) A, TB_COM_MNGR_AUTHRT B, TB_COM_HRIS C
		WHERE B.EMP_NO = C.EMP_NO
		  AND B.MNGR_AUTHRT_NM = 'I'
	</select>
	
	<select id="getChrgEmpInfo1" resultType="HashMap">
		/* suitSql.getChrgEmpInfo */
		SELECT A.LWS_NO
		     , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		FROM TB_LWS_MNG A, TB_LWS_INST B
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.LWS_MNG_NO = #{LWS_MNG_NO}
		  AND B.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<select id="getChrgEmpInfo2" resultType="HashMap">
		/* suitSql.getChrgEmpInfo */
		SELECT B.EMP_PK_NO
		     , B.MBL_TELNO
		     , B.EMP_NM
		     , B.EMP_NO
		     , C.LWS_NO
		     , REPLACE(D.INCDNT_NO, '@', '') AS INCDNT_NO
		FROM TB_LWS_TKCG A, TB_COM_HRIS B, TB_LWS_MNG C, TB_LWS_INST D
		WHERE A.TKCG_EMP_NO = B.EMP_NO
		  AND A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.INST_MNG_NO = D.INST_MNG_NO
		  AND C.LWS_MNG_NO  = D.LWS_MNG_NO
	</select>
	
	<select id="getChrgEmpInfo3" resultType="HashMap">
		/* suitSql.getChrgEmpInfo3 */
		SELECT A.EMP_PK_NO
		     , A.MBL_TELNO
		     , A.EMP_NM
		     , B.LWS_NO
		     , REPLACE(C.INCDNT_NO, '@', '') AS INCDNT_NO
		     , (
		        SELECT SUBSTR(XMLAGG(XMLELEMENT(X,',', HH.EMP_NM) ORDER BY HH.EMP_NM).EXTRACT('//text()'),2) AS EMPNM
		        FROM TB_LWS_TKCG ZZ, TB_COM_HRIS HH
		        WHERE ZZ.INST_MNG_NO = C.INST_MNG_NO
		          AND ZZ.USE_YN = 'Y'
		          AND ZZ.TKCG_EMP_NO = HH.EMP_NO
		       ) AS EMPNM
		FROM TB_COM_HRIS A, TB_LWS_MNG B, TB_LWS_INST C, TB_COM_MNGR_AUTHRT D, TB_LWS_AGT E
		WHERE B.LWS_MNG_NO = C.LWS_MNG_NO
		  AND E.INST_MNG_NO = C.INST_MNG_NO
		  AND E.AGT_MNG_NO = #{AGT_MNG_NO}
		  AND D.EMP_NO = A.EMP_NO
		  AND D.MNGR_AUTHRT_NM = #{ROLE}
	</select>
	
	<select id="getChrgEmpInfo4" resultType="HashMap">
		SELECT A.EMP_PK_NO
		     , A.EMP_NM
		FROM TB_COM_HRIS A, TB_COM_MNGR_AUTHRT B
		WHERE A.EMP_NO = B.EMP_NO
		  AND B.MNGR_AUTHRT_NM = #{MNGR_AUTHRT_NM}
	</select>
	
	<select id="selectSendAgtInfo" resultType="HashMap">
		SELECT B.*
		FROM TB_LWS_AGT A
		   , TB_COM_LWYR B
		WHERE A.LWYR_MNG_NO = B.LWYR_MNG_NO
		  AND A.INST_MNG_NO = #{INST_MNG_NO}
	</select>
	
	<select id="selectSendUserList" resultType="HashMap">
		/* suitSql.selectSendUserList */
		SELECT A.DATE_YMD || ' ' || A.DATE_TYPE_NM AS DATE_TYPE_NM
		     , A.DATE_YMD
		     , C.LWS_NO
		     , REPLACE(B.INCDNT_NO, '@', '') AS INCDNT_NO
		     , HH.EMP_NM
		     , HH.EMP_PK_NO
		     , HH.MBL_TELNO
		FROM (
		        SELECT A.DATE_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , REPLACE(B.INCDNT_NO, '@', '') || ' ' || (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = A.DATE_TYPE_CD AND Z.USE_YN = 'Y') AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		             , DECODE(A.DATE_TM, '', '', SUBSTR(A.DATE_TM, 0, 2) || '시 ' || SUBSTR(A.DATE_TM, 3, 4) || '분') AS VIEWTIME
		             , A.DATE_PLC_NM
		        FROM TB_LWS_DATE A
		           , TB_LWS_INST B
		        WHERE A.INST_MNG_NO = B.INST_MNG_NO
		        UNION ALL
		        SELECT A.DOC_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		             , '' AS VIEWTIME
		             , '' AS DATE_PLC_NM
		        FROM TB_LWS_SBMSN_TMTL A
		           , TB_LWS_INST B
		           , TB_LWS_UNCH_DATE C
		        WHERE A.DOC_TYPE_CD = C.REL_ARTCL_TYPE_CD
		          AND A.INST_MNG_NO = B.INST_MNG_NO
		          AND C.USE_YN = 'Y'
		        UNION ALL
		        SELECT A.DATE_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , REPLACE(B.INCDNT_NO, '@', '') || ' ' || C.UNCH_DATE_NM AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DATE_YMD, 'YYYY-MM-DD') + C.INV_DAY_CNT, 'YYYY-MM-DD') AS DATE_YMD
		             , '' AS VIEWTIME
		             , '' AS DATE_PLC_NM
		        FROM TB_LWS_DATE A
		           , TB_LWS_INST B
		           , TB_LWS_UNCH_DATE C
		        WHERE A.DATE_TYPE_CD = C.REL_ARTCL_TYPE_CD
		          AND A.INST_MNG_NO = B.INST_MNG_NO
		          AND C.USE_YN = 'Y'
		        UNION ALL
		        SELECT A.DOC_MNG_NO
		             , A.INST_MNG_NO
		             , A.LWS_MNG_NO
		             , REPLACE(B.INCDNT_NO, '@', '') || ' ' || A.DOC_YMD AS DATE_TYPE_NM
		             , TO_CHAR(TO_DATE(A.DOC_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DATE_YMD
		             , '' AS VIEWTIME
		             , '' AS DATE_PLC_NM
		        FROM TB_LWS_SBMSN_TMTL A
		           , TB_LWS_INST B
		        WHERE A.INST_MNG_NO = B.INST_MNG_NO
		    ) A, TB_LWS_INST B, TB_LWS_MNG C, TB_LWS_TKCG ZZ, TB_COM_HRIS HH
		WHERE A.LWS_MNG_NO = C.LWS_MNG_NO
		  AND A.INST_MNG_NO = B.INST_MNG_NO
		  AND B.LWS_MNG_NO = C.LWS_MNG_NO
		  AND ZZ.INST_MNG_NO = A.INST_MNG_NO
		  AND ZZ.USE_YN = 'Y'
		  AND ZZ.TKCG_EMP_NO = HH.EMP_NO
		<![CDATA[
		  AND REPLACE(A.DATE_YMD,'-','') >= REPLACE(#{start},'-','')
		]]>
		<![CDATA[
		  AND REPLACE(A.DATE_YMD,'-','') <= REPLACE(#{end},'-','')
		]]>
	</select>	
	
	<select id="getPwChg" resultType="String">
		<if test="GRPCD != null and GRPCD != ''">
		  <if test='GRPCD == "X"'>
		SELECT CASE WHEN LGN_PSWD = 'seoul123!!!' THEN 'N' ELSE 'Y' END PWCHG
		FROM TB_COM_LWYR
		WHERE LGN_ID = #{LGN_ID}
		  AND LWYR_MNG_NO = #{WRTR_EMP_NO}
		  </if>
		  <if test='GRPCD == "Z"'>
		SELECT CASE WHEN ASST_LGN_PSWD = 'seoul123!!!' THEN 'N' ELSE 'Y' END PWCHG
		FROM TB_COM_LWYR
		WHERE ASST_LGN_ID = #{LGN_ID}
		  AND LWYR_MNG_NO = #{WRTR_EMP_NO}
		  </if>
		</if>
		<if test="GRPCD == null or GRPCD == ''">
		SELECT CASE WHEN LGN_PSWD = 'seoul123!!!' THEN 'N' ELSE 'Y' END PWCHG
		FROM TB_COM_LWYR
		WHERE LGN_ID = #{LGN_ID}
		  AND LWYR_MNG_NO = #{WRTR_EMP_NO}
		</if>
	</select>
	
	<select id="getLwyrMngNo" resultType="String">
		SELECT LWYR_MNG_NO
		FROM TB_COM_LWYR
		WHERE LWYR_NM = #{usernm}
		  AND MBL_TELNO = #{mblno}
		<if test='ASST_YN == "Y"'>
		  AND ASST_LGN_ID = #{LGN_ID}
		</if>
		<if test='ASST_YN != "Y"'>
		  AND LGN_ID = #{LGN_ID}
		</if>
	</select>
	
	<select id="getResetLwyrInfo" resultType="int">
		/* suitSql.getResetLwyrInfo */
		SELECT COUNT(*)
		FROM TB_COM_LWYR
		WHERE LWYR_NM = #{usernm}
		  AND MBL_TELNO = #{mblno}
		<if test='ASST_YN == "Y"'>
		  AND ASST_LGN_ID = #{LGN_ID}
		</if>
		<if test='ASST_YN != "Y"'>
		  AND LGN_ID = #{LGN_ID}
		</if>
	</select>
	
	<select id="getMainLwsTkcgCnt" resultType="String">
		/* suitSql.getMainLwsTkcgCnt */
	    SELECT COUNT(*)
	    FROM TB_LWS_MNG A
	    /* 대표심급 데이터만 JOIN */
	    LEFT JOIN TB_LWS_INST B ON B.LWS_MNG_NO = A.LWS_MNG_NO AND B.INST_CD = A.LAST_INST_CD
	    LEFT JOIN TB_LWS_TKCG C ON C.INST_MNG_NO = B.INST_MNG_NO
	    WHERE 
	    1=1
	    AND (C.USE_YN = 'N' OR C.USE_YN IS NULL)
	    AND C.TKCG_MNG_NO IS NULL
	    AND A.TRMN_YN = 'N'
	    
	</select>
	
	<select id="getMainLwsCstCnt" resultType="String">
		/* suitSql.getMainLwsCstCnt */
		SELECT SUM(CNT1+CNT2) AS CNT
		FROM (
		    SELECT COUNT(*) AS CNT1
		    FROM TB_LWS_CST A
		    WHERE 1=1
		      AND A.CST_PRCS_SE = 'J' <!-- 지급만 가져와야할지? -->
		      AND A.CST_PRCS_CMPTN_YN = 'N' <!-- 미처리 -->
		) A
		, (
		    SELECT COUNT(*) AS CNT2
		    FROM TB_LWS_AGT
		    WHERE GIVE_YN = 'N'
		      AND APRV_YN = 'Y'
		)
	</select>
	
	<select id="selectMainLwsTkcgList" resultType="HashMap">
		/* suitSql.selectMainLwsTkcgList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM (
		        SELECT
		        	A.LWS_MNG_NO
		        	, A.INST_MNG_NO
					, TO_CHAR(TO_DATE(A.WRT_YMD, 'YYYYMMDD'), 'YYYY-MM-DD')AS REG_YMD
			        , D.CD_NM
			        , B.LWS_INCDNT_NM
			    FROM TB_LWS_INST A
				    /* 대표심급 데이터만 JOIN */
				    LEFT JOIN TB_LWS_MNG B ON B.LWS_MNG_NO = A.LWS_MNG_NO AND B.LAST_INST_CD = A.INST_CD
				    LEFT JOIN TB_LWS_TKCG C ON C.INST_MNG_NO = A.INST_MNG_NO
				    LEFT JOIN TB_COM_CD D ON D.CD_MNG_NO = A.INST_CD AND D.CD_LCLSF_ENG_NM = 'CASECD'
		        WHERE
		        	1=1
		        	AND B.TRMN_YN = 'N' -- 종결여부 N이면 될지
    				AND (C.USE_YN = 'N' OR C.USE_YN IS NULL)
    				AND C.TKCG_MNG_NO IS NULL
   				ORDER BY A.WRT_YMD DESC
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		    	<if test="pageno != null and pageno != ''">
			        page = #{pageno}
			    </if>
		    </if>
		</trim>
	</select>
	
	<select id="selectMainLwsCstList" resultType="HashMap">
		/* suitSql.selectMainLwsCstList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM (
				select 
					B.INST_MNG_NO
					, B.LWS_MNG_NO
				    , (CASE WHEN A.CST_PRCS_SE = 'J' THEN '지급'
				          WHEN A.CST_PRCS_SE = 'H' THEN '회수'
				          ELSE ''
				    END) AS CST_PRCS_SE_KR
				    , D.CD_NM
				    , C.LWS_INCDNT_NM
				    , TO_CHAR(TO_DATE(A.CST_PRCS_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS CST_PRCS_YMD
				FROM TB_LWS_CST A
					LEFT JOIN TB_LWS_INST B ON B.INST_MNG_NO = A.INST_MNG_NO
					LEFT JOIN TB_LWS_MNG C ON C.LWS_MNG_NO = B.LWS_MNG_NO
					LEFT JOIN TB_COM_CD D ON D.CD_MNG_NO = B.INST_CD AND D.CD_LCLSF_ENG_NM = 'CASECD'
				WHERE 1=1
					AND A.CST_PRCS_CMPTN_YN = 'N' -- 미처리
					--AND A.CST_PRCS_SE = 'J' -- 지급만 가져와야할지?
   				ORDER BY A.WRT_YMD DESC
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		    	<if test="pageno != null and pageno != ''">
			        page = #{pageno}
			    </if>
		    </if>
		</trim>
	</select>
	
	<select id="getMainYCnt2" resultType="HashMap">
		/* suitSql.getPregressCnt */
		WITH
		-- 소송 카운트
		LWS AS (
		    SELECT COUNT(DISTINCT M.LWS_MNG_NO) AS CNT
		    FROM TB_LWS_MNG M
		    JOIN TB_LWS_TKCG T ON M.LWS_MNG_NO = T.LWS_MNG_NO
		    WHERE T.DEL_YN = 'N'
		      AND T.USE_YN = 'Y'
		      AND M.DEL_YN = 'N'
		      AND M.TRMN_YN = 'N'
		),
		-- 자문 카운트
		CNSTN AS (
		    SELECT COUNT(*) AS CNT
		    FROM TB_CNSTN_MNG
		    WHERE 1=1
		    	AND PRGRS_STTS_SE_NM NOT IN ('작성중', '접수대기', '완료', '철회', '법률자문 의뢰')
<!-- 		    	AND INSD_OTSD_TASK_SE != 'V' -->
		    	AND (INSD_OTSD_TASK_SE IS NULL OR INSD_OTSD_TASK_SE != 'V')
		    	AND MENU_MNG_NO = '100000131'
		),
		-- 협약 카운트
		CVTN AS (
		    SELECT COUNT(*) AS CNT
		    FROM TB_CVTN_MNG
		    WHERE PRGRS_STTS_SE_NM NOT IN ('작성중', '접수대기', '완료', '철회')
		)
		
		SELECT
		    LWS.CNT AS LWS_TKCG_CNT,
		    CNSTN.CNT AS CNSTN_CNT,
		    CVTN.CNT AS CVTN_CNT,
		    (LWS.CNT + CNSTN.CNT + CVTN.CNT) AS TOTAL_CNT
		FROM LWS, CNSTN, CVTN
	</select>
	
	<select id="selectConAgreeMainList" resultType="HashMap">
		/* suitSql.selectConAgreeMainList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM (
				    SELECT 
				        A.CVTN_MNG_NO AS SEQ1                   /* 협약관리번호             */
				        , A.MENU_MNG_NO AS MENU_NO                  /* 메뉴관리번호             */
				        , A.CVTN_CTRT_TYPE_CD_NM AS VAL1         /* 협약계약유형코드명       */
				        , A.CVTN_TTL AS TTL                     /* 협약제목                 */
				        , TO_CHAR(TO_DATE(A.CVTN_RCPT_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS RCPT_YMD                 /* 협약접수일자             */
				        , 'AGREE'AS GBN
				    FROM 
				        TB_CVTN_MNG A 
				    WHERE 
				        A.MENU_MNG_NO IS NOT NULL
				        AND A.PRGRS_STTS_SE_NM NOT IN ('작성중', '접수대기', '종료', '완료', '철회') -- 완료랑 쫑료 두개를 하나로 맞추기
				    UNION ALL
				    SELECT 
				        A.CNSTN_MNG_NO AS SEQ1
				        , A.MENU_MNG_NO AS MENU_NO         /* 메뉴ID */
				        , '' AS VAL1
				        , A.CNSTN_TTL AS TTL         /* 자문제목 */
				        , TO_CHAR(TO_DATE(A.CNSTN_RCPT_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS RCPT_YMD	/* 접수일자 */ 
				        , 'CON' AS GBN
				    FROM 
				        TB_CNSTN_MNG A 
				    WHERE 
				        A.MENU_MNG_NO = '100000131' 
				        AND (A.INSD_OTSD_TASK_SE IS NULL OR A.INSD_OTSD_TASK_SE != 'V')
				        AND A.PRGRS_STTS_SE_NM NOT IN ('접수대기', '종료', '철회', '법률자문 의뢰') -- 구테이블 OPEN_YN 값 받는 컬럼 만들고 해당 컬럼 N 값인거 조회 안해보면 법률자문 의뢰 삭제해야함/
	   			 ) A
				 ORDER BY RCPT_YMD DESC
			) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		    	<if test="pageno != null and pageno != ''">
			        page = #{pageno}
			    </if>
		    </if>
		</trim>
	</select>
	
	<select id="selectMainLawfirmEndInfoCnt" resultType="String">
		/* suitSql.selectMainLawfirmEndInfoCnt */
		SELECT 
			COUNT(*) 
		<!--     TO_CHAR(TO_DATE(B.ENTRST_END_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS ENTRST_END_YMD -->
		<!--     , TRUNC(SYSDATE + 10) -->
		<!--     ,A.* -->
		FROM TB_COM_LWYR A
		    LEFT JOIN (
		                SELECT 
		                MAX(ENTRST_END_YMD) AS ENTRST_END_YMD
		                , LWYR_MNG_NO
		                FROM TB_COM_LWYR_TNR
		                GROUP BY LWYR_MNG_NO
		              ) B ON B.LWYR_MNG_NO = A.LWYR_MNG_NO
		    LEFT JOIN TB_COM_JDAF_CORP C  ON C.JDAF_CORP_MNG_NO = A.JDAF_CORP_MNG_NO
		WHERE 1=1
			AND (TO_DATE(B.ENTRST_END_YMD, 'YYYYMMDD') BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE + 30))
	</select>
	
	<select id="selectMainLawyerCnt" resultType="String">
		/* suitSql.selectMainLawyerCnt */
		SELECT COUNT(*)
		FROM TB_COM_LWYR A LEFT OUTER JOIN (
		    SELECT MIN(ENTRST_BGNG_YMD) AS FRST_YMD
		         , MAX(ENTRST_BGNG_YMD) AS NOW_YMD
		         , MAX(ENTRST_END_YMD) AS LST_YMD
		         , COUNT(TNR_MNG_NO) AS TNR_CNT
		         , LWYR_MNG_NO
		    FROM TB_COM_LWYR_TNR
		    GROUP BY LWYR_MNG_NO
		) C ON A.LWYR_MNG_NO = C.LWYR_MNG_NO, TB_COM_JDAF_CORP B
		WHERE A.JDAF_CORP_MNG_NO = B.JDAF_CORP_MNG_NO
	</select>
	
	<select id="selectMainLawfirmEndInfoList" resultType="HashMap">
		/* suitSql.selectMainLawfirmEndInfoList */
		SELECT B.*
		FROM (
		    SELECT A.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM (
		        SELECT TO_CHAR(TO_DATE(B.ENTRST_END_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS ENTRST_END_YMD
		             , A.*
		             , C.JDAF_CORP_NM
		        FROM TB_COM_LWYR A
		            LEFT JOIN (
		                SELECT MAX(ENTRST_END_YMD) AS ENTRST_END_YMD
		                     , LWYR_MNG_NO
		                FROM TB_COM_LWYR_TNR
		                GROUP BY LWYR_MNG_NO
		            ) B ON B.LWYR_MNG_NO = A.LWYR_MNG_NO
		            LEFT JOIN TB_COM_JDAF_CORP C ON C.JDAF_CORP_MNG_NO = A.JDAF_CORP_MNG_NO
		        WHERE (TO_DATE(B.ENTRST_END_YMD, 'YYYYMMDD') BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE + 30))
		        ORDER BY ENTRST_END_YMD
		    ) A
		) B
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		      <if test="pageno != null and pageno != ''">
		          page = #{pageno}
		      </if>
		    </if>
		</trim>
	</select>
	
	<select id="selectMainSuitTrmnYnCnt" resultType="HashMap">
		/* suitSql.selectMainSuitTrmnYnCnt */
		SELECT 
		    SUM(CASE WHEN TRMN_YN = 'N' THEN 1 ELSE 0 END) AS CNT1,
		    SUM(CASE WHEN TRMN_YN = 'Y' THEN 1 ELSE 0 END) AS CNT2
		FROM (
		    SELECT DISTINCT B.LWS_MNG_NO, B.TRMN_YN
		    FROM TB_LWS_RQST A
		    JOIN TB_LWS_MNG B ON B.LWS_MNG_NO = A.LWS_MNG_NO
		    WHERE B.DEL_YN = 'N'
		      AND B.TRMN_YN IS NOT NULL
		      AND A.LWS_RQST_EMP_NO =  #{userId}
		) SUB
	</select>
	
	<select id="selectSuitMainList2" resultType="HashMap">
		SELECT D.*
		FROM (
		    SELECT C.*,
		    <if test="pagesize != '' and pagesize != null">
		           CEIL(ROWNUM/#{pagesize}) PAGE,
		    </if>
		           ROWNUM
		    FROM(
		        SELECT A.PRGRS_STTS_NM
		             , A.LWS_INCDNT_NM
		             , TO_CHAR(TO_DATE(A.RQST_RCPT_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS RQST_RCPT_YMD
		             , B.LWS_MNG_NO
		             , C.INST_MNG_NO
		        FROM TB_LWS_RQST A
		             LEFT JOIN TB_LWS_MNG B ON B.LWS_MNG_NO = A.LWS_MNG_NO
		             LEFT JOIN TB_LWS_INST C ON C.LWS_MNG_NO = B.LWS_MNG_NO AND C.INST_CD = B.LAST_INST_CD
		        WHERE B.DEL_YN = 'N'
		          AND B.TRMN_YN IS NOT NULL AND B.TRMN_YN = 'N'
		          AND A.LWS_RQST_EMP_NO =  #{userId}
		        ORDER BY A.RQST_RCPT_YMD
		    ) C
		) D
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    <if test="pagesize != '' and pagesize != null">
		      <if test="pageno != null and pageno != ''">
		          page = #{pageno}
		      </if>
		    </if>
		</trim>
	</select>
	
	<select id="selectRoleInfo" resultType="HashMap">
		/* suitSql.selectRoleInfo_소송권한조회 */
		SELECT DISTINCT *
		FROM (
		    SELECT A.AUTHRT_SE
		     , CASE WHEN A.AUTHRT_SE = 'D' THEN (SELECT D.DEPT_NM FROM TB_COM_ORGCHT D WHERE D.DEPT_NO = A.AUTHRT_DEPT_NO)
		            WHEN A.AUTHRT_SE = 'P' THEN (SELECT U.EMP_NM FROM TB_COM_HRIS U WHERE U.EMP_NO = A.AUTHRT_EMP_NO)
		       END NAME
		     , A.AUTHRT_EMP_NO
		     , A.AUTHRT_DEPT_NO
		    FROM TB_COM_PRSL_AUTHRT A
		    WHERE DOC_MNG_NO = #{DOC_MNG_NO}
		    UNION ALL
		    SELECT 'DW' AS AUTHRT_SE
		         , SPRVSN_DEPT_NM AS NAME
		         , '' AS AUTHRT_EMP_NO
		         , SPRVSN_DEPT_NO AS AUTHRT_DEPT_NO
		    FROM TB_LWS_MNG A
		    WHERE LWS_MNG_NO = #{DOC_MNG_NO}
		)
	</select>
	
	<insert id="insertRole" parameterType="HashMap">
		<selectKey keyProperty="AUTHRT_MNG_NO" resultType="String" order="BEFORE">
			SELECT KEYID.NEXTVAL FROM DUAL
		</selectKey>
		/* suitSql_insertRole_소송열람권한등록 */
		INSERT INTO TB_COM_PRSL_AUTHRT (
		    AUTHRT_MNG_NO
		  , DOC_MNG_NO
		  , DOC_SE
		  , AUTHRT_SE
		  , AUTHRT_EMP_NO
		  , AUTHRT_DEPT_NO
		  , DEL_YN             /* 삭제여부           */
		  , WRTR_EMP_NM        /* 작성직원명         */
		  , WRTR_EMP_NO        /* 작성직원번호       */
		  , WRT_YMD            /* 작성일자           */
		  , WRT_DEPT_NM        /* 작성부서명         */
		  , WRT_DEPT_NO        /* 작성부서번호       */
		) VALUES (
		    #{AUTHRT_MNG_NO}
		  , #{DOC_MNG_NO}
		  , #{DOC_SE}
		  , #{AUTHRT_SE}
		  , #{AUTHRT_EMP_NO}
		  , #{AUTHRT_DEPT_NO}
		  , 'N'
		  , #{WRTR_EMP_NM}
		  , #{WRTR_EMP_NO}
		  , to_char(sysdate,'YYYYMMDD')
		  , #{WRT_DEPT_NM}
		  , #{WRT_DEPT_NO}
		)
	</insert>
	
	<delete id="deleteRole">
		/* suitSql_deleteRole_소송열람권한삭제 */
		DELETE TB_COM_PRSL_AUTHRT
		WHERE DOC_MNG_NO = #{DOC_MNG_NO}
		<if test="DOC_SE != '' and DOC_SE != null">
		  AND DOC_SE = #{DOC_SE}
		</if>
		<if test="AUTHRT_EMP_NO != '' and AUTHRT_EMP_NO != null">
		  AND AUTHRT_EMP_NO = #{AUTHRT_EMP_NO}
		</if>
		<if test="AUTHRT_DEPT_NO != '' and AUTHRT_DEPT_NO != null">
		  AND AUTHRT_DEPT_NO = #{AUTHRT_DEPT_NO}
		</if>
	</delete>
	
	
	
	
	<select id="selectSuitChrgCost" resultType="HashMap">
		/* suitSql.selectSuitChrgCost */
		SELECT C.AGT_MNG_NO
		     , B.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , A.LWS_NO || ' ' || A.LWS_INCDNT_NM || ' ' || REPLACE(B.INCDNT_NO, '@', '') AS CASE_NAME
		     , C.JDAF_CORP_NM || ' ' || C.LWYR_NM AS LWYR_NM
		     , C.OTST_AMT
		     , C.SCS_PAY_AMT
		     , C.ACAP_AMT
		     , TO_CHAR(C.OTST_AMT, 'FM999,999,999,999') AS VIEW_OTST_AMT        /* 착수금액 */
		     , TO_CHAR(C.SCS_PAY_AMT, 'FM999,999,999,999') AS VIEW_SCS_PAY_AMT  /* 성공보수금액 */
		     , TO_CHAR(C.ACAP_AMT, 'FM999,999,999,999') AS VIEW_ACAP_AMT        /* 수임금액 */
		     , TO_CHAR(TO_DATE(C.GIVE_APLY_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_APLY_YMD /* 지급신청일 */
		     , C.APRV_YN
		     , CASE WHEN C.APRV_YN = 'N' THEN '미신청'
		            WHEN C.APRV_YN = 'G' THEN '지급요청'
		            WHEN C.APRV_YN = 'R' THEN '보완요청'
		            WHEN C.APRV_YN = 'T' THEN '보완완료'
		            WHEN C.APRV_YN = 'Y' THEN '승인완료'
		       END VIEW_APRV_YN
		     , TO_CHAR(TO_DATE(C.APRV_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS APRV_YMD
		     , TO_CHAR(TO_DATE(C.GIVE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GIVE_YMD
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B
		   , TB_LWS_AGT C
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND B.INST_MNG_NO = C.INST_MNG_NO
		  AND C.GIVE_YN = 'N'
	</select>
	
	<update id="setDocFileModiDate" parameterType="HashMap">
		/* suitSql.setDocFileModiDate */
		UPDATE TB_LWS_FILE
		SET MDFCN_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		WHERE SRVR_FILE_NM = #{file}
		  AND INST_MNG_NO = #{inst_mng_no}
	</update>
	
	<select id="getOutRcptYn" resultType="String">
		/* suitSql.getOutRcptYn */
		SELECT DECODE(A.RCPT_YN, NULL, 'A', A.RCPT_YN) AS RCPT_YN
		FROM TB_LWS_AGT A, TB_COM_LWYR B
		WHERE A.INST_MNG_NO = #{INST_MNG_NO}
		  AND A.LWYR_MNG_NO = B.LWYR_MNG_NO
		  AND (
		    B.LGN_ID = #{WRTR_EMP_NO} OR
		    B.ASST_LGN_ID = #{WRTR_EMP_NO} OR
		    B.LWYR_MNG_NO = #{WRTR_EMP_NO}
		  )
	</select>
	
	
	<select id="getCostTargetOne" resultType="String">
		/* suitSql.getCostTargetOne */
		SELECT MAX(AGT_MNG_NO) AS AGT_MNG_NO
		FROM TB_LWS_AGT
		WHERE LWS_MNG_NO = #{LWS_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
		  AND LWYR_MNG_NO = #{WRTR_EMP_NO}
	</select>
	
	<update id="setOutCostState" parameterType="HashMap">
		UPDATE TB_LWS_CST
		SET APRV_YN = #{APRV_YN}
		<if test="GIVE_YN != null and GIVE_YN != ''">
		  , GIVE_YN = #{GIVE_YN}
		</if>
		<if test="GIVE_YMD != null and GIVE_YMD != ''">
		  , GIVE_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		</if>
		<if test='APRV_YN == "Y" and GIVE_YN == null and GIVE_YN == ""'>
		  , APRV_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		</if>
		<if test='APRV_YN == "G"'>
		  , GIVE_APLY_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		</if>
		WHERE CST_MNG_NO  = #{CST_MNG_NO}
		  AND INST_MNG_NO = #{INST_MNG_NO}
		  AND LWS_MNG_NO  = #{LWS_MNG_NO}
	</update>
	
	
	
	<select id="selectSuitTotalCost" resultType="HashMap">
		/* suitSql.selectSuitTotalCost */
		SELECT C.CST_MNG_NO
		     , B.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , A.LWS_NO || ' ' || A.LWS_INCDNT_NM || ' ' || REPLACE(B.INCDNT_NO, '@', '') AS CASE_NAME
		     , D.JDAF_CORP_NM || ' ' || D.LWYR_NM AS LWYR_NM
		     , C.PRCS_AMT
		     , (SELECT Z.CD_NM FROM TB_COM_CD Z WHERE Z.CD_MNG_NO = C.CST_SE_CD AND Z.USE_YN = 'Y') AS CST_SE_NM
		     , C.APRV_YN
		     , CASE WHEN C.APRV_YN = 'N' THEN '미신청'
		            WHEN C.APRV_YN = 'G' THEN '지급요청'
		            WHEN C.APRV_YN = 'R' THEN '보완요청'
		            WHEN C.APRV_YN = 'T' THEN '보완완료'
		            WHEN C.APRV_YN = 'Y' THEN '승인완료'
		       END VIEW_APRV_YN
		     , C.GIVE_YN
		     , C.APRV_YMD
		     , C.GIVE_YMD
		     , C.GIVE_APLY_YMD
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B
		   , TB_LWS_CST C
		   , TB_LWS_AGT D
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND B.INST_MNG_NO = C.INST_MNG_NO
		  AND C.CST_TRGT_MNG_NO = D.AGT_MNG_NO
		  AND C.GIVE_YN = 'N'
		  AND C.CST_SE = 'O'
	</select>
	
	<select id="getDateList" resultType="HashMap">
		/* suitSql.getDateList */
		SELECT TO_CHAR(TO_DATE(DATE_YMD, 'YYYY-MM-DD'), 'YYYY. MM. DD.') || ' 변론기일' AS DATE_YMD
		FROM TB_LWS_DATE
		WHERE DATE_TYPE_CD = (SELECT Z.CD_MNG_NO FROM TB_COM_CD Z WHERE Z.CD_NM = '변론기일' AND USE_YN = 'Y')
		  AND INST_MNG_NO = #{INST_MNG_NO}
		ORDER BY DATE_YMD ASC
	</select>
	
	
	<select id="selectBondMain1" resultType="HashMap">
		/* suitSql.selectBondMain1_미완료건 */
		SELECT '['|| B.LWS_NO || '] ' || REPLACE(C.INCDNT_NO, '@', '') || ' ' || B.LWS_INCDNT_NM || ' (' || A.CNCPR_NM || ')' AS DOC_NM
		     , A.LWS_MNG_NO
		     , A.INST_MNG_NO
		     , A.BND_MNG_NO
		     , TO_CHAR(TO_DATE(A.DUDT_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DUDT_YMD
		FROM TB_LWS_BND A
		  , TB_LWS_MNG B
		  , TB_LWS_INST C
		WHERE A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.INST_MNG_NO = C.INST_MNG_NO
		  AND PRGRS_STTS_SE_NM NOT IN ('완납', '전액감액')
		ORDER BY A.DUDT_YMD DESC
	</select>
	
	<select id="selectBondMain2" resultType="HashMap">
		/* suitSql.selectBondMain2_미청구건 */
		SELECT A.LWS_MNG_NO
		     , B.INST_MNG_NO
		     , '[' || A.LWS_NO || ']' || REPLACE(B.INCDNT_NO, '@', '') || ' ' || A.LWS_INCDNT_NM AS DOC_NM
		     , TO_CHAR(TO_DATE(B.JDGM_ADJ_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DUDT_YMD
		FROM TB_LWS_MNG A
		   , TB_LWS_INST B LEFT OUTER JOIN TB_LWS_BND C ON B.INST_MNG_NO = C.INST_MNG_NO AND C.TXTN_NO IS NULL
		WHERE A.LWS_MNG_NO IN (
		    SELECT Z.LWS_MNG_NO
		    FROM TB_LWS_INST Z
		    WHERE Z.APLY_INCDNT_YN = 'Y'
		)
		  AND A.LWS_MNG_NO = B.LWS_MNG_NO
		  AND A.LAST_INST_CD = B.INST_CD
		  AND B.JDGM_CFMTN_YMD IS NOT NULL
		ORDER BY B.JDGM_ADJ_YMD DESC
	</select>
	
	<select id="selectSuitRoleChk" resultType="int">
		SELECT SUM(CNT1+CNT2+CNT3) AS CNT
		FROM (
		    SELECT COUNT(*) AS CNT1
		    FROM TB_COM_PRSL_AUTHRT
		    WHERE DOC_SE = 'SUIT'
		      AND (AUTHRT_EMP_NO = #{WRTR_EMP_NO} OR AUTHRT_DEPT_NO = #{WRT_DEPT_NO})
		      AND DOC_MNG_NO = #{LWS_MNG_NO}
		) A,
		(
		    SELECT COUNT(*) AS CNT2
		    FROM TB_LWS_MNG
		    WHERE (SPRVSN_DEPT_NO = #{WRT_DEPT_NO} OR SPRVSN_EMP_NO = #{WRTR_EMP_NO})
		      AND LWS_MNG_NO = #{LWS_MNG_NO}
		) B,
		(
		    SELECT COUNT(*) AS CNT3
		    FROM TB_LWS_FLFMT Z
		         JOIN TB_LWS_INST ZZ ON Z.INST_MNG_NO = ZZ.INST_MNG_NO
		         JOIN TB_LWS_MNG L ON ZZ.LWS_MNG_NO = L.LWS_MNG_NO
		    WHERE Z.LWS_FLFMT_EMP_NO = #{WRTR_EMP_NO}
		      AND L.LWS_MNG_NO = #{LWS_MNG_NO}
		      AND Z.FLFMT_YN = 'Y'
		) C
	</select>
	
	<select id="chkIncdntNoGbn" resultType="int">
		SELECT COUNT(*)
		FROM TB_LWS_INCDNT_TYPE
		WHERE INCDNT_SE_NM = #{c2}
	</select>
</mapper>

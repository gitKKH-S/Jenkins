<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "/WEB-INF/dtd/mybatis-3-mapper.dtd">
<mapper namespace="settingSql">
	<select id="getSettingList" resultType="HashMap">
		SELECT * FROM TB_LM_RULESETTING
	</select>
	
	<update id="settingUpdate">
		UPDATE TB_LM_RULESETTING SET
			SAVE=#{SAVE},
			PRINT=#{PRINT},
			SECURITYYN=#{SECURITYYN}
		WHERE SETTINGID=#{SETTINGID}
	</update>
	
	<select id="getIbanList" resultType="HashMap">
		SELECT BASTATEID,A.STATEID,B.STATECD,BACD,
		C.STATECD AS NEXTCD,
		REFSTATEID,DOCCD1,DOCCD2,DOCCD3,DOCCD4,APPROVEYN,MAILYN,SANCTIONYN,APPLYYN
		FROM TB_LM_BASTATE A,TB_LM_STATE B,TB_LM_STATE C WHERE A.STATEID=B.STATEID AND A.REFSTATEID=C.STATEID
		<if test="key != null and key != ''">
		and a.stateid=#{key}
		</if>
		ORDER BY BASTATEID
	</select>
	<update id="settingIbanUpdate">
		UPDATE TB_LM_BASTATE SET DOCCD1=#{DOCCD1},DOCCD2=#{DOCCD2},DOCCD3=#{DOCCD3},DOCCD4=#{DOCCD4},APPROVEYN=#{APPROVEYN},MAILYN=#{MAILYN},APPLYYN=#{APPLYYN}
		WHERE BASTATEID=#{BASTATEID}
		<!-- ,SANCTIONYN=#SANCTIONYN# -->
	</update>
	
	<update id="settingIbanUpdate2">
		UPDATE TB_LM_BASTATE SET 
		<if test="REFSTATEID != null">
		REFSTATEID=#{REFSTATEID}
		</if>
		<if test="BACD != null">
		BACD = #{BACD}
		</if>
		WHERE BASTATEID=#{BASTATEID}
	</update>
	
	<select id="getProcessListButton" resultType="HashMap">
		select STATEID,STATECD,REMARK,ISBEGIN from tb_lm_state where statecd not in ('현행','폐지','연혁') 
		<if test="bookcd != null">
			<if test="bookcd == '종헌'">
				and stateid in (select distinct(stateid) from TB_LM_BASTATE where doccd1='Y')
			</if>
			<if test="bookcd == '종법'">
				and stateid in (select distinct(stateid) from TB_LM_BASTATE where doccd2='Y')
			</if>
			<if test="bookcd == '종령'">
				and stateid in (select distinct(stateid) from TB_LM_BASTATE where doccd3='Y')
			</if>
			<if test="bookcd == '규정'">
				and stateid in (select distinct(stateid) from TB_LM_BASTATE where doccd4='Y')
			</if>
		</if>
		order by stateid
	</select>
	
	<resultMap id="resultSetting" type="HashMap">
		<result property="BASTATEID" column="BASTATEID" />
		<result property="STATEID" column="STATEID" />
		<result property="BACD" column="BACD" />
		<result property="REFSTATEID" column="REFSTATEID" />
		<result property="DOCCD1" column="DOCCD1" />
		<result property="DOCCD2" column="DOCCD2" />
		<result property="DOCCD3" column="DOCCD3" />
		<result property="DOCCD4" column="DOCCD4" />
		<result property="APPROVEYN" column="APPROVEYN" />
		<result property="MAILYN" column="MAILYN" />
		<result property="SANCTIONYN" column="SANCTIONYN" />
		<result property="MAILCONTENT" column="MAILCONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="SANCTIONCONTENT" column="SANCTIONCONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>
	
	<select id="getBon" resultType="HashMap">
		select
			BASTATEID,
			STATEID,
			BACD,
			REFSTATEID,
			REFSTATEID2,
			DOCCD1,
			DOCCD2,
			DOCCD3,
			DOCCD4,
			APPROVEYN,
			MAILYN,
			SANCTIONYN,
			MAILCONTENT,
			SANCTIONCONTENT,
			APPLYYN
		from TB_LM_BASTATE WHERE BASTATEID=#{BASTATEID}
	</select>
	
	<update id="setBon">
		UPDATE TB_LM_BASTATE SET
		<set>
			<if test="gbn == 'M'">
				MAILCONTENT=#{content}
			</if>
			<if test="gbn == 'S'">
				SANCTIONCONTENT=#{content}
			</if>
		</set>
		WHERE BASTATEID=#{BASTATEID}
	</update>
	
	<select id="getNextCombo" resultType="HashMap">
		select 
			STATEID,
			STATECD,
			REMARK,
			ISBEGIN
		from TB_LM_STATE where stateid not in ('6000','7000') order by stateid
	</select>
	
	<select id="getButtonList" resultType="HashMap">
		select * from (
			select BASTATEID,to_char(stateid) as STATEID,BACD
	            ,case bacd when '공포' then 
	                                        case (select revcd from tb_lm_rulehistory where bookid = #{BOOKID}) when '폐지' then (select stateid from TB_LM_STATE where statecd='폐지') else refstateid     end
	                    when '바로공포요청' then
	                                        case (select revcd from tb_lm_rulehistory where bookid = #{BOOKID}) when '폐지' then (select stateid from TB_LM_STATE where statecd='폐지') else refstateid     end
	                    else refstateid
	                    end REFSTATEID
	            ,case APPROVEYN when  'Y' then nvl((select approveyn from tb_lm_statehistory where statehistoryid = (select max(statehistoryid) from tb_lm_statehistory where bookid = #{BOOKID})),'D')
	                when 'N' then ''
	                else 'N'
	                end  APPROVEYN
	            ,  MAILYN  ,  SANCTIONYN 
	        from TB_LM_BASTATE where stateid = #{STATEID}
			<if test='ACTIONYN != "Y"'>
	        	and refstateid != '1700'
	        </if>
	        union all
	        select 9999,#{STATEID},'반려('||b.statecd||')',a.stateid,'N','N','ABGT' from tb_lm_statehistory a,tb_lm_state b
	        where a.stateid=b.stateid and statehistoryid = (select MAX(statehistoryid) from TB_LM_statehistory where BOOKID =#{BOOKID} and  #{STATEID}>STATEID)
		)t order by bastateid
	</select>
</mapper>
